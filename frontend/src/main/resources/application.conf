include "frontend-env.conf"

##################################################################
# MAIN CONFIGURATION                                            ##
##################################################################

# Server port is used in Embedded Tomcat. It will be ignored by Single Tomcat
server.port=""
server.port=${?MS_SERVER_PORT_FRONTEND}

spring.application.name="frontend"

# The default assumes single Tomcat where the context path is "/" + the service name
# In embedded Tomcat you'll probably override with using env value "/"
# as we do by default in the *-env.conf files
server.servlet.context-path="/"${spring.application.name}
server.servlet.context-path=${?MS_SERVLET_CONTEXT_PATH_FRONTEND}

application.host="http://localhost:8080"
application.host=${?APPLICATION_HOST}

gsrs.frontend.prefix="ginas/app/ui/"
gsrs.frontend.config.dir="classpath:/static/assets/data"
gsrs.frontend.config.dir=${?FRONTEND_CONFIG_DIR}

debug=false
debug=${?DEBUG_FRONTEND}

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################
# turn off rabbit mq check for now since we don't use it otherwise it will say we are down
management.health.rabbit.enabled: false

management.endpoints.web.base-path="/service-info/api/v1/"${spring.application.name}"/actuator"
management.endpoints.web.exposure.include=${?MS_ACTUATOR_EXPOSE_ENDPOINTS_FRONTEND}
management.endpoint.health.show-details="NEVER"
management.endpoint.health.show-details=${?MS_ACTUATOR_SHOW_HEALTH_DETAILS}
management.endpoint.health.show-details=${?MS_ACTUATOR_SHOW_HEALTH_DETAILS_FRONTEND}


##################################################################
# GSRS CONFIGURATION REPORTS                                    ##
##################################################################

# See document 'How configuration works' for discussion of security implications.
# If in doubt, you probably want false (default) for all optons in production or even online development instances
gsrs.extensions.config.report.api.enabled=${?EXTENSIONS_CONFIG_REPORT_API_ENABLED}
gsrs.services.config.properties.report.api.enabled=${?CONFIG_PROPERTIES_REPORT_API_ENABLED}
gsrs.services.config.properties.report.log.enabled=${?CONFIG_PROPERTIES_REPORT_LOG_ENABLED}

##################################################################
# ENDPOINTS CONFIGURATION                                       ##
##################################################################
include "basic-service-info-endpoints.conf"

##################################################################
# EUREKA SETTINGS                                               ##
##################################################################

eureka.instance.hostname=${spring.application.name}
eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}

eureka.client.enabled=false
eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
ribbon.eureka.enabled=false
ribbon.eureka.enabled=${?RIBBON_EUREKA_ENABLED}

eureka.instance.statusPageUrl="${application.host}/ginas/app${management.endpoints.web.base-path}/health"
eureka.instance.statusPageUrl=${?EUREKA_STATUS_PAGE_URL_FRONTEND}
eureka.instance.healthCheckUrl="${application.host}/ginas/app${management.endpoints.web.base-path}/health"
eureka.instance.healthCheckUrl=${?EUREKA_HEALTH_CHECK_URL_FRONTEND}


##################################################################
# CUSTOM CONFIGURATION                                          ##
##################################################################

include "conf/frontend.conf"
include "frontend.conf"




