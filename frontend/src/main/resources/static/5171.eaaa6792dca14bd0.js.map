{"version":3,"mappings":"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","names":["i0","ctx_r2","ctx_r8","DisulfideLinksFormComponent","cvService","dialog","utilsService","overlayContainerService","substanceFormService","substanceFormDisulfideLinksService","this","EventEmitter","FormGroup","site0","FormControl","Validators","site1","privateLink","sites","testForm","controls","setValue","overlayContainer","getContainerElement","setTimeout","cysteineSubscription","i","substanceCysteineSites","subscribe","cysteine","subscriptions","push","forEach","subscription","unsubscribe","set","link","confirm","$$deletedCode","newUUID","deleteTimer","linkDeleted","emit","emitDisulfideLinkUpdate","clearTimeout","access","value","pos","filter","r","residueIndex","subunitIndex","updateCysteine","sentSites","dialogRef","open","SubunitSelectorDialogComponent","data","card","width","panelClass","style","zIndex","dialogSubscription","afterClosed","newLinks","reset","l","selectors","ctx","ctx_r7","ctx_r9","SubstanceFormDisulfideLinksCardComponent","gaService","u","analyticsEventCategory","canAddItemUpdate","menuLabelUpdate","disulfideLinksSubscription","substanceDisulfideLinks","o","disulfideLinks","countCysteine","subunitsSubscription","substanceSubunits","subunits","componentDestroyed","cysteineBonds","subunit","sequence","toUpperCase","split","length","getSuggestions","available","j","site","addLink","addSubstanceDisulfideLink","disulfideLink","deleteSubstanceDisulfideLink","deleteAllDisulfideLinks","addCompleteDisulfideLinks","SubstanceCardBaseFilteredList","SubstanceFormDisulfideLinksModule","v","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","MatIconModule","MatButtonModule","ScrollToModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatTooltipModule","MatButtonToggleModule","MatInputModule","MatSelectModule"],"sources":["./src/app/core/substance-form/disulfide-links/disulfide-links-form.component.html","./src/app/core/substance-form/disulfide-links/disulfide-links-form.component.ts","./src/app/core/substance-form/disulfide-links/substance-form-disulfide-links-card.component.html","./src/app/core/substance-form/disulfide-links/substance-form-disulfide-links-card.component.ts","./src/app/core/substance-form/disulfide-links/substance-form-disulfide-links.module.ts"],"sourcesContent":["<div class=\"link-form-container\" [formGroup]=\"testForm\">\n  <div *ngIf=\"link.$$deletedCode\" class=\"notification-backdrop\">\n    Deleted&nbsp;\n    <button mat-icon-button matTooltip=\"Undo\" (click)=\"undoDelete()\">\n      <mat-icon svgIcon=\"undo\"></mat-icon>\n    </button>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"delete-container\">\n      <button mat-icon-button matTooltip=\"Delete link\" (click)=\"deleteLink()\">\n        <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n      </button>\n    </div>\n      <div class = \"sites\" *ngFor = \"let site of link.sites;index as index\">\n        <mat-form-field class=\"site\">\n          <mat-label>{{index === 0? 'To': 'From'}}</mat-label>\n        <mat-select [formControlName] = \"'site'+index\"  (selectionChange)=\"updateSuggestions($event.value, index) \" class =\"site-select\" >\n          <mat-option *ngFor=\"let cys of cysteine\" [value]=\"cys\">\n            {{cys.subunitIndex}}_{{cys.residueIndex}}\n          </mat-option>\n          <mat-option [value] = \"site\" >\n            {{site.subunitIndex}}_{{site.residueIndex}}\n          </mat-option>\n        </mat-select>\n        </mat-form-field>\n      </div>\n\n    <button mat-icon-button matTooltip=\"Select from sequence view\" (click)=\"openDialog()\">\n      <mat-icon svgIcon=\"edit\"></mat-icon>\n    </button>\n    </div>\n  </div>\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Link, Site} from '@gsrs-core/substance';\nimport { SubstanceFormDisulfideLinksService } from './substance-form-disulfide-links.service';\nimport {UtilsService} from '@gsrs-core/utils';\nimport {ControlledVocabularyService} from '@gsrs-core/controlled-vocabulary';\nimport {MatDialog} from '@angular/material/dialog';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {Subscription} from 'rxjs';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {SubunitSelectorDialogComponent} from '@gsrs-core/substance-form/subunit-selector-dialog/subunit-selector-dialog.component';\n\n@Component({\n  selector: 'app-disulfide-links-form',\n  templateUrl: './disulfide-links-form.component.html',\n  styleUrls: ['./disulfide-links-form.component.scss']\n})\nexport class DisulfideLinksFormComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  private privateLink: Link;\n  public cysteine: Array<Site> = [];\n  @Output() linkDeleted = new EventEmitter<Link>();\n  deleteTimer: any;\n  testForm = new FormGroup({\n    site0: new FormControl('', [\n      Validators.required\n    ]),\n    site1: new FormControl('', [\n      Validators.required\n    ]),\n  });\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n\n  constructor(\n    private cvService: ControlledVocabularyService,\n    private dialog: MatDialog,\n    private utilsService: UtilsService,\n    private overlayContainerService: OverlayContainer,\n    private substanceFormService: SubstanceFormService,\n    private substanceFormDisulfideLinksService: SubstanceFormDisulfideLinksService\n  ) { }\n\n  ngOnInit() {\n    if (this.privateLink.sites) {\n      this.testForm.controls['site0'].setValue(this.privateLink.sites[0]);\n      this.testForm.controls['site1'].setValue(this.privateLink.sites[1]);\n    } else {\n      this.privateLink.sites = [{}, {}];\n    }\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n  }\n    ngAfterViewInit() {\n      setTimeout(() => {\n        const cysteineSubscription = this.substanceFormDisulfideLinksService.substanceCysteineSites.subscribe(cysteine => {\n          this.cysteine = cysteine;\n        });\n        this.subscriptions.push(cysteineSubscription);\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  @Input()\n  set link(link: Link) {\n    this.privateLink = link;\n  }\n\n  get link(): Link {\n    return this.privateLink;\n  }\n\n  deleteLink(): void {\n    if (confirm('Are you sure you want to delete links?')) {\n    this.privateLink.$$deletedCode = this.utilsService.newUUID();\n   // if (!this.privateLink) {\n      this.deleteTimer = setTimeout(() => {\n        this.linkDeleted.emit(this.link);\n      }, 1000);\n    // }\n    this.substanceFormDisulfideLinksService.emitDisulfideLinkUpdate();\n    }\n  }\n\n  undoDelete(): void {\n    clearTimeout(this.deleteTimer);\n    delete this.privateLink.$$deletedCode;\n    this.substanceFormDisulfideLinksService.emitDisulfideLinkUpdate();\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.link.access = access;\n  }\n\n  updateSuggestions(value: Site, pos: number): void {\n    this.cysteine = this.cysteine.filter(function(r) {\n      return (r.residueIndex !== value.residueIndex) || (r.subunitIndex !== value.subunitIndex);\n    });\n    if (this.privateLink.sites[pos] !== value) {\n      if (this.privateLink.sites[pos].residueIndex) {\n        this.cysteine.push(this.privateLink.sites[pos]);\n      }\n      this.privateLink.sites[pos] = value;\n      this.substanceFormDisulfideLinksService.updateCysteine(this.cysteine);\n    } else {\n    }\n    this.testForm.controls['site' + pos].setValue(value);\n  }\n\n  openDialog(): void {\n    let sentSites = this.privateLink.sites;\n    if (!sentSites[0].residueIndex || !sentSites[1].residueIndex) {\n      sentSites = [];\n    }\n    const dialogRef = this.dialog.open(SubunitSelectorDialogComponent, {\n      data: {'card': 'disulfide', 'link': sentSites},\n      width: '1040px',\n      panelClass: 'subunit-dialog'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newLinks => {\n      this.overlayContainer.style.zIndex = null;\n      if (newLinks) {\n        if (newLinks[0] && newLinks[0].subunitIndex) {\n          this.privateLink.sites[0] = newLinks[0];\n          this.testForm.controls['site0'].setValue(this.privateLink.sites[0]);\n        } else {\n          this.privateLink.sites[0] = {};\n          this.testForm.controls['site0'].reset();\n        }\n        if (newLinks[1] && newLinks[1].subunitIndex) {\n          this.privateLink.sites[1] = newLinks[1];\n          this.testForm.controls['site1'].setValue(this.privateLink.sites[1]);\n        } else {\n          this.privateLink.sites[1] = {};\n          this.testForm.controls['site1'].reset();\n        }\n      }\n      this.substanceFormDisulfideLinksService.emitDisulfideLinkUpdate();\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n}\n","<div class=\"responsive columns\">\n  <div class = \"flex-row form-row2\">\n    <div class = \"add-buttons\">\n      <!-- <button mat-button (click)=\"addLink()\">\n        Add Disulfide Link <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n      </button> -->\n      <button mat-button (click)=\"openDialog()\">\n        Add Multiple Links <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n      </button>\n    </div>\n\n    <div class = \"cysteine\">\n      Number of unspecified Cysteine residues: {{cysteineBonds}}\n    </div>\n  </div>\n\n  <div *ngFor = \"let disulfideLink of disulfideLinks; last as isLast; index as index\"  appScrollToTarget [id]=\"'substance-disulfide-links-' + index\"\n       class = \"site-set alternate-backgrounds2\" [ngClass] = \"index % 2 === 0? 'side-border':''\">\n    <mat-divider *ngIf = \"index % 2 === 0\" [vertical]=\"true\" style = \"\" [inset] = \"true\"></mat-divider>\n    <app-disulfide-links-form [link]=\"disulfideLink\" (linkDeleted)=\"deleteDisulfideLink($event)\"></app-disulfide-links-form>\n    <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast && (index !== disulfideLinks.length - 2)\"></mat-divider>\n  </div>\n\n</div>\n\n<div class = \"flex-row\" *ngIf = \"disulfideLinks && disulfideLinks.length > 0\"><button mat-raised-button mat-primary (click) =\"deleteAllDisulfideLinks()\">\n  Delete All Links\n</button></div>\n<app-audit-info [source] = \"disulfideLinks\"></app-audit-info>\n\n<div class = \"flex-row\">\n    <span class = \"middle-fill\"></span>\n      <button mat-button (click)=\"addLink()\">\n    Add Disulfide Link <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button>\n</div>\n\n\n\n\n\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {DisulfideLink, Site, Subunit} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {SubstanceCardBaseFilteredList, SubstanceCardBaseList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport { SubstanceFormDisulfideLinksService } from './substance-form-disulfide-links.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport {SubunitSelectorDialogComponent} from '@gsrs-core/substance-form/subunit-selector-dialog/subunit-selector-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport { SubstanceFormService } from '../substance-form.service';\n\n@Component({\n  selector: 'app-substance-form-disulfide-links-card',\n  templateUrl: './substance-form-disulfide-links-card.component.html',\n  styleUrls: ['./substance-form-disulfide-links-card.component.scss']\n})\nexport class SubstanceFormDisulfideLinksCardComponent extends SubstanceCardBaseFilteredList<DisulfideLink>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n  disulfideLinks: Array<DisulfideLink>;\n  private subscriptions: Array<Subscription> = [];\n  cysteineBonds: number;\n  cysteine: Array<Site>;\n  subunits: Array<Subunit>;\n  private overlayContainer: HTMLElement;\n  constructor(\n    private substanceFormDisulfideLinksService: SubstanceFormDisulfideLinksService,\n    private substanceFormService: SubstanceFormService,\n    public gaService: GoogleAnalyticsService,\n    private dialog: MatDialog,\n    private overlayContainerService: OverlayContainer\n\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form disulfide Links';\n  }\n\n  ngOnInit() {\n    this.canAddItemUpdate.emit(true);\n    this.menuLabelUpdate.emit('Disulfide Links');\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n  }\n\n  ngAfterViewInit() {\n    const disulfideLinksSubscription = this.substanceFormDisulfideLinksService.substanceDisulfideLinks.subscribe(disulfideLinks => {\n      this.disulfideLinks = disulfideLinks;\n      this.countCysteine();\n    });\n\n    this.subscriptions.push(disulfideLinksSubscription);\n    const subunitsSubscription = this.substanceFormService.substanceSubunits.subscribe(subunits => {\n      this.subunits = subunits;\n      this.countCysteine();\n    });\n    this.subscriptions.push(subunitsSubscription);\n    const cysteineSubscription = this.substanceFormDisulfideLinksService.substanceCysteineSites.subscribe(cysteine => {\n      this.cysteine = cysteine;\n      this.countCysteine();\n    });\n    this.subscriptions.push(cysteineSubscription);\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  countCysteine(): void {\n    if (this.disulfideLinks != null && this.subunits != null && this.cysteine != null) {\n      this.cysteineBonds = 0;\n      if (this.subunits) {\n        this.subunits.forEach(subunit => {\n          this.cysteineBonds += (subunit.sequence.toUpperCase().split('C').length - 1);\n        });\n      }\n      if (this.cysteine && this.cysteine.length) {\n        this.cysteineBonds = this.cysteine.length;\n      } else {\n        this.cysteineBonds -= (this.disulfideLinks.length * 2);\n      }\n      this.getSuggestions();\n    }\n  }\n\n  getSuggestions(): void {\n    let available = [];\n    if (this.subunits) {\n      for (let i = 0; i < this.subunits.length; i++) {\n        const sequence = this.subunits[i].sequence;\n        if (sequence != null && sequence.length > 0) {\n          for (let j = 0; j < sequence.length; j++) {\n            const site = sequence[j];\n            if (site.toUpperCase() === 'C') {\n              available.push({'residueIndex': (j + 1), 'subunitIndex': (i + 1)});\n            }\n          }\n        }\n      }\n    }\n    this.disulfideLinks.forEach(link => {\n      if (link.sites) {\n        link.sites.forEach(site => {\n          available = available.filter(r => (r.residueIndex !== site.residueIndex) || (r.subunitIndex !== site.subunitIndex));\n        });\n      }\n\n    });\n  }\n\n  addItem(): void {\n    this.addLink();\n  }\n\n  addLink(): void {\n    this.substanceFormDisulfideLinksService.addSubstanceDisulfideLink();\n    setTimeout(() => {\n      });\n    this.substanceFormDisulfideLinksService.emitDisulfideLinkUpdate();\n  }\n\n  deleteDisulfideLink(disulfideLink: DisulfideLink): void {\n    this.substanceFormDisulfideLinksService.deleteSubstanceDisulfideLink(disulfideLink);\n    this.substanceFormDisulfideLinksService.emitDisulfideLinkUpdate();\n  }\n\n  deleteAllDisulfideLinks(): void {\n    if (confirm('Are you sure you want to delete all links?')) {\n    this.substanceFormDisulfideLinksService.deleteAllDisulfideLinks();\n    this.substanceFormDisulfideLinksService.emitDisulfideLinkUpdate();\n    }\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(SubunitSelectorDialogComponent, {\n      data: {'card': 'multi-disulfide', 'link': []},\n      width: '1040px',\n      panelClass: 'subunit-dialog'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newLinks => {\n      this.overlayContainer.style.zIndex = null;\n      if (newLinks) {\n          this.substanceFormDisulfideLinksService.addCompleteDisulfideLinks(newLinks);\n      }\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader';\nimport {SubstanceFormModule} from '@gsrs-core/substance-form/substance-form.module';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ScrollToModule} from '@gsrs-core/scroll-to';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n// eslint-disable-next-line max-len\nimport {SubstanceFormDisulfideLinksCardComponent} from '@gsrs-core/substance-form/disulfide-links/substance-form-disulfide-links-card.component';\nimport { DisulfideLinksFormComponent } from './disulfide-links-form.component';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormDisulfideLinksCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  exports: [\n    DisulfideLinksFormComponent\n  ],\n  declarations: [\n    SubstanceFormDisulfideLinksCardComponent,\n    DisulfideLinksFormComponent\n  ]\n})\nexport class SubstanceFormDisulfideLinksModule { }\n"],"sourceRoot":"webpack:///","file":"5171.eaaa6792dca14bd0.js"}