{"version":3,"mappings":"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","names":["i0","ctx_r29","ctx_r35","SubstanceRelationshipsComponent","utilService","configService","dialog","gaService","overlayContainerService","l","Subject","this","substanceUpdated","subscribe","t","relationships","substance","type","configData","substanceDetailsCards","length","relationshipsCard","find","card","filters","filter","_filter","filterName","value","excludedRelationships","filterRelationhships","countUpdate","emit","filtered","pageChange","searchControl","valueChanges","filterList","analyticsEventCategory","console","log","error","overlayContainer","getContainerElement","sort","data","slice","active","direction","a","b","isAsc","compare","relatedSubstance","name","toUpperCase","forEach","typeParts","relationship","property","trim","Array","isInExcludedValues","toLowerCase","indexOf","push","current","mediatorSubstance","amount","qualification","interactionType","comments","templateRef","sendEvent","dialogRef","open","style","zIndex","afterClosed","v","display","amt","ret","addedunits","unittext","formatValue","units","atype","average","high","low","highLimit","lowLimit","c","SubstanceCardBaseFilteredList","selectors","ctx","SubstanceRelationshipsModule","Z","CommonModule","DynamicComponentLoaderModule","MatTableModule","ReferencesManagerModule","MatIconModule","MatDialogModule","MatPaginatorModule","FormsModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","CdkTableModule","MatTooltipModule","RouterModule","MatSortModule","SubstanceImageModule"],"sources":["./src/app/core/substance-details/substance-relationships/substance-relationships.component.html","./src/app/core/substance-details/substance-relationships/substance-relationships.component.ts","./src/app/core/substance-details/substance-relationships/substance-relationships.module.ts"],"sourcesContent":["<div class=\"flex-row\">\r\n  <span class=\"middle-fill\"></span>\r\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\">\r\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"responsive\">\r\n  <table mat-table [dataSource]=\"paged\" matSort (matSortChange)=\"sortData($event)\">\r\n\r\n  <ng-container matColumnDef=\"relatedRecord\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Related Record</th>\r\n      <td class=\"text-center\" mat-cell *matCellDef=\"let relationship\">\r\n        <div class = \"thumb-col\">\r\n          <div>{{relationship.relatedSubstance.linkingID}}</div>\r\n          <img class=\"structure-image\" appSubstanceImage [entityId]=\"relationship.relatedSubstance.refuuid\">\r\n          <div>\r\n            <a class=\"substance-name\" target = \"_blank\" style = \"height: 18px;\" [routerLink]=\"['/substances', relationship.relatedSubstance.refuuid]\" >\r\n              {{relationship.relatedSubstance.name}}  <mat-icon class = \"icon\"  svgIcon=\"open_in_new\"></mat-icon>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\r\n      <td mat-cell *matCellDef=\"let relationship\"> {{relationship.type}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"details\">\r\n      <th mat-header-cell *matHeaderCellDef > Details </th>\r\n      <td mat-cell *matCellDef=\"let relationship\">\r\n        <button class = \"mat-raised-button mat-primary\" (click)=\"openModal(detailTemplate)\" [disabled]=\"!hasDetails(relationship)\" > View</button>\r\n        <ng-template #detailTemplate>\r\n          <h2 mat-dialog-title>Details</h2>\r\n          <div mat-dialog-content>\r\n            <table class = \"details-table mat-table\">\r\n              <tr>\r\n                <th class = \"mat-header-cell\">\r\n                  Mediator Substance\r\n                </th>\r\n                <th  class = \"mat-header-cell\">\r\n                  Details\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td class = \"mat-cell\">\r\n                  <div class = \"thumb-col\" *ngIf = \"relationship.mediatorSubstance\">\r\n                  <div>{{relationship.mediatorSubstance.linkingID}}</div>\r\n                  <img class=\"structure-image\" appSubstanceImage [entityId]=\"relationship.mediatorSubstance.refuuid\">\r\n                  <div>\r\n                    <a class=\"substance-name\" target = \"_blank\" style = \"height: 18px;\" [routerLink]=\"['/substances', relationship.mediatorSubstance.refuuid]\" >\r\n                      {{relationship.mediatorSubstance.name}}  <mat-icon class = \"icon\"  svgIcon=\"open_in_new\"></mat-icon>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                  <div *ngIf = \"!relationship.mediatorSubstance\">\r\n                    <i>none</i>\r\n                  </div>\r\n                </td>\r\n                <td class = \"mat-cell\">\r\n                  <div class = \"detail\" *ngIf =\"relationship.interactionType \">\r\n                  <div class = \"subhead\">\r\n                    Interaction Type:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{relationship.interactionType}}\r\n                  </div>\r\n                  </div>\r\n                  <div class = \"detail\" *ngIf =\"relationship.comments\">\r\n                  <div class = \"subhead\">\r\n                    Comments:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{relationship.comments}}\r\n                  </div>\r\n                  </div>\r\n                    <div class = \"detail\" *ngIf =\"relationship.qualification\">\r\n                  <div class = \"subhead\">\r\n                    Qualification:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{relationship.qualification}}\r\n                  </div>\r\n                    </div>  <div class = \"detail\" *ngIf =\"relationship.amount \">\r\n                  <div class = \"subhead\">\r\n                    Amount:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{displayAmount(relationship.amount)}} <i *ngIf = \"relationship.amount.nonNumericValue\">{{relationship.amount.nonNumericValue}}</i>\r\n                  </div></div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n          <div mat-dialog-actions>\r\n            <span class=\"middle-fill\"></span>\r\n            <button class=\"mat-raised-button mat-primary\" mat-dialog-close>Close</button>\r\n          </div>\r\n        </ng-template>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"references\">\r\n      <th mat-header-cell *matHeaderCellDef> References </th>\r\n      <td mat-cell *matCellDef=\"let relationship\">\r\n        <button class = \"mat-raised-button mat-primary\" (click)=\"openModal(refTemplate)\" [disabled]=\"relationship.references.length <= 0\">View {{relationship.references.length > 0? relationship.references.length : ''}} references</button>\r\n\r\n        <ng-template #refTemplate>\r\n          <h2 mat-dialog-title>References</h2>\r\n          <div mat-dialog-content>\r\n            <app-references-manager [substance] = \"substance\" [references] = \"relationship.references\"></app-references-manager>\r\n          </div>\r\n          <div mat-dialog-actions>\r\n            <span class=\"middle-fill\"></span>\r\n            <button class=\"mat-raised-button mat-primary\" mat-dialog-close>Close</button>\r\n          </div>\r\n        </ng-template>\r\n\r\n\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n<mat-paginator [length]=\"filtered && filtered.length || 0\" [pageSize]=\"5\" showFirstLastButtons=\"true\" (page)=\"pageChange($event, analyticsEventCategory)\"\r\n               [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n</mat-paginator>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SubstanceDetail, SubstanceRelationship} from '../../substance/substance.model';\r\nimport { UtilsService } from '../../utils/utils.service';\r\nimport { ConfigService } from '../../config/config.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SubstanceCardBaseFilteredList } from '../substance-card-base-filtered-list';\r\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\r\nimport {Subject} from 'rxjs';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport {Sort} from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-substance-relationships',\r\n  templateUrl: './substance-relationships.component.html',\r\n  styleUrls: ['./substance-relationships.component.scss']\r\n})\r\nexport class SubstanceRelationshipsComponent extends SubstanceCardBaseFilteredList<SubstanceRelationship> implements OnInit {\r\n  type: string;\r\n  relationships: Array<SubstanceRelationship> = [];\r\n  displayedColumns = ['relatedRecord', 'type', 'details', 'references'];\r\n  private excludedRelationships: Array<string>;\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  private overlayContainer: HTMLElement;\r\n\r\n  constructor(\r\n    private utilService: UtilsService,\r\n    private configService: ConfigService,\r\n    private dialog: MatDialog,\r\n    public gaService: GoogleAnalyticsService,\r\n    private overlayContainerService: OverlayContainer\r\n  ) {\r\n    super(gaService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.relationships = [];\r\n      this.substance = substance;\r\n      if (this.type === 'RELATIONSHIPS'\r\n        && this.configService.configData\r\n        && this.configService.configData.substanceDetailsCards\r\n        && this.configService.configData.substanceDetailsCards.length\r\n      ) {\r\n        const relationshipsCard = this.configService.configData.substanceDetailsCards.find(card => card.type === this.type);\r\n        if (relationshipsCard != null && relationshipsCard.filters && relationshipsCard.filters.length) {\r\n          const filter = relationshipsCard.filters.find(_filter => _filter.filterName === 'substanceRelationships') || {value: []};\r\n          this.excludedRelationships = filter.value;\r\n        }\r\n      }\r\n\r\n      if (this.substance != null && this.type != null) {\r\n\r\n        this.filterRelationhships();\r\n        this.countUpdate.emit(this.relationships.length);\r\n        this.filtered = this.relationships;\r\n        this.pageChange();\r\n        this.searchControl.valueChanges.subscribe(value => {\r\n          this.filterList(value, this.relationships, this.analyticsEventCategory);\r\n        }, error => {\r\n          console.log(error);\r\n        });\r\n      }\r\n    });\r\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n  }\r\n  sortData(sort: Sort) {\r\n    const data = this.relationships.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.filtered = data;\r\n      this.pageChange();\r\n      return;\r\n    }\r\n    this.filtered = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'relatedRecord': return this.utilService.compare(a.relatedSubstance.name ? a.relatedSubstance.name.toUpperCase() : '',\r\n        b.relatedSubstance.name ? b.relatedSubstance.name.toUpperCase() : '', isAsc);\r\n        case 'type': return this.utilService.compare(a.type ? a.type : '', b.type ? b.type : '', isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n    this.pageChange();\r\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n  }\r\n\r\n  private filterRelationhships(): void {\r\n    if (this.substance.relationships && this.substance.relationships.length > 0) {\r\n      this.substance.relationships.forEach(relationship => {\r\n        const typeParts = relationship.type;\r\n        const property = typeParts && typeParts.trim() || '';\r\n        if (this.excludedRelationships != null && this.excludedRelationships instanceof Array) {\r\n          let isInExcludedValues = false;\r\n          this.excludedRelationships.forEach(value => {\r\n            if (property.toLowerCase().indexOf(value.toLowerCase()) > -1) {\r\n              isInExcludedValues = true;\r\n            }\r\n          });\r\n          if (!isInExcludedValues) {\r\n            this.relationships.push(relationship);\r\n          }\r\n        } else if (property.toLowerCase().indexOf(this.type.toLowerCase()) > -1) {\r\n          this.relationships.push(relationship);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private hasDetails(current): boolean {\r\n    if ((current.mediatorSubstance && current.mediatorSubstance.name)\r\n      || (current.amount)\r\n      || (current.qualification)\r\n      || (current.interactionType)\r\n      || (current.comments)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  openModal(templateRef) {\r\n\r\n    this.gaService.sendEvent(this.analyticsEventCategory, 'button', 'references view');\r\n\r\n    const dialogRef = this.dialog.open(templateRef, {});\r\n    this.overlayContainer.style.zIndex = '1002';\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.overlayContainer.style.zIndex = null;\r\n    });\r\n  }\r\n\r\n  formatValue(v) {\r\n    if (v) {\r\n      if (typeof v === 'object') {\r\n        if (v.display) {\r\n          return v.display;\r\n        } else if (v.value) {\r\n          return v.value;\r\n        } else {\r\n          return null;\r\n        }\r\n      } else {\r\n        return v;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  displayAmount(amt): string {\r\n    let ret = '';\r\n    if (amt) {\r\n      if (typeof amt === 'object') {\r\n        if (amt) {\r\n          let addedunits = false;\r\n          let unittext = this.formatValue(amt.units);\r\n          if (!unittext) {\r\n            unittext = '';\r\n          }\r\n            const atype = this.formatValue(amt.type);\r\n            if (atype) {\r\n              ret += atype + '\\n';\r\n            }\r\n            if (amt.average || amt.high || amt.low) {\r\n              if (amt.average) {\r\n                ret += amt.average;\r\n                if (amt.units) {\r\n                  ret += ' ' + unittext;\r\n                  addedunits = true;\r\n                }\r\n              }\r\n              if (amt.high || amt.low) {\r\n                ret += ' [';\r\n                if (amt.high && !amt.low) {\r\n                  ret += '<' + amt.high;\r\n                } else if (!amt.high && amt.low) {\r\n                  ret += '>' + amt.low;\r\n                } else if (amt.high && amt.low) {\r\n                  ret += amt.low + ' to ' + amt.high;\r\n                }\r\n                ret += '] ';\r\n                if (!addedunits) {\r\n                  if (amt.units) {\r\n                    ret += ' ' + unittext;\r\n                    addedunits = true;\r\n                  }\r\n                }\r\n              }\r\n              ret += ' (average) ';\r\n            }\r\n            if (amt.highLimit || amt.lowLimit) {\r\n              ret += '\\n[';\r\n            }\r\n            if (amt.highLimit && !amt.lowLimit) {\r\n              ret += '<' + amt.highLimit;\r\n            } else if (!amt.highLimit && amt.lowLimit) {\r\n              ret += '>' + amt.lowLimit;\r\n            } else if (amt.highLimit && amt.lowLimit) {\r\n              ret += amt.lowLimit + ' to ' + amt.highLimit;\r\n            }\r\n            if (amt.highLimit || amt.lowLimit) {\r\n              ret += '] ';\r\n              if (!addedunits) {\r\n                if (amt.units) {\r\n                  ret += ' ' + unittext;\r\n                  addedunits = true;\r\n                }\r\n              }\r\n              ret += ' (limits)';\r\n            }\r\n          }\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubstanceRelationshipsComponent } from './substance-relationships.component';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {ReferencesManagerModule} from '../../references-manager/references-manager.module';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {RouterModule} from '@angular/router';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceRelationshipsComponent),\r\n    MatTableModule,\r\n    ReferencesManagerModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    CdkTableModule,\r\n    MatTooltipModule,\r\n    RouterModule,\r\n    MatSortModule,\r\n    SubstanceImageModule\r\n  ],\r\n  declarations: [SubstanceRelationshipsComponent]\r\n})\r\nexport class SubstanceRelationshipsModule { }\r\n"],"sourceRoot":"webpack:///","file":"2686.0f59d85217c0fefb.js"}