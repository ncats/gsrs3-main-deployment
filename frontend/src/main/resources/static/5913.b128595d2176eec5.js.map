{"version":3,"mappings":"8ZAWMA,iBAAuCA,iBAAIA,kCAC3CA,iBACEA,kBACEA,kBACAA,eAGFA,QANFA,gCAE8CA,yDAO9CA,iBAAuCA,mBAAMA,kCAC7CA,iBAAoCA,SAAcA,gCAAdA,uDAGpCA,iBAAuCA,oBAAOA,kCAC9CA,iBAAoCA,SAA8BA,0CAA9BA,yEAIpCA,iBAAuCA,kBAAKA,kCAC5CA,iBAAoCA,SAAaA,gCAAbA,sDAGpCA,iBAAuCA,0BAAaA,kCACpDA,iBAAoCA,gBAAOA,SAAoCA,QAAOA,0CAA3CA,6EAG7CA,sCACAA,uDC1BSC,EAAb,eAAaA,EAAb,0CAIE,WACUC,EACDC,GAAiC,6BAExCC,cAAMD,IAHED,eACDE,cAJTA,mBAA6B,CAAC,MAAO,QAAS,SAAU,OAAQ,gBAChEA,mBAAmB,IAAIC,IAGmBD,EAN5C,uCAWE,WAAQ,WACNE,KAAKC,iBAAiBC,UAAU,YAC9BC,EAAKC,UAAYA,EACK,MAAlBD,EAAKC,YACPD,EAAKE,gBAAkBF,EAAKC,UAAUE,QAAQD,gBAC9CF,EAAKI,YAAYC,KAAKL,EAAKE,gBAAgBI,QAC3CN,EAAKO,SAAWP,EAAKC,UAAUE,QAAQD,gBACvCF,EAAKQ,aAELR,EAAKS,cAAcC,aAAaX,UAAU,YACxCC,EAAKW,WAAWC,EAAOZ,EAAKE,gBAAiBF,EAAKa,yBACjD,YACDC,QAAQC,IAAIC,UAvBtB,2BA8BE,SAAcC,GACZ,OAAOpB,KAAKJ,aAAayB,cAAcD,KA/B3C,0BAkCE,SAAaE,GACX,IAAIC,EAAUC,KAAKC,UAAUH,GAC7BC,OACAA,GADAA,EAAUA,EAAQG,QAAQ,IAAK,MACbA,QAAQ,IAAK,KACbA,QAAQ,IAAK,UAtCnCC,GAAuDC,kDAA1CjC,GAAiCD,gDAAjCC,EAAiCkC,kyBDb9CnC,iBACEA,kBACAA,4BACEA,mBACFA,QACFA,QACAA,iBAEEA,mBAEEA,WACEA,sBACAA,sBAOFA,QACAA,WACEA,uBACAA,uBACFA,QACAA,aACEA,uBACAA,uBACFA,QAEAA,aACEA,uBACAA,uBACFA,QACAA,aACEA,uBACAA,uBACFA,QAEAA,wBACAA,wBACFA,QACFA,QACAA,6BAAsGA,gCAAQoC,2CAE9GpC,eA1CkBA,qCACuBA,8CAKtBA,qCA8BKA,sDACaA,sDAGtBA,0DAA2C,aAA3CA,CAA2C,+IC7B7CC,EAAb,cCeaoC,EAAb,eAAaA,KAAbC,iFAAaD,4DAdF,CACPE,KACAC,aAAsCvC,GACtCwC,KACAC,KACAC,KACAC,IACAC,KACAC,KACAC,KACAC,QAISX,EAAb","names":["i0","SubstanceStructuralUnitsComponent","utilsService","gaService","s","Subject","this","substanceUpdated","subscribe","u","substance","structuralUnits","polymer","countUpdate","emit","length","filtered","pageChange","searchControl","valueChanges","filterList","value","analyticsEventCategory","console","log","error","amt","displayAmount","con","display","JSON","stringify","replace","o","SubstanceCardBaseFilteredList","selectors","ctx","SubstanceStructuralUnitsModule","f","CommonModule","DynamicComponentLoaderModule","MatTableModule","CdkTableModule","MatPaginatorModule","MatInputModule","ReactiveFormsModule","FormsModule","RouterModule","SubstanceImageModule"],"sources":["./src/app/core/substance-details/substance-structural-units/substance-structural-units.component.html","./src/app/core/substance-details/substance-structural-units/substance-structural-units.component.ts","./src/app/core/substance-details/substance-structural-units/substance-structural-units.module.ts"],"sourcesContent":["<div class=\"flex-row\">\n  <span class=\"middle-fill\"></span>\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\">\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\n  </mat-form-field>\n</div>\n<div class=\"responsive\">\n\n  <table mat-table [dataSource]=\"paged\">\n\n    <ng-container matColumnDef=\"SRU\">\n      <th mat-header-cell *matHeaderCellDef> SRU </th>\n      <td mat-cell *matCellDef=\"let sru\">\n        <div class=\"thumb-col\">\n          <img class=\"image-icon\" appSubstanceImage [entityId]=\"sru.uuid\">\n          <div>\n\n          </div>\n        </div>\n    </ng-container>\n    <ng-container matColumnDef=\"label\">\n      <th mat-header-cell *matHeaderCellDef> Label </th>\n      <td mat-cell *matCellDef=\"let sru\"> {{sru.label}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"amount\">\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\n      <td mat-cell *matCellDef=\"let sru\"> {{displayAmount(sru.amount)}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n      <th mat-header-cell *matHeaderCellDef> Type </th>\n      <td mat-cell *matCellDef=\"let sru\"> {{sru.type}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"connectivity\">\n      <th mat-header-cell *matHeaderCellDef> Connectivity </th>\n      <td mat-cell *matCellDef=\"let sru\"> <span >{{connectivity(sru.attachmentMap)}} </span></td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n<mat-paginator [length]=\"filtered && filtered.length || 0\" [pageSize]=\"5\" showFirstLastButtons=\"true\" (page)=\"pageChange($event, analyticsEventCategory)\"\n               [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>\n","import { Component, OnInit } from '@angular/core';\nimport {Monomer, SubstanceDetail} from '../../substance/substance.model';\nimport { SubstanceCardBaseFilteredList } from '../substance-card-base-filtered-list';\nimport { UtilsService } from '../../utils/utils.service';\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\nimport {Subject} from 'rxjs';\nimport {StructuralUnit} from '@gsrs-core/substance';\n\n@Component({\n  selector: 'app-substance-structural-units',\n  templateUrl: './substance-structural-units.component.html',\n  styleUrls: ['./substance-structural-units.component.scss']\n})\nexport class SubstanceStructuralUnitsComponent extends SubstanceCardBaseFilteredList<StructuralUnit> implements OnInit {\n  structuralUnits: Array<StructuralUnit>;\n  displayedColumns: string[] = ['SRU', 'label', 'amount', 'type', 'connectivity'];\n  substanceUpdated = new Subject<SubstanceDetail>();\n  constructor(\n    private utilsService: UtilsService,\n    public gaService: GoogleAnalyticsService\n  ) {\n    super(gaService);\n  }\n\n  ngOnInit() {\n    this.substanceUpdated.subscribe(substance => {\n      this.substance = substance;\n      if (this.substance != null) {\n        this.structuralUnits = this.substance.polymer.structuralUnits;\n        this.countUpdate.emit(this.structuralUnits.length);\n        this.filtered = this.substance.polymer.structuralUnits;\n        this.pageChange();\n\n        this.searchControl.valueChanges.subscribe(value => {\n          this.filterList(value, this.structuralUnits, this.analyticsEventCategory);\n        }, error => {\n          console.log(error);\n        });\n      }\n    });\n\n  }\n\n  displayAmount(amt): string {\n    return this.utilsService.displayAmount(amt);\n  }\n\n  connectivity(con): string {\n    let display = JSON.stringify(con);\n    display = display.replace(':', '=');\n    display = display.replace('\"', '');\n    display = display.replace(',', ', ');\n\n    return display;\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTableModule} from '@angular/material/table';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {SubstanceStructuralUnitsComponent} from '@gsrs-core/substance-details/substance-structural-units/substance-structural-units.component';\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceStructuralUnitsComponent),\n    MatTableModule,\n    CdkTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    SubstanceImageModule\n  ],\n  declarations: [SubstanceStructuralUnitsComponent]\n})\nexport class SubstanceStructuralUnitsModule { }\n"],"sourceRoot":"webpack:///","file":"5913.b128595d2176eec5.js"}