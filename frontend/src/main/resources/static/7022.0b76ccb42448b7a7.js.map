{"version":3,"mappings":"ibAaMA,iBAAuCA,uBAAUA,6EACjDA,iBACEA,kBACEA,eAAKA,SAA2BA,QAChCA,kBACAA,eACEA,gBACEA,SACFA,QACFA,QACFA,QACFA,gCARSA,sCAC0CA,+CAEnBA,4DACxBA,gEAORA,iBAAuCA,kBAAKA,kCAC5CA,iBAAoCA,SAAaA,gCAAbA,sDAGpCA,iBAAuCA,oBAAOA,kCAC9CA,iBAAoCA,SAAyBA,0CAAzBA,oEAGlCA,iBAAuCA,wBAAWA,kCAK9CA,iBAAqBA,sBAAUA,QAC/BA,kBACEA,qCACFA,QACEA,kBACEA,kBACAA,qBAA+DA,iBAAKA,QACtEA,gDALwBA,wCAAyB,kEANvDA,iBACEA,qBAA6DA,gEAASC,eAAoFD,gBAAIA,QAE9JA,2CAUFA,kCAZiGA,uFAgBrGA,sCACAA,uDCvCSE,EAAb,eAAaA,EAAb,0CAME,WACUC,EACDC,EACCC,EACAC,GAAyC,6BAE/CC,cAAMH,IALAD,eACDI,cACCA,WACAA,4BARVA,mBAAmB,IAAIC,IACvBD,mBAA6B,CAAC,YAAa,OAAQ,SAAU,cAOVA,EAVrD,uCAcE,WAAQ,WACNE,KAAKC,iBAAiBC,UAAU,YACb,MAAbC,GAAqD,MAAhCA,EAAUC,oBAA8BD,EAAUC,mBAAmBC,eAC5FC,EAAKD,aAAeF,EAAUC,mBAAmBC,aACjDC,EAAKC,SAAWD,EAAKH,UAAUC,mBAAmBC,aAClDC,EAAKE,aAELF,EAAKG,cAAcC,aAAaR,UAAU,YACxCI,EAAKK,WAAWC,EAAON,EAAKD,aAAcC,EAAKO,yBAC9C,YACDC,QAAQC,IAAIC,MAGhBV,EAAKW,YAAYC,KAAKZ,EAAKD,aAAac,UAE1CnB,KAAKoB,iBAAmBpB,KAAKH,wBAAwBwB,wBA7BzD,sBAgCS,SAASC,GACd,OAAOtB,KAAKN,aAAa6B,cAAcD,KAjC3C,uBAoCE,SAAUE,GAAW,WAEnBxB,KAAKL,UAAU8B,UAAUzB,KAAKa,uBAAwB,SAAU,mBAEhE,IAAMa,EAAY1B,KAAKJ,OAAO+B,KAAKH,EAAa,CAC9CI,SAAU,MACVC,SAAU,QAEZ7B,KAAKoB,iBAAiBU,MAAMC,OAAS,OAErCL,EAAUM,cAAc9B,UAAU,YAChC+B,EAAKb,iBAAiBU,MAAMC,OAAS,WA/C3CG,GAAoDC,mDAAvC1C,GAA8BF,yEAA9BE,EAA8B2C,ojCDb3C7C,iBACEA,kBACAA,4BACEA,mBACFA,QACFA,QACAA,iBAEEA,mBAEEA,WACEA,sBACAA,sBAWFA,QACAA,WACEA,uBACAA,uBACFA,QACAA,aACEA,uBACAA,uBACFA,QACAA,aACIA,uBACAA,uBAcFA,QAGFA,wBACAA,wBACFA,QACFA,QACAA,6BAAsGA,gCAAQ8C,2CAE9G9C,eAvDkBA,qCACuBA,8CAKtBA,qCA2CKA,sDACaA,sDAGtBA,0DAA2C,aAA3CA,CAA2C,2sGC1C7CE,EAAb,qEC2Ba6C,EAAb,eAAaA,KAAbC,iFAAaD,4DAvBF,CACPE,KACAC,KACAC,aAAsCjD,GACtCkD,KACAC,IACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IACAC,KACAC,KACAZ,KACAa,KACAC,QAMSjB,EAAb","names":["i0","ctx_r17","SubstanceConstituentsComponent","utilsService","gaService","dialog","overlayContainerService","l","Subject","this","substanceUpdated","subscribe","substance","specifiedSubstance","constituents","s","filtered","pageChange","searchControl","valueChanges","filterList","value","analyticsEventCategory","console","log","error","countUpdate","emit","length","overlayContainer","getContainerElement","amount","displayAmount","templateRef","sendEvent","dialogRef","open","minWidth","maxWidth","style","zIndex","afterClosed","r","i","SubstanceCardBaseFilteredList","selectors","ctx","SubstanceConstituentsModule","C","CommonModule","RouterModule","DynamicComponentLoaderModule","MatTableModule","ReferencesManagerModule","MatIconModule","MatDialogModule","MatPaginatorModule","FormsModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","CdkTableModule","MatTooltipModule","MatSortModule","SubstanceImageModule"],"sources":["./src/app/core/substance-details/substance-constituents/substance-constituents.component.html","./src/app/core/substance-details/substance-constituents/substance-constituents.component.ts","./src/app/core/substance-details/substance-constituents/substance-constituents.module.ts"],"sourcesContent":["\n\n<div class=\"flex-row\">\n  <span class=\"middle-fill\"></span>\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\">\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\n  </mat-form-field>\n</div>\n<div class=\"responsive\">\n\n  <table mat-table [dataSource]=\"paged\">\n\n    <ng-container matColumnDef=\"Substance\">\n      <th mat-header-cell *matHeaderCellDef> Substance </th>\n      <td mat-cell *matCellDef=\"let con\">\n        <div class = \"thumb-col\">\n          <div>{{con.substance.linkingID}}</div>\n          <img class=\"structure-image\" appSubstanceImage [entityId]=\"con.substance.refuuid\">\n          <div>\n            <a class=\"substance-name\" [routerLink]=\"['/substances', con.substance.refuuid]\" >\n              {{con.substance.name}}\n            </a>\n          </div>\n        </div>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let con\"> {{con.role}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Amount\">\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\n      <td mat-cell *matCellDef=\"let con\"> {{toString(con.amount)}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"References\">\n        <th mat-header-cell *matHeaderCellDef> References </th>\n        <td mat-cell *matCellDef=\"let con\">\n          <button class = \"mat-raised-button mat-primary dialog-close\" (click)=\"openModal(refTemplate)\"  [disabled]=\"!con.references || con.references.length <= 0\">View</button>\n  \n          <ng-template #refTemplate>\n            <h2 mat-dialog-title>References</h2>\n            <div mat-dialog-content>\n              <app-references-manager [substance] = \"substance\" [references] = \"con.references\"></app-references-manager>\n            </div>\n              <div mat-dialog-actions>\n                <span class=\"middle-fill\"></span>\n                <button class=\"mat-raised-button mat-primary\" mat-dialog-close>Close</button>\n              </div>\n          </ng-template>\n        </td>\n      </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n<mat-paginator [length]=\"filtered && filtered.length || 0\" [pageSize]=\"5\" showFirstLastButtons=\"true\" (page)=\"pageChange($event, analyticsEventCategory)\"\n               [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>\n","import { Component, OnInit } from '@angular/core';\nimport {SafeUrl} from '@angular/platform-browser';\nimport {UtilsService} from '@gsrs-core/utils';\nimport {Constituent, SubstanceAmount, SubstanceDetail} from '@gsrs-core/substance';\nimport {Subject} from 'rxjs';\nimport { SubstanceCardBaseFilteredList } from '@gsrs-core/substance-details';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-substance-constituents',\n  templateUrl: './substance-constituents.component.html',\n  styleUrls: ['./substance-constituents.component.scss']\n})\nexport class SubstanceConstituentsComponent extends SubstanceCardBaseFilteredList<Constituent> implements OnInit {\n  constituents: Array<Constituent>;\n  substanceUpdated = new Subject<SubstanceDetail>();\n  displayedColumns: string[] = ['Substance', 'Role', 'Amount', 'References'];\n  private overlayContainer: HTMLElement;\n\n  constructor(\n    private utilsService: UtilsService,\n    public gaService: GoogleAnalyticsService,\n    private dialog: MatDialog,\n    private overlayContainerService: OverlayContainer,\n\n  ) { super(gaService); }\n\n  ngOnInit() {\n    this.substanceUpdated.subscribe(substance => {\n      if (substance != null && substance.specifiedSubstance != null && substance.specifiedSubstance.constituents) {\n        this.constituents = substance.specifiedSubstance.constituents;\n        this.filtered = this.substance.specifiedSubstance.constituents;\n        this.pageChange();\n\n        this.searchControl.valueChanges.subscribe(value => {\n          this.filterList(value, this.constituents, this.analyticsEventCategory);\n        }, error => {\n          console.log(error);\n        });\n      }\n      this.countUpdate.emit(this.constituents.length);\n    });\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n  }\n\n  public toString(amount: SubstanceAmount): string {\n    return this.utilsService.displayAmount(amount);\n  }\n\n  openModal(templateRef) {\n\n    this.gaService.sendEvent(this.analyticsEventCategory, 'button', 'references view');\n\n    const dialogRef = this.dialog.open(templateRef, {\n      minWidth: '40%',\n      maxWidth: '90%'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.overlayContainer.style.zIndex = null;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport {SubstanceConstituentsComponent} from '@gsrs-core/substance-details/substance-constituents/substance-constituents.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {ReferencesManagerModule} from '@gsrs-core/references-manager';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    DynamicComponentLoaderModule.forChild(SubstanceConstituentsComponent),\n    MatTableModule,\n    ReferencesManagerModule,\n    MatIconModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    FormsModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    CdkTableModule,\n    MatTooltipModule,\n    RouterModule,\n    MatSortModule,\n    SubstanceImageModule\n  ],\n  declarations: [\n    SubstanceConstituentsComponent\n  ]\n})\nexport class SubstanceConstituentsModule { }\n"],"sourceRoot":"webpack:///","file":"7022.0b76ccb42448b7a7.js"}