{"version":3,"mappings":"2WAKMA,iBAAuCA,uBAAUA,+CACTA,gBACtCA,qBAAgDA,yEAAWC,2BAAgCD,gBAAIA,QACjGA,+BACEA,mBACEA,qBACFA,kCALFA,iBAAwCA,yBAGtCA,yBAGFA,0CAN+CA,sDAGtCA,6EAOTA,iBAAuCA,qBAAQA,kCAC/CA,iBAAwCA,SAAoBA,gCAApBA,yDAIxCA,iBAAuCA,8BAAiBA,kCACxDA,iBAAwCA,SAAqBA,gCAArBA,0DAIxCA,iBAAuCA,mBAAMA,kCAC7CA,iBAAwCA,SAAmBA,gCAAnBA,wDAIxCA,iBAAuCA,yBAAYA,kCACnDA,iBAAwCA,yBAAsCA,gCAAtCA,2EAItCA,uDACAA,iBACEA,qBAAgDA,iEAAWE,4BAAiCF,mBAAOA,QACrGA,8BAGJA,sCACAA,iBCdG,IAAMG,EAAb,eAAaA,EAAb,0CASE,WACUC,EACAC,EACDC,EACCC,EACAC,GAAiB,6BAGzBC,gBAPQL,mBACAK,WACDA,mBACCA,4BACAA,WAZVA,mBAA6B,CAAC,OAAQ,UAAW,kBAAmB,SAAU,aAAc,WAC5FA,mBAAmB,IAAIC,IAWID,EAd7B,uCAmBE,WAAQ,WACPE,KAAKP,iBAAiBQ,SAASD,KAAKE,UAAUC,MAAMC,UAAW,YAC7DC,EAAKC,SAAWC,GACf,eACHP,KAAKP,iBAAiBe,aAAaR,KAAKE,UAAUC,MAAMC,UAAU,SAACK,GAClEJ,EAAKK,OAASD,IAEhBT,KAAKW,iBAAmBX,KAAKJ,wBAAwBgB,wBA1BvD,6BA6BE,WAAe,WACbZ,KAAKa,iBAAiBT,UAAU,YAC9BC,EAAKH,UAAYA,MA/BvB,2BAmCE,SAAcY,GACZd,KAAKN,OAAOqB,SAAS,CAAC,eAAiBf,KAAKE,UAAUC,KAAO,MAAQW,MApCzE,4BAuCE,SAAeA,GAAY,WACjBE,EAAYhB,KAAKH,OAAOoB,KAAKC,IAAiC,CAClEC,KAAM,CAACjB,UAAaF,KAAKE,UAAWY,QAAWA,EAASJ,OAAUV,KAAKU,QACvEU,MAAO,QACPC,WAAW,EACXC,cAAc,IAEftB,KAAKW,iBAAiBY,MAAMC,OAAS,OACXR,EAAUS,cAAcrB,UAAU,YAC3DsB,EAAKf,iBAAiBY,MAAMC,OAAS,KAEjCjB,GAAyB,YAAbA,IACdmB,EAAKhC,OAAOiC,oBAAsB,SAClCD,EAAKhC,OAAOqB,SAAS,CAAC,eAAiBW,EAAKxB,UAAUC,KAAO,aApDvEyB,GAA+CC,kDAAlCrC,GAAyBH,oFAAzBG,EAAyBsC,gqBD5BtCzC,iBACEA,mBAEEA,WACEA,sBACAA,sBAOFA,QAEAA,WACEA,sBACAA,sBACFA,QAEAA,WACEA,sBACAA,uBACFA,QAEAA,YACEA,uBACAA,uBACFA,QAEAA,YACEA,uBACAA,uBACFA,QAEAA,YACIA,uBACAA,uBAGFA,QAEFA,wBACAA,wBACFA,QACFA,eA3CmBA,wCAwCKA,sDACaA,sMCdxBG,EAAb,sGCOauC,EAAb,eAAaA,KAAbC,iFAAaD,4DAnBF,CACPE,KACAC,aAAsC1C,GACtC2C,KACAC,KACAC,KACAC,IACAC,KACAC,KACAC,IACAC,KACAC,KACAC,KACAC,KACAC,KACAJ,SAISX,EAAb","names":["i0","ctx_r17","ctx_r25","SubstanceHistoryComponent","substanceService","router","loadingService","overlayContainerService","dialog","c","Subject","this","getEdits","substance","uuid","subscribe","r","versions","response","checkVersion","result","latest","overlayContainer","getContainerElement","substanceUpdated","version","navigate","dialogRef","open","SubstanceHistoryDialogComponent","data","width","autoFocus","disableClose","style","zIndex","afterClosed","i","onSameUrlNavigation","a","SubstanceCardBase","selectors","SubstanceHistoryModule","f","CommonModule","DynamicComponentLoaderModule","MatTableModule","CdkTableModule","MatPaginatorModule","MatInputModule","ReactiveFormsModule","FormsModule","ReferencesManagerModule","MatIconModule","MatDialogModule","MatSortModule","MatTreeModule","RouterModule"],"sources":["./src/app/core/substance-details/substance-history/substance-history.component.html","./src/app/core/substance-details/substance-history/substance-history.component.ts","./src/app/core/substance-details/substance-history/substance-history.module.ts"],"sourcesContent":["\r\n<div class=\"responsive\">\r\n  <table mat-table [dataSource]=\"versions\">\r\n\r\n    <ng-container matColumnDef=\"view\">\r\n      <th mat-header-cell *matHeaderCellDef> Displayed </th>\r\n      <td mat-cell *matCellDef=\"let version\"> <span *ngIf = \"substance.version != version.version\">\r\n        <button class = \"mat-raised-button mat-primary\" (click) = \"switchVersion(version.version)\">View</button>\r\n      </span>\r\n        <span *ngIf = \"substance.version == version.version\" class = 'centered'>\r\n          Viewing\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"version\">\r\n      <th mat-header-cell *matHeaderCellDef> Version </th>\r\n      <td mat-cell *matCellDef=\"let version\"> {{version.version}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"versionComments\">\r\n      <th mat-header-cell *matHeaderCellDef> Version Comments </th>\r\n      <td mat-cell *matCellDef=\"let version\"> {{version.comments}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"editor\">\r\n      <th mat-header-cell *matHeaderCellDef> Editor</th>\r\n      <td mat-cell *matCellDef=\"let version\"> {{version.editor}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"changeDate\">\r\n      <th mat-header-cell *matHeaderCellDef> Change Date </th>\r\n      <td mat-cell *matCellDef=\"let version\"> {{version.created  | date : 'short'}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"restore\">\r\n        <th mat-header-cell *matHeaderCellDef> </th>\r\n        <td mat-cell *matCellDef=\"let version\"> \r\n          <button class = \"mat-raised-button mat-primary\" (click) = \"restoreVersion(version.version)\">Restore</button> \r\n        </td>\r\n      </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {ReferencesManagerModule} from '../../references-manager/references-manager.module';\r\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {SubstanceCardBase} from '@gsrs-core/substance-details/substance-card-base';\r\nimport {SubstanceDetail, SubstanceEdit, SubstanceName} from '@gsrs-core/substance/substance.model';\r\nimport {SubstanceService} from '@gsrs-core/substance/substance.service';\r\nimport {LoadingService} from '@gsrs-core/loading/loading.service';\r\nimport {MainNotificationService} from '@gsrs-core/main-notification/main-notification.service';\r\nimport {Router} from '@angular/router';\r\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics/google-analytics.service';\r\nimport {SubstanceCardBaseFilteredList} from '@gsrs-core/substance-details/substance-card-base-filtered-list';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { SubstanceHistoryDialogComponent } from '@gsrs-core/substance-history-dialog/substance-history-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-substance-history',\r\n  templateUrl: './substance-history.component.html',\r\n  styleUrls: ['./substance-history.component.scss']\r\n})\r\nexport class SubstanceHistoryComponent extends SubstanceCardBase implements OnInit , AfterViewInit {\r\n  versions: Array<SubstanceEdit>;\r\n  displayedColumns: string[] = ['view', 'version', 'versionComments', 'editor', 'changeDate', 'restore'];\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  latest: any;\r\n  private overlayContainer: HTMLElement;\r\n\r\n\r\n\r\n  constructor(\r\n    private substanceService: SubstanceService,\r\n    private router: Router,\r\n    public loadingService: LoadingService,\r\n    private overlayContainerService: OverlayContainer,\r\n    private dialog: MatDialog\r\n\r\n  ) {\r\n    super();\r\n  }\r\n  ngOnInit() {\r\n   this.substanceService.getEdits(this.substance.uuid).subscribe( response => {\r\n     this.versions = response;\r\n   }, error => {} );\r\n   this.substanceService.checkVersion(this.substance.uuid).subscribe((result: number) => {\r\n    this.latest = result;\r\n  });\r\n  this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.substance = substance;\r\n    });\r\n  }\r\n\r\n  switchVersion(version): void {\r\n    this.router.navigate(['/substances/' + this.substance.uuid + '/v/' + version]);\r\n  }\r\n\r\n  restoreVersion(version: any) {\r\n      const dialogRef = this.dialog.open(SubstanceHistoryDialogComponent, {\r\n        data: {'substance': this.substance, 'version': version, 'latest': this.latest},\r\n        width: '650px',\r\n        autoFocus: false,\r\n        disableClose: true\r\n      });\r\n       this.overlayContainer.style.zIndex = '1002';\r\n      const dialogSubscription = dialogRef.afterClosed().subscribe(response => {\r\n        this.overlayContainer.style.zIndex = null;\r\n\r\n        if (response && response === 'success' ) {\r\n          this.router.onSameUrlNavigation = 'reload';\r\n          this.router.navigate(['/substances/' + this.substance.uuid + '/']);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SubstanceHistoryComponent} from '@gsrs-core/substance-details/substance-history/substance-history.component';\r\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader/dynamic-component-loader.module';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ReferencesManagerModule} from '@gsrs-core/references-manager/references-manager.module';\r\nimport {RouterModule} from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceHistoryComponent),\r\n    MatTableModule,\r\n    CdkTableModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ReferencesManagerModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatTreeModule,\r\n    RouterModule,\r\n    MatIconModule,\r\n  ],\r\n  declarations: [SubstanceHistoryComponent]\r\n})\r\nexport class SubstanceHistoryModule { }\r\n"],"sourceRoot":"webpack:///","file":"7010.bbde5299bdd5f296.js"}