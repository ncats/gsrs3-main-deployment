{"version":3,"mappings":"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","names":["i0","ctx_r1","RelationshipsDownloadButtonComponent","configService","authService","substanceService","router","activatedRoute","loadingService","dialog","b","this","hasAnyRolesAsync","pipe","take","subscribe","i","isAdmin","response","loadedComponents","configData","subscriptions","forEach","subscription","unsubscribe","source","subscriptionResult","searchFromString","substance","uuid","l","etag","totalSubstance","total","extension","url","getApiExportUrl","type","open","ExportDialogComponent","width","data","entity","hideOptionButtons","afterClosed","name","id","setLoading","startUserDownload","privateExport","navigate","push","apiBaseUrl","s","selectors","ctx_r28","ctx_r31","ctx_r36","ctx_r39","SubstanceRelationshipsComponent","utilService","gaService","overlayContainerService","r","Subject","substanceUpdated","e","relationships","substanceDetailsCards","length","relationshipsCard","find","card","filters","filter","_filter","filterName","value","excludedRelationships","filterRelationhships","countUpdate","emit","filtered","pageChange","searchControl","valueChanges","filterList","analyticsEventCategory","console","log","error","overlayContainer","getContainerElement","sort","slice","active","direction","a","isAsc","o","compare","relatedSubstance","toUpperCase","typeParts","relationship","property","trim","Array","isInExcludedValues","toLowerCase","indexOf","current","mediatorSubstance","amount","qualification","interactionType","comments","templateRef","sendEvent","dialogRef","style","zIndex","v","display","amt","ret","addedunits","unittext","formatValue","units","atype","average","high","low","highLimit","lowLimit","closeAll","SubstanceCardBaseFilteredList","ctx","SubstanceRelationshipsModule","Z","CommonModule","DynamicComponentLoaderModule","MatTableModule","ReferencesManagerModule","MatIconModule","MatDialogModule","MatPaginatorModule","FormsModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","CdkTableModule","MatTooltipModule","RouterModule","MatSortModule","SubstanceImageModule"],"sources":["./src/app/core/substance-form/relationships/relationships-download-button/relationships-download-button.component.html","./src/app/core/substance-form/relationships/relationships-download-button/relationships-download-button.component.ts","./src/app/core/substance-details/substance-relationships/substance-relationships.component.html","./src/app/core/substance-details/substance-relationships/substance-relationships.component.ts","./src/app/core/substance-details/substance-relationships/substance-relationships.module.ts"],"sourcesContent":["<div>\n    <!-- Export Buttons -->\n    <div *ngIf=\"isAdmin\">\n        <button mat-icon-button style=\"padding-top:3px; background-color: white; border: none;\" matTooltip=\"Export all relationships from this substancce\"\n           (click)=\"export('relationships')\">\n           <mat-icon svgIcon=\"get_app\"></mat-icon>\n        </button>\n    </div>\n</div>","import { Component, OnInit, AfterViewInit, Input, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { SubstanceBrowseHeaderDynamicContent } from '@gsrs-core/substances-browse/substance-browse-header-dynamic-content.component';\n// import { GeneralService } from '../../service/general.service';\nimport { ConfigService } from '@gsrs-core/config/config.service';\nimport { AuthService } from '@gsrs-core/auth/auth.service';\nimport { take } from 'rxjs/operators';\nimport { LoadingService } from '@gsrs-core/loading';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SubstanceService } from '@gsrs-core/substance/substance.service';\nimport { ExportDialogComponent } from '@gsrs-core/substances-browse/export-dialog/export-dialog.component';\nimport { Subscription } from 'rxjs';\nimport {Subject} from 'rxjs';\nimport {SubstanceDetail, SubstanceRelationship} from '@gsrs-core/substance/substance.model';\n\n\n@Component({\n  selector: 'app-relationships-download-button',\n  templateUrl: './relationships-download-button.component.html',\n  styleUrls: ['./relationships-download-button.component.scss']\n})\nexport class RelationshipsDownloadButtonComponent implements OnInit, AfterViewInit, OnDestroy, SubstanceBrowseHeaderDynamicContent {\n  private subscriptions: Array<Subscription> = [];\n  test: any;\n  isAdmin = false;\n  privateExport = false;\n  etag = '';\n  etagDetails: any;\n  paramUrl = '';\n  totalSubstance = 0;\n  loadedComponents: any;\n  exportOptions: Array<any>;\n  hasAdditionalDownloads = false;\n  additionalExportOptions = [];\n\n  constructor(\n    // private generalService: GeneralService,\n    private configService: ConfigService,\n    private authService: AuthService,\n    private substanceService: SubstanceService,\n    private router: Router,\n    public activatedRoute: ActivatedRoute,\n    public loadingService: LoadingService,\n    private dialog: MatDialog) { }\n\n    // @Input() substance: Subject<SubstanceDetail>; // parent class uses this object but vscode complains.\n    @Input() substance: any;\n\n\n  ngOnInit() {\n\n    this.authService.hasAnyRolesAsync('Admin', 'Updater', 'SuperUpdater').pipe(take(1)).subscribe(response => {\n      this.isAdmin = response;\n\n      if (this.isAdmin === true) {\n      }\n    });\n    this.loadedComponents = (this.configService.configData && this.configService.configData.loadedComponents) || null;\n  }\n\n  ngAfterViewInit() {\n    // put something;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    });\n  }\n\n  export(source: string) {\n\n    // Do this first subscription here to avoid unecessary searches on init\n    const subscriptionResult = this.substanceService.searchFromString(\n      'q=root_uuid:\"^' +  this.substance.uuid + '$\"')\n      .subscribe(response => {\n      if (response) {\n        this.etag = response.etag;\n        this.totalSubstance = response.total;\n      }\n\n      if (this.etag) {\n        const extension = 'relationships.txt';\n        const url = this.getApiExportUrl(this.etag, extension, source);\n        if (this.isAdmin === true) {\n          let type = '';\n          if (source != null) {\n            if (source === 'relationships') {\n              type = 'export';\n            }\n          }\n          const dialogReference = this.dialog.open(ExportDialogComponent, {\n            // height: '215x',\n            width: '700px',\n            data: { 'extension': extension, 'type': type, 'entity': 'substances', 'hideOptionButtons': true }\n          });\n          dialogReference.afterClosed().subscribe(response => {\n            const name = response.name;\n            const id = response.id;\n            if (name && name !== '') {\n              this.loadingService.setLoading(true);\n              const fullname = name + '.' + extension;\n              this.authService.startUserDownload(url, this.privateExport, fullname, id).subscribe(response => {\n                this.loadingService.setLoading(false);\n                const navigationExtras: NavigationExtras = {\n                  queryParams: {\n                  }\n                };\n                this.router.navigate(['/user-downloads/', response.id]);\n              }, error => this.loadingService.setLoading(false));\n            }\n          });\n        }\n      } // if etag\n    });\n    this.subscriptions.push(subscriptionResult);\n  }\n\n  getApiExportUrl(etag: string, extension: string, source: string): string {\n        return `${this.configService.configData.apiBaseUrl}api/v1/substances/export/${etag}/${extension}`;\n  }\n\n}\n","<div class=\"flex-row\">\r\n  <span class=\"middle-fill\"></span>\r\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\">\r\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\r\n  </mat-form-field>\r\n  <app-relationships-download-button style=\"padding-left: 30px\" [substance] = \"substance\"></app-relationships-download-button>\r\n</div>\r\n<div class=\"responsive\">\r\n  <table mat-table [dataSource]=\"paged\" matSort (matSortChange)=\"sortData($event)\">\r\n\r\n  <ng-container matColumnDef=\"relatedRecord\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Related Record</th>\r\n      <td class=\"text-center\" mat-cell *matCellDef=\"let relationship\">\r\n        <div class = \"thumb-col\">\r\n          <div>{{relationship.relatedSubstance.linkingID}}</div>\r\n          <img class=\"structure-image\" appSubstanceImage [entityId]=\"relationship.relatedSubstance.refuuid\">\r\n          <div>\r\n            <a class=\"substance-name\" target = \"_blank\" style = \"height: 18px;\" [routerLink]=\"['/substances', relationship.relatedSubstance.refuuid]\" >\r\n              <span [innerHTML] = \"relationship.relatedSubstance.name\"></span> <mat-icon class = \"icon\"  svgIcon=\"open_in_new\"></mat-icon>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\r\n      <td mat-cell *matCellDef=\"let relationship\"> {{relationship.type}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"details\">\r\n      <th mat-header-cell *matHeaderCellDef > Details </th>\r\n      <td mat-cell *matCellDef=\"let relationship\">\r\n          <button class = \"mat-raised-button mat-primary\" (click)=\"openModal(detailTemplate)\" [disabled]=\"\r\n          (!relationship.mediatorSubstance || !relationship.mediatorSubstance.name) \r\n          && !(relationship.qualification)\r\n          && !(relationship.interactionType)\r\n          && !(relationship.comments)\r\n          && (!relationship.amount || !relationship.amount.nonNumericValue)\"\r\n          [ngClass] = \"((!relationship.mediatorSubstance || !relationship.mediatorSubstance.name) \r\n          && !(relationship.qualification)\r\n          && !(relationship.interactionType)\r\n          && !(relationship.comments)\r\n          && (!relationship.amount || !relationship.amount.nonNumericValue)) ? 'mat-button-disabled':''\"\r\n          > View</button>\r\n          <ng-template #detailTemplate>\r\n\r\n          <h2 mat-dialog-title>Details</h2>\r\n          <div mat-dialog-content>\r\n            <table class = \"details-table mat-table\">\r\n              <tr>\r\n                <th class = \"mat-header-cell\">\r\n                  Mediator Substance\r\n                </th>\r\n                <th  class = \"mat-header-cell\">\r\n                  Details\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td class = \"mat-cell\">\r\n                  <div class = \"thumb-col\" *ngIf = \"relationship.mediatorSubstance\">\r\n                  <div>{{relationship.mediatorSubstance.linkingID}}</div>\r\n                  <img class=\"structure-image\" appSubstanceImage [entityId]=\"relationship.mediatorSubstance.refuuid\">\r\n                  <div>\r\n                    <a class=\"substance-name\" target = \"_blank\" style = \"height: 18px;\" [routerLink]=\"['/substances', relationship.mediatorSubstance.refuuid]\" >\r\n                     <span [innerHTML] = \"relationship.mediatorSubstance.name\"></span>  <mat-icon class = \"icon\"  svgIcon=\"open_in_new\"></mat-icon>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                  <div *ngIf = \"!relationship.mediatorSubstance\">\r\n                    <i>none</i>\r\n                  </div>\r\n                </td>\r\n                <td class = \"mat-cell\">\r\n                  <div class = \"detail\" *ngIf =\"relationship.interactionType \">\r\n                  <div class = \"subhead\">\r\n                    Interaction Type:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{relationship.interactionType}}\r\n                  </div>\r\n                  </div>\r\n                  <div class = \"detail\" *ngIf =\"relationship.comments\">\r\n                  <div class = \"subhead\">\r\n                    Comments:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{relationship.comments}}\r\n                  </div>\r\n                  </div>\r\n                    <div class = \"detail\" *ngIf =\"relationship.qualification\">\r\n                  <div class = \"subhead\">\r\n                    Qualification:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{relationship.qualification}}\r\n                  </div>\r\n                    </div>  <div class = \"detail\" *ngIf =\"relationship.amount \">\r\n                  <div class = \"subhead\">\r\n                    Amount:\r\n                  </div>\r\n                  <div class = \"subval\">\r\n                    {{displayAmount(relationship.amount)}} <i *ngIf = \"relationship.amount.nonNumericValue\">{{relationship.amount.nonNumericValue}}</i>\r\n                  </div></div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n          <div mat-dialog-actions>\r\n            <span class=\"middle-fill\"></span>\r\n            <button class=\"mat-raised-button mat-primary\" mat-dialog-close (click) = \"close()\">Close</button>\r\n          </div>\r\n        </ng-template>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"references\">\r\n      <th mat-header-cell *matHeaderCellDef> References </th>\r\n      <td mat-cell *matCellDef=\"let relationship\">\r\n        <button class = \"mat-raised-button mat-primary\" (click)=\"openModal(refTemplate)\" [disabled]=\"relationship.references.length <= 0\">View {{relationship.references.length > 0? relationship.references.length : ''}} references</button>\r\n\r\n        <ng-template #refTemplate>\r\n          <h2 mat-dialog-title>References</h2>\r\n          <div mat-dialog-content>\r\n            <app-references-manager [substance] = \"substance\" [references] = \"relationship.references\"></app-references-manager>\r\n          </div>\r\n          <div mat-dialog-actions>\r\n            <span class=\"middle-fill\"></span>\r\n            <button class=\"mat-raised-button mat-primary\" mat-dialog-close (click) = \"close()\">Close</button>\r\n          </div>\r\n        </ng-template>\r\n\r\n\r\n\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n<mat-paginator [length]=\"filtered && filtered.length || 0\" [pageSize]=\"5\" showFirstLastButtons=\"true\" (page)=\"pageChange($event, analyticsEventCategory)\"\r\n               [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n</mat-paginator>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SubstanceDetail, SubstanceRelationship} from '../../substance/substance.model';\r\nimport { UtilsService } from '../../utils/utils.service';\r\nimport { ConfigService } from '../../config/config.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SubstanceCardBaseFilteredList } from '../substance-card-base-filtered-list';\r\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\r\nimport {Subject} from 'rxjs';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport {Sort} from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-substance-relationships',\r\n  templateUrl: './substance-relationships.component.html',\r\n  styleUrls: ['./substance-relationships.component.scss']\r\n})\r\nexport class SubstanceRelationshipsComponent extends SubstanceCardBaseFilteredList<SubstanceRelationship> implements OnInit {\r\n  type: string;\r\n  relationships: Array<SubstanceRelationship> = [];\r\n  displayedColumns = ['relatedRecord', 'type', 'details', 'references'];\r\n  private excludedRelationships: Array<string>;\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  private overlayContainer: HTMLElement;\r\n\r\n  constructor(\r\n    private utilService: UtilsService,\r\n    private configService: ConfigService,\r\n    private dialog: MatDialog,\r\n    public gaService: GoogleAnalyticsService,\r\n    private overlayContainerService: OverlayContainer\r\n  ) {\r\n    super(gaService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.relationships = [];\r\n      this.substance = substance;\r\n      if (this.type === 'RELATIONSHIPS'\r\n        && this.configService.configData\r\n        && this.configService.configData.substanceDetailsCards\r\n        && this.configService.configData.substanceDetailsCards.length\r\n      ) {\r\n        const relationshipsCard = this.configService.configData.substanceDetailsCards.find(card => card.type === this.type);\r\n        if (relationshipsCard != null && relationshipsCard.filters && relationshipsCard.filters.length) {\r\n          const filter = relationshipsCard.filters.find(_filter => _filter.filterName === 'substanceRelationships') || {value: []};\r\n          this.excludedRelationships = filter.value;\r\n        }\r\n      }\r\n\r\n      if (this.substance != null && this.type != null) {\r\n\r\n        this.filterRelationhships();\r\n        this.countUpdate.emit(this.relationships.length);\r\n        this.filtered = this.relationships;\r\n        this.pageChange();\r\n        this.searchControl.valueChanges.subscribe(value => {\r\n          this.filterList(value, this.relationships, this.analyticsEventCategory);\r\n        }, error => {\r\n          console.log(error);\r\n        });\r\n      }\r\n    });\r\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n  }\r\n  sortData(sort: Sort) {\r\n    const data = this.relationships.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.filtered = data;\r\n      this.pageChange();\r\n      return;\r\n    }\r\n    this.filtered = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'relatedRecord': return this.utilService.compare(a.relatedSubstance.name ? a.relatedSubstance.name.toUpperCase() : '',\r\n        b.relatedSubstance.name ? b.relatedSubstance.name.toUpperCase() : '', isAsc);\r\n        case 'type': return this.utilService.compare(a.type ? a.type : '', b.type ? b.type : '', isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n    this.pageChange();\r\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n  }\r\n\r\n  private filterRelationhships(): void {\r\n    if (this.substance.relationships && this.substance.relationships.length > 0) {\r\n      this.substance.relationships.forEach(relationship => {\r\n        const typeParts = relationship.type;\r\n        const property = typeParts && typeParts.trim() || '';\r\n        if (this.excludedRelationships != null && this.excludedRelationships instanceof Array) {\r\n          let isInExcludedValues = false;\r\n          this.excludedRelationships.forEach(value => {\r\n            if (property.toLowerCase().indexOf(value.toLowerCase()) > -1) {\r\n              isInExcludedValues = true;\r\n            }\r\n          });\r\n          if (!isInExcludedValues) {\r\n            this.relationships.push(relationship);\r\n          }\r\n        } else if (property.toLowerCase().indexOf(this.type.toLowerCase()) > -1) {\r\n          this.relationships.push(relationship);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private hasDetails(current): boolean {\r\n    if ((current.mediatorSubstance && current.mediatorSubstance.name)\r\n      || (current.amount)\r\n      || (current.qualification)\r\n      || (current.interactionType)\r\n      || (current.comments)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  openModal(templateRef) {\r\n\r\n    this.gaService.sendEvent(this.analyticsEventCategory, 'button', 'references view');\r\n\r\n    const dialogRef = this.dialog.open(templateRef, {});\r\n    this.overlayContainer.style.zIndex = '1002';\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.overlayContainer.style.zIndex = null;\r\n    });\r\n  }\r\n\r\n  formatValue(v) {\r\n    if (v) {\r\n      if (typeof v === 'object') {\r\n        if (v.display) {\r\n          return v.display;\r\n        } else if (v.value) {\r\n          return v.value;\r\n        } else {\r\n          return null;\r\n        }\r\n      } else {\r\n        return v;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  displayAmount(amt): string {\r\n    let ret = '';\r\n    if (amt) {\r\n      if (typeof amt === 'object') {\r\n        if (amt) {\r\n          let addedunits = false;\r\n          let unittext = this.formatValue(amt.units);\r\n          if (!unittext) {\r\n            unittext = '';\r\n          }\r\n            const atype = this.formatValue(amt.type);\r\n            if (atype) {\r\n              ret += atype + '\\n';\r\n            }\r\n            if (amt.average || amt.high || amt.low) {\r\n              if (amt.average) {\r\n                ret += amt.average;\r\n                if (amt.units) {\r\n                  ret += ' ' + unittext;\r\n                  addedunits = true;\r\n                }\r\n              }\r\n              if (amt.high || amt.low) {\r\n                ret += ' [';\r\n                if (amt.high && !amt.low) {\r\n                  ret += '<' + amt.high;\r\n                } else if (!amt.high && amt.low) {\r\n                  ret += '>' + amt.low;\r\n                } else if (amt.high && amt.low) {\r\n                  ret += amt.low + ' to ' + amt.high;\r\n                }\r\n                ret += '] ';\r\n                if (!addedunits) {\r\n                  if (amt.units) {\r\n                    ret += ' ' + unittext;\r\n                    addedunits = true;\r\n                  }\r\n                }\r\n              }\r\n              ret += ' (average) ';\r\n            }\r\n            if (amt.highLimit || amt.lowLimit) {\r\n              ret += '\\n[';\r\n            }\r\n            if (amt.highLimit && !amt.lowLimit) {\r\n              ret += '<' + amt.highLimit;\r\n            } else if (!amt.highLimit && amt.lowLimit) {\r\n              ret += '>' + amt.lowLimit;\r\n            } else if (amt.highLimit && amt.lowLimit) {\r\n              ret += amt.lowLimit + ' to ' + amt.highLimit;\r\n            }\r\n            if (amt.highLimit || amt.lowLimit) {\r\n              ret += '] ';\r\n              if (!addedunits) {\r\n                if (amt.units) {\r\n                  ret += ' ' + unittext;\r\n                  addedunits = true;\r\n                }\r\n              }\r\n              ret += ' (limits)';\r\n            }\r\n          }\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  close(){\r\n    this.dialog.closeAll();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubstanceRelationshipsComponent } from './substance-relationships.component';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {ReferencesManagerModule} from '../../references-manager/references-manager.module';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {RouterModule} from '@angular/router';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\r\nimport { RelationshipsDownloadButtonComponent } from '@gsrs-core/substance-form/relationships/relationships-download-button/relationships-download-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceRelationshipsComponent),\r\n    MatTableModule,\r\n    ReferencesManagerModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    CdkTableModule,\r\n    MatTooltipModule,\r\n    RouterModule,\r\n    MatSortModule,\r\n    SubstanceImageModule\r\n  ],\r\n  declarations: [\r\n    SubstanceRelationshipsComponent,\r\n    RelationshipsDownloadButtonComponent\r\n  ],\r\n  exports: [\r\n    RelationshipsDownloadButtonComponent\r\n  ]\r\n})\r\nexport class SubstanceRelationshipsModule { }\r\n"],"sourceRoot":"webpack:///","file":"7549.e08efddae437ecec.js"}