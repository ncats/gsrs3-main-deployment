{"version":3,"mappings":"gWAKMA,kBAAwDA,SAAiCA,sCAAjCA,wHAD1DA,iBACEA,uBACAA,eAAqEA,+EAASC,wBAC9ED,iBAAmFA,QAEnFA,eACEA,eACEA,SACFA,QACFA,QACFA,kCATQA,6CAEoCA,+CAGdA,4DACxBA,mEAXVA,eACEA,cAAIA,4CACFA,aAAGA,gBAAIA,QAAKA,wBAAWA,QACzBA,iBACEA,uBAWFA,QACFA,4BAZ+BA,+DAkBzBA,kBAAwDA,SAAiCA,sCAAjCA,6EAF1DA,iBAEEA,uBACAA,eAAqEA,+EAASE,wBAE9EF,iBACAA,QACAA,eACEA,eACEA,SACFA,QACFA,QACFA,kCAVQA,6CAGoCA,+CAGdA,4DACxBA,mEAZVA,eACEA,cAAIA,mDAAuCA,QAC3CA,iBACEA,uBAaFA,QAEFA,4BAf+BA,mEAqBzBA,kBAAwDA,SAAiCA,sCAAjCA,6EAF1DA,iBAEEA,uBACAA,eAAqEA,+EAASG,wBAE9EH,iBACAA,QACAA,eACEA,eACEA,SACFA,QACFA,QACFA,kCAVQA,6CAGoCA,+CAGdA,4DACxBA,mEAZVA,iBACEA,cAAIA,mDAAuCA,QAC3CA,kBACEA,uBAaFA,QACFA,4BAd+BA,gFAmB7BA,kBACIA,qBAA4CA,iDAAWI,UACnDJ,uBACFA,QACNA,QAEAA,eAEIA,kBACFA,kBACAA,QACFA,8BAFiEA,qCCvD5D,IAAMK,EAAb,eAAaA,EAAb,0CAQE,WACSC,GAAiB,6BAExBC,gBAFOD,SAJTC,mBAAmB,IAAIC,IAIGD,EAT5B,uCAcE,WAAQ,WACNE,KAAKC,iBAAiBC,UAAU,YAC9BJ,EAAKK,UAAYA,EACM,MAAlBL,EAAKK,WAAuBL,EAAKK,UAAUC,QAAQC,WAAWC,OAAS,IAC1ER,EAAKS,YAAYC,KAAKV,EAAKK,UAAUC,QAAQC,WAAWC,QACxDR,EAAKO,WAAaP,EAAKK,UAAUC,QAAQC,WACzCP,EAAKW,SAAWX,EAAKO,WAAWK,OAC9B,YAAS,MAAuB,oBAAnBC,EAAUC,OACzBd,EAAKe,aAAef,EAAKO,WAAWK,OAClC,YAAS,MAAuB,0BAAnBC,EAAUC,OACzBd,EAAKgB,aAAehB,EAAKO,WAAWK,OAClC,YAAS,MAAuB,0BAAnBC,EAAUC,YAzBjC,4BA8BE,SAAeG,EAAaC,GAE1BhB,KAAKiB,OAASD,EAAQb,UAAUe,QAEhBlB,KAAKH,OAAOsB,KAAKJ,EAAa,CAC9CK,MAAO,QACPC,OAAQ,QACRC,WAAY,4BArChB,mBAyCA,WACEtB,KAAKH,OAAO0B,eA1CdC,GAAyDC,kDAA5C7B,GAAmCL,sCAAnCK,EAAmC8B,2wBDZhDnC,uBAiBAA,uBAmBAA,uBAqBAA,iDAzDMA,8CAiBAA,+DAmBAA,4jBCxBOK,EAAb,cCUa+B,EAAb,eAAaA,KAAbC,iFAAaD,4DAZF,CACPE,KACAC,KACAC,KACAC,KACAC,aAAsCrC,GACtCsC,QAMSP,EAAb","names":["i0","ctx_r9","ctx_r15","ctx_r21","ctx_r23","SubstanceMixtureComponentsComponent","dialog","o","Subject","this","substanceUpdated","subscribe","substance","mixture","components","length","countUpdate","emit","required","filter","component","type","presentInAny","presentInOne","templateRef","related","active","refuuid","open","width","height","panelClass","closeAll","e","SubstanceCardBase","selectors","SubstanceMixtureComponentsModule","v","CommonModule","RouterModule","MatDialogModule","MatIconModule","DynamicComponentLoaderModule","SubstanceImageModule"],"sources":["./src/app/core/substance-details/substance-mixture-components/substance-mixture-components.component.html","./src/app/core/substance-details/substance-mixture-components/substance-mixture-components.component.ts","./src/app/core/substance-details/substance-mixture-components/substance-mixture-components.module.ts"],"sourcesContent":["<div *ngIf=\"required && required.length > 0\">\r\n  <h3>All of the following components\r\n    <i>must</i> be present:</h3>\r\n  <div class=\"flex-row wrap\">\r\n    <div *ngFor=\"let component of required\" class=\"thumb-col\">\r\n      <div *ngIf=\"component.substance.linkingID\" class=\"code\">{{component.substance.linkingID}}</div>\r\n      <a tabindex=\"0\" role=\"img\" aria-label=\"substance image\" class=\"zoom\" (click)=\"openImageModal(structureTemplate, component)\">\r\n      <img class=\"image-icon\" appSubstanceImage [entityId]=\"component.substance.refuuid\"></a>\r\n\r\n      <div>\r\n        <a class=\"substance-name\" [routerLink]=\"['/substances', component.substance.refuuid]\">\r\n          {{component.substance.name}}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"presentInAny && presentInAny.length > 0\">\r\n  <h3>Any of these components may be present:</h3>\r\n  <div class=\"flex-row wrap\">\r\n    <div *ngFor=\"let component of presentInAny\" class=\"thumb-col\">\r\n\r\n      <div *ngIf=\"component.substance.linkingID\" class=\"code\">{{component.substance.linkingID}}</div>\r\n      <a tabindex=\"0\" role=\"img\" aria-label=\"substance image\" class=\"zoom\" (click)=\"openImageModal(structureTemplate, component)\">\r\n\r\n      <img class=\"image-icon\" appSubstanceImage [entityId]=\"component.substance.refuuid\">\r\n      </a>\r\n      <div>\r\n        <a class=\"substance-name\" [routerLink]=\"['/substances', component.substance.refuuid]\">\r\n          {{component.substance.name}}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<div *ngIf=\"presentInOne && presentInOne.length > 0\" class=\"flex-row wrap\">\r\n  <h3>One of these components may be present:</h3>\r\n  <div class=\"flex-row\">\r\n    <div *ngFor=\"let component of presentInOne\" class=\"thumb-col\">\r\n\r\n      <div *ngIf=\"component.substance.linkingID\" class=\"code\">{{component.substance.linkingID}}</div>\r\n      <a tabindex=\"0\" role=\"img\" aria-label=\"substance image\" class=\"zoom\" (click)=\"openImageModal(structureTemplate, component)\">\r\n\r\n      <img class=\"image-icon\" appSubstanceImage [entityId]=\"component.substance.refuuid\">\r\n      </a>\r\n      <div>\r\n        <a class=\"substance-name\" [routerLink]=\"['/substances', component.substance.refuuid]\">\r\n          {{component.substance.name}}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<ng-template #structureTemplate>\r\n  <div class = \"close-container\" mat-dialog-header>\r\n      <button mat-mini-fab class = \"mat-mini-fab\" (click) = \"close()\">\r\n          <mat-icon  class = \"icon\" svgIcon=\"close\"></mat-icon>\r\n        </button>\r\n  </div>\r\n    \r\n  <div >\r\n    \r\n      <div style=\"height:620px;min-height:621px;width:620px;min-width:601px;margin:auto\">\r\n    <img class=\"structure-img-big\" appSubstanceImage  size = \"600\" [entityId]=\"active\" >\r\n    </div>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport {SubstanceCardBase} from '../substance-card-base';\r\nimport {MixtureComponents, SubstanceDetail} from '../../substance/substance.model';\r\nimport {Subject} from 'rxjs';\r\nimport { StructureImageModalComponent } from '@gsrs-core/structure';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-substance-mixture-components',\r\n  templateUrl: './substance-mixture-components.component.html',\r\n  styleUrls: ['./substance-mixture-components.component.scss']\r\n})\r\nexport class SubstanceMixtureComponentsComponent extends SubstanceCardBase implements OnInit {\r\n  components: Array<MixtureComponents>;\r\n  required: Array<MixtureComponents>;\r\n  presentInAny: Array<MixtureComponents>;\r\n  presentInOne: Array<MixtureComponents>;\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  active: string;\r\n\r\n  constructor(\r\n   private dialog: MatDialog\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.substance = substance;\r\n      if ((this.substance != null) && (this.substance.mixture.components.length > 0)) {\r\n        this.countUpdate.emit(this.substance.mixture.components.length);\r\n        this.components = this.substance.mixture.components;\r\n        this.required = this.components.filter(\r\n          component => component.type === 'MUST_BE_PRESENT');\r\n        this.presentInAny = this.components.filter(\r\n          component => component.type === 'MAY_BE_PRESENT_ANY_OF');\r\n        this.presentInOne = this.components.filter(\r\n          component => component.type === 'MAY_BE_PRESENT_ONE_OF');\r\n      }\r\n    });\r\n  }\r\n\r\n  openImageModal(templateRef, related: any) {\r\n    let data = {uuid: related.substance.refuuid};\r\n    this.active = related.substance.refuuid;\r\n \r\n  const dialogRef = this.dialog.open(templateRef, {\r\n    width: '750px',\r\n    height: '700px',\r\n    panelClass: 'structure-image-panel'\r\n    });\r\n}\r\n\r\nclose() {\r\n  this.dialog.closeAll();\r\n}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { SubstanceMixtureComponentsComponent } from './substance-mixture-components.component';\r\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceMixtureComponentsComponent),\r\n    SubstanceImageModule\r\n  ],\r\n  declarations: [\r\n    SubstanceMixtureComponentsComponent\r\n  ]\r\n})\r\nexport class SubstanceMixtureComponentsModule { }\r\n\r\n"],"sourceRoot":"webpack:///","file":"5965.ca4a7d859dbb666b.js"}