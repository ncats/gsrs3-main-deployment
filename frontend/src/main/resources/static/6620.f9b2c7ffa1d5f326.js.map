{"version":3,"mappings":"gVAiBaA,EAAb,eAAaA,EAAb,0CAYE,WACSC,EACCC,EACDC,EACAC,GAA4B,6BAEnCC,gBALOJ,YACCI,yBACDA,cACAA,kBARFA,wBAAwB,GACxBA,wBAAwB,mBACvBA,gBAAqC,GAS3CA,EAAKC,uBAAyB,8CAHKD,EAhBvC,uCAsBE,WAAQ,WAENE,KAAKC,eAAkBD,KAAKH,cAAcK,YAAcF,KAAKH,cAAcK,WAAWC,UAAa,KACnG,IAAIC,EAAc,qCACdJ,KAAKC,iBACHD,KAAKC,eAAeI,OAAOC,kBAC7BF,EAAcJ,KAAKC,eAAeI,OAAOC,iBAEvCN,KAAKC,eAAeM,wBACtBP,KAAKO,sBAAwBP,KAAKC,eAAeM,wBAIrDP,KAAKQ,gBAAgBC,KAAKL,GAC1B,IAAMM,EAAwBV,KAAKL,qBAAqBgB,UAAUC,UAAU,YAC1EC,EAAKF,UAAYA,EACjBE,EAAKC,eAAiBH,EAAUG,eAG5BD,EAAKC,gBAA0C,0BAAxBD,EAAKC,gBAC1BD,EAAKF,UAAUI,wBACjBF,EAAKE,sBAAwBF,EAAKF,UAAUI,sBAExCF,EAAKF,UAAUI,sBAAsBT,iBACnCO,EAAKF,UAAUI,sBAAsBT,gBAAgBU,UACvDH,EAAKI,qBAAuBJ,EAAKF,UAAUI,sBAAsBT,gBAAgBU,UAuBzFH,EAAKlB,qBAAqBuB,eAO5BlB,KAAKmB,cAAcC,KAAKV,KA7E5B,6BAgFE,cAhFF,yBAmFE,WACEV,KAAKmB,cAAcE,QAAQ,YACzBC,EAAaC,kBArFnB,+BA0FE,WAAiB,WAKTC,GAFWxB,KAAKH,cAAcK,YAAcF,KAAKH,cAAcK,WAAWC,UAAY,MAExDsB,gBAAgBC,iBACpDC,OAAOC,KAAKJ,GAAcH,QAAQ,YACP,MAArBG,EAAaK,KACW,WAAtBL,EAAaK,GACfhB,EAAKiB,sBAAsBD,IAAO,EACH,aAAtBL,EAAaK,GAEpBhB,EAAKiB,sBAAsBD,IADY,IAArChB,EAAKkB,4BAKsB,YAAtBP,EAAaK,KACtBhB,EAAKiB,sBAAsBD,IAAO,QA3G5C,qCAiHE,SAAwBlB,GACJ,OAAdA,EAQEX,KAAKc,gBAA0C,0BAAxBd,KAAKc,iBAC9Bd,KAAKW,UAAUI,sBAAsBT,gBARI,CACzC0B,SAAUrB,EAAUsB,MACpBC,KAAMvB,EAAUsB,MAChBjB,QAASL,EAAUwB,KACnBrB,eAAgB,YAChBsB,WAAYzB,EAAUyB,aAMpBpC,KAAKc,gBAA0C,0BAAxBd,KAAKc,iBAC9Bd,KAAKW,UAAUI,sBAAsBT,gBAAkB,MA/H/D,qCAoIE,SAAwB+B,GACtBrC,KAAKe,sBAAsBsB,kBAAoBA,MArInDC,GAAqDC,kDAAxC9C,GAA+B+C,sEAA/B/C,EAA+BgD,kVCjB5CD,iBACEA,iBACEA,iBACEA,oCAAwBA,4CAAoBE,+BAG5CF,QACFA,QAgBFA,QAvBFA,eAKQA,iDAAgC,iCAAhCA,CAAgC,ghCDY3B/C,EAAb,mCEOakD,EAAb,eAAaA,KAAbC,iFAAaD,4DAXF,CACPE,KACAC,KACAC,aAAsCtD,GACtCuD,IACAC,QAMSN,EAAb","names":["SsgParentSubstanceFormComponent","gaService","substanceFormService","cvService","configService","t","analyticsEventCategory","this","configSsg4Form","configData","ssg4Form","configTitle","titles","parentSubstance","parentSubstanceHeader","menuLabelUpdate","emit","substanceSubscription","substance","subscribe","e","substanceClass","specifiedSubstanceG4m","refuuid","relatedSubstanceUuid","resetState","subscriptions","push","forEach","subscription","unsubscribe","confSettings","settingsDisplay","startingMaterial","Object","keys","key","configSettingsDisplay","privateShowAdvancedSettings","refPname","_name","name","uuid","approvalID","manufactureIdType","i","SubstanceFormBase","i0","selectors","ctx","SsgParentSubstanceFormModule","d","CommonModule","RouterModule","DynamicComponentLoaderModule","SubstanceFormModule","SubstanceSelectorModule"],"sources":["./src/app/core/substance-form/ssg-parent-substance-form/ssg-parent-substance-form.component.ts","./src/app/core/substance-form/ssg-parent-substance-form/ssg-parent-substance-form.component.html","./src/app/core/substance-form/ssg-parent-substance-form/ssg-parent-substance-form.module.ts"],"sourcesContent":["import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { SubstanceRelated, SubstanceSummary, SpecifiedSubstanceG3, SpecifiedSubstanceG4m } from '@gsrs-core/substance';\nimport { SubstanceFormService } from '@gsrs-core/substance-form/substance-form.service';\nimport { ControlledVocabularyService, VocabularyTerm } from '@gsrs-core/controlled-vocabulary';\nimport { ConfigService } from '@gsrs-core/config/config.service';\nimport { ScrollToService } from '@gsrs-core/scroll-to/scroll-to.service';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\nimport { SubstanceFormSsg4mStartingMaterialsModule } from '@gsrs-core/substance-ssg4m/ssg4m-starting-materials/substance-form-ssg4m-starting-materials.module';\n\n@Component({\n  selector: 'app-ssg-parent-substance-form',\n  templateUrl: './ssg-parent-substance-form.component.html',\n  styleUrls: ['./ssg-parent-substance-form.component.scss']\n})\n\nexport class SsgParentSubstanceFormComponent extends SubstanceFormBase implements OnInit, AfterViewInit, OnDestroy {\n  substance: any;\n  substanceClass: string;\n  privateShowAdvancedSettings: boolean;\n  specifiedSubstanceG4m: SpecifiedSubstanceG4m;\n  parentSubstance: SubstanceRelated;\n  relatedSubstanceUuid: string;\n  configSsg4Form: any;\n  public configSettingsDisplay = {};\n  public parentSubstanceHeader = 'Parent Substance';\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    public gaService: GoogleAnalyticsService,\n    private substanceFormService: SubstanceFormService,\n    public cvService: ControlledVocabularyService,\n    public configService: ConfigService\n  ) {\n    super();\n    this.analyticsEventCategory = 'substance form ssg 3 and 4 parent substance';\n  }\n\n  ngOnInit() {\n    // Get Config variables for SSG4\n    this.configSsg4Form = (this.configService.configData && this.configService.configData.ssg4Form) || null;\n    let configTitle = 'Search or Register a New Substance';\n    if (this.configSsg4Form) {\n      if (this.configSsg4Form.titles.parentSubstance) {\n        configTitle = this.configSsg4Form.titles.parentSubstance;\n      }\n      if (this.configSsg4Form.parentSubstanceHeader) {\n        this.parentSubstanceHeader = this.configSsg4Form.parentSubstanceHeader;\n      }\n    }\n\n    this.menuLabelUpdate.emit(configTitle);\n    const substanceSubscription = this.substanceFormService.substance.subscribe(substance => {\n      this.substance = substance;\n      this.substanceClass = substance.substanceClass;\n\n      // SSG4m: Load/Set Substance Name with Structure\n      if (this.substanceClass && this.substanceClass === 'specifiedSubstanceG4m') {\n        if (this.substance.specifiedSubstanceG4m) {\n          this.specifiedSubstanceG4m = this.substance.specifiedSubstanceG4m;\n\n          if (this.substance.specifiedSubstanceG4m.parentSubstance) {\n            if (this.substance.specifiedSubstanceG4m.parentSubstance.refuuid) {\n              this.relatedSubstanceUuid = this.substance.specifiedSubstanceG4m.parentSubstance.refuuid;\n            }\n          }\n        }\n      }\n\n      // Specified Substance Group 3\n      /*\n      if (substance.specifiedSubstanceG3.parentSubstance == null) {\n        substance.specifiedSubstanceG3.parentSubstance = {};\n      }\n      this.substanceFormService.resetState();\n      this.parentSubstance = substance.specifiedSubstanceG3.parentSubstance;\n\n      if (substance.specifiedSubstanceG3.parentSubstance != null) {\n        this.relatedSubstanceUuid = substance.specifiedSubstanceG3.parentSubstance.refuuid;\n      }\n      */\n\n      // Specified Substance Group 4 Manufacturing\n      if (substance.specifiedSubstanceG4m.parentSubstance == null) {\n        //  substance.specifiedSubstanceG4m.parentSubstance = {};\n      }\n      this.substanceFormService.resetState();\n      //  this.parentSubstance = substance.specifiedSubstanceG4m.parentSubstance;\n\n      // if (substance.specifiedSubstanceG4m.parentSubstance != null) {\n      //   this.relatedSubstanceUuid = substance.specifiedSubstanceG4m.parentSubstance.refuuid;\n      // }\n    });\n    this.subscriptions.push(substanceSubscription);\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n\n  getConfigSettings(): void {\n    // Get SSG4 Config Settings from config.json file to show and hide fields in the form\n    let configSsg4Form: any;\n    configSsg4Form = this.configService.configData && this.configService.configData.ssg4Form || null;\n    // *** IMPORTANT: get the correct value. Get 'startingMaterial' json values from config\n    const confSettings = configSsg4Form.settingsDisplay.startingMaterial;\n    Object.keys(confSettings).forEach(key => {\n      if (confSettings[key] != null) {\n        if (confSettings[key] === 'simple') {\n          this.configSettingsDisplay[key] = true;\n        } else if (confSettings[key] === 'advanced') {\n          if (this.privateShowAdvancedSettings === true) {\n            this.configSettingsDisplay[key] = true;\n          } else {\n            this.configSettingsDisplay[key] = false;\n          }\n        } else if (confSettings[key] === 'removed') {\n          this.configSettingsDisplay[key] = false;\n        }\n      }\n    });\n  }\n\n  relatedSubstanceUpdated(substance: SubstanceSummary): void {\n    if (substance !== null) {\n      const relatedSubstance: SubstanceRelated = {\n        refPname: substance._name,\n        name: substance._name,\n        refuuid: substance.uuid,\n        substanceClass: 'reference',\n        approvalID: substance.approvalID\n      };\n      if (this.substanceClass && this.substanceClass === 'specifiedSubstanceG4m') {\n        this.substance.specifiedSubstanceG4m.parentSubstance = relatedSubstance;\n      }\n    } else {\n      if (this.substanceClass && this.substanceClass === 'specifiedSubstanceG4m') {\n        this.substance.specifiedSubstanceG4m.parentSubstance = {};\n      }\n    }\n  }\n\n  updateManufactureIdType(manufactureIdType: string): void {\n    this.specifiedSubstanceG4m.manufactureIdType = manufactureIdType;\n  }\n\n}\n","<div class=\"name-form-container\">\n  <div class=\"form-row\">\n    <div class=\"related-substance\">\n      <app-substance-selector (selectionUpdated)=\"relatedSubstanceUpdated($event)\"\n        eventCategory=\"substanceRelationshipRelatedSub\" placeholder=\"Search by Name/CAS RN/UNII/BDNUM\"\n        [header]=\"parentSubstanceHeader\" [subuuid]=\"relatedSubstanceUuid\" [showMorelinks]=\"true\">\n      </app-substance-selector>\n    </div>\n\n    <!--\n  <div class=\"form-row\">\n    <div class=\"col\">\n      <a [routerLink]=\"['/substances/register/chemical']\" target=\"_blank\" matTooltip='Register New Substance'>\n        <span class=\"font11px\">Register New</span>\n      </a>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <a [routerLink]=\"['/structure-search']\" target=\"_blank\" matTooltip='Structure Search'>\n        <span class=\"font11px\">Search By Structure</span>\n      </a>\n    </div>\n  </div>\n  -->\n\n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { SsgParentSubstanceFormComponent } from './ssg-parent-substance-form.component';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { SubstanceSelectorModule } from '@gsrs-core/substance-selector/substance-selector.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    DynamicComponentLoaderModule.forChild(SsgParentSubstanceFormComponent),\n    SubstanceFormModule,\n    SubstanceSelectorModule\n  ],\n  declarations: [\n    SsgParentSubstanceFormComponent\n  ]\n})\nexport class SsgParentSubstanceFormModule { }\n"],"sourceRoot":"webpack:///","file":"6620.f9b2c7ffa1d5f326.js"}