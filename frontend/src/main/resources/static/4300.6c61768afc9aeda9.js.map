{"version":3,"mappings":"4XAAAA,iBACEA,iBACEA,4BACEA,mBAAyCA,oFAAzCA,QACFA,QACAA,gCAAoBA,sDAAaC,kBACjCD,QACFA,QAEAA,iBACEA,iBACEA,qCACFA,QACFA,QAEFA,8BAZ+CA,kDAEYA,6CAM9BA,2DCItB,IAAME,EAAb,eAAaA,EAAb,0CAGE,WACUC,EACDC,EACAC,GAAsC,6BAE7CC,gBAJQH,uBACDG,cACAA,cAJDA,gBAAqC,GAO3CA,EAAKC,uBAAyB,kCAHeD,EANjD,uCAYE,WAAQ,WACNE,KAAKC,gBAAgBC,KAAK,cAC1B,IAAMC,EAAwBH,KAAKL,qBAAqBS,UAAUC,UAAU,YACzB,MAA7CD,EAAUE,qBAAqBC,aACjCH,EAAUE,qBAAqBC,WAAa,IAE9CC,EAAKb,qBAAqBc,aAC1BD,EAAKD,WAAaH,EAAUE,qBAAqBC,aAGnDP,KAAKU,cAAcC,KAAKR,KAtB5B,6BAyBE,cAzBF,yBA4BE,WACEH,KAAKU,cAAcE,QAAQ,YACzBC,EAAaC,kBA9BnB,0BAkCE,SAAaC,GACXf,KAAKO,WAAWQ,OAASA,MAnC7BC,GAAgDC,kDAAnCvB,GAA0BF,2DAA1BE,EAA0BwB,iYDfvC1B,4BAAkCA,qiBCerBE,EAAb,wBCSayB,EAAb,eAAaA,KAAbC,iFAAaD,4DAdF,CACPE,KACAC,aAAsC5B,GACtC6B,IACAC,IACAC,KACAC,KACAC,SAOSR,EAAb","names":["i0","ctx_r4","SsgDefinitionFormComponent","substanceFormService","gaService","cvService","a","analyticsEventCategory","this","menuLabelUpdate","emit","substanceSubscription","substance","subscribe","specifiedSubstanceG3","definition","t","resetState","subscriptions","push","forEach","subscription","unsubscribe","access","s","SubstanceFormBase","selectors","SsgDefinitionFormModule","u","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatInputModule","MatFormFieldModule","ReactiveFormsModule","FormsModule"],"sources":["./src/app/core/substance-form/ssg-definition-form/ssg-definition-form.component.html","./src/app/core/substance-form/ssg-definition-form/ssg-definition-form.component.ts","./src/app/core/substance-form/ssg-definition-form/ssg-definition-form.module.ts"],"sourcesContent":["<div class=\"name-form-container\" *ngIf=\"definition\">\n  <div class=\"form-row\">\n    <mat-form-field class=\"name\">\n      <input matInput placeholder=\"Definition\" [(ngModel)]=\"definition.definition\" name=\"definition\" />\n    </mat-form-field>\n    <app-access-manager (accessOut)=\"updateAccess($event)\" [access]=\"definition.access\">\n    </app-access-manager>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"references-container\">\n      <app-domain-references [referencesUuids]=\"definition.references\" #references></app-domain-references>\n    </div>\n  </div>\n\n</div>","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Definition } from '@gsrs-core/substance';\nimport { Subscription } from 'rxjs';\nimport { SubstanceFormService } from '@gsrs-core/substance-form/substance-form.service';\nimport { ScrollToService } from '@gsrs-core/scroll-to/scroll-to.service';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { ControlledVocabularyService, VocabularyTerm } from '@gsrs-core/controlled-vocabulary';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\n\n@Component({\n  selector: 'app-ssg-definition-form',\n  templateUrl: './ssg-definition-form.component.html',\n  styleUrls: ['./ssg-definition-form.component.scss']\n})\n\nexport class SsgDefinitionFormComponent extends SubstanceFormBase implements OnInit, AfterViewInit, OnDestroy {\n  definition: Definition;\n  private subscriptions: Array<Subscription> = [];\n  constructor(\n    private substanceFormService: SubstanceFormService,\n    public gaService: GoogleAnalyticsService,\n    public cvService: ControlledVocabularyService\n  ) {\n    super();\n    this.analyticsEventCategory = 'substance form ssg 3 definition';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Definition');\n    const substanceSubscription = this.substanceFormService.substance.subscribe(substance => {\n      if (substance.specifiedSubstanceG3.definition == null) {\n        substance.specifiedSubstanceG3.definition = {};\n      }\n      this.substanceFormService.resetState();\n      this.definition = substance.specifiedSubstanceG3.definition;\n    //  this.definition.references = [];\n    });\n    this.subscriptions.push(substanceSubscription);\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.definition.access = access;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SsgDefinitionFormComponent } from './ssg-definition-form.component';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SsgDefinitionFormComponent),\n    SubstanceFormModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  declarations: [\n    SsgDefinitionFormComponent\n  ]\n})\n\nexport class SsgDefinitionFormModule { }\n"],"sourceRoot":"webpack:///","file":"4300.6c61768afc9aeda9.js"}