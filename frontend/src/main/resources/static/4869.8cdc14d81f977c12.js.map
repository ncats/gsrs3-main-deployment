{"version":3,"mappings":"kWACAA,eAAkDA,iDAASC,eAAcD,SAAoCA,sBAAsEA,8BAA1GA,wDAA8CA,+DCOhH,IAAME,EAAb,eAAaA,EAAb,WAQE,WAAoBC,IAAsB,eAAtBC,kBANXA,eAAY,IAErBA,iBAAa,EAENA,kBAAc,EANvB,uCAUE,WACEA,KAAKC,kBAXT,wBAaE,WACED,KAAKE,aAAeF,KAAKE,YACzBF,KAAKC,kBAfT,2BAiBE,WACE,IAAKD,KAAKG,MAAQH,KAAKG,KAAKC,QAAUJ,KAAKK,UAIzC,OAHAL,KAAKM,YAAcN,KAAKG,KAAKI,QAAQ,kBAAmB,SACxDP,KAAKE,aAAc,OACnBF,KAAKQ,YAAa,GAGpBR,KAAKQ,YAAa,GACO,IAAzBR,KAASE,aACPF,KAAKM,YAAcN,KAAKG,KAAKM,UAAU,EAAGT,KAAKK,WAAa,MAC5DL,KAAKM,YAAcN,KAAKM,YAAYC,QAAQ,kBAAmB,WACjC,IAArBP,KAAKE,cACdF,KAAKM,YAAcN,KAAKM,YAAcN,KAAKG,KAAKI,QAAQ,kBAAmB,cA7BjFG,kDAAaZ,GAAiBF,uCAAjBE,EAAiBa,2ODR9Bf,iBACAA,4BADKA,uCACDA,4KCOSE,EAAb,oCCJQF,gBAAuCA,kBAAKA,kCAC5CA,gBACEA,wBACFA,gCADaA,8BAAkB,wCAI9BA,gBAAuCA,wBAAWA,kCAKjDA,iBAAqBA,sBAAUA,QAC/BA,kBACEA,qCACFA,QACAA,kBACEA,mBACAA,qBAA+DA,iBAAKA,QACtEA,gDAL0BA,wCAAyB,kEANrDA,gBACEA,qBAA6DA,gEAASgB,eAAkEhB,gBAAIA,QAE5IA,2CAWFA,kCAbiGA,wEAgBnGA,sCACAA,iBCfC,IAAMiB,EAAb,eAAaA,EAAb,0CAME,WACUC,EACDC,EACCC,GAAyC,6BAEjDC,gBAJQH,SACDG,cACCA,4BARVA,QAA8B,GAC9BA,mBAA6B,CAAC,OAAQ,cACtCA,mBAAmB,IAAIC,IAM4BD,EATrD,uCAcE,WAAQ,WACNjB,KAAKmB,iBAAiBC,UAAU,YAC9BC,EAAKC,UAAYA,EACK,MAAlBD,EAAKC,WAA6C,MAAxBD,EAAKC,UAAUC,OAAiBF,EAAKC,UAAUC,MAAMnB,SACjFiB,EAAKE,MAAQF,EAAKC,UAAUC,OAE9BF,EAAKG,YAAYC,KAAKJ,EAAKE,MAAMnB,UAEnCJ,KAAK0B,iBAAmB1B,KAAKgB,wBAAwBW,wBAtBzD,uBAyBE,SAAUC,GAAW,WAEnB5B,KAAKe,UAAUc,UAAU7B,KAAK8B,uBAAwB,SAAU,mBAEhE,IAAMC,EAAY/B,KAAKc,OAAOkB,KAAKJ,EAAa,CAC9CK,SAAU,MACVC,SAAU,QAEZlC,KAAK0B,iBAAiBS,MAAMC,OAAS,OAErCL,EAAUM,cAAcjB,UAAU,YAChCkB,EAAKZ,iBAAiBS,MAAMC,OAAS,WApC3CG,GAA6CC,kDAAhC3B,GAAuBjB,6DAAvBiB,EAAuBF,mwBDdpCf,iBACIA,mBAEEA,WACEA,sBACAA,sBAGFA,QACEA,WACCA,sBACDA,sBAeFA,QAEAA,sBACAA,sBACFA,QACFA,eA9B4CA,qCA2BpBA,qDACaA,ktBCf1BiB,EAAb,oCCSa4B,EAAb,eAAaA,KAAbC,iFAAaD,4DAXF,CACPE,KACAC,aAAsC/B,GACtCgC,KACAC,KACAC,KACAC,IACAC,SAISR,EAAb","names":["i0","ctx_r1","ReadMoreComponent","elementRef","this","determineView","isCollapsed","text","length","maxLength","currentText","replace","hideToggle","substring","o","selectors","ctx_r11","SubstanceNotesComponent","dialog","gaService","overlayContainerService","r","Subject","substanceUpdated","subscribe","i","substance","notes","countUpdate","emit","overlayContainer","getContainerElement","templateRef","sendEvent","analyticsEventCategory","dialogRef","open","minWidth","maxWidth","style","zIndex","afterClosed","c","s","SubstanceCardBase","SubstanceNotesModule","u","CommonModule","DynamicComponentLoaderModule","MatTableModule","CdkTableModule","MatDialogModule","ReferencesManagerModule","MatIconModule"],"sources":["./src/app/core/substance-details/substance-notes/read-more/read-more.component.html","./src/app/core/substance-details/substance-notes/read-more/read-more.component.ts","./src/app/core/substance-details/substance-notes/substance-notes.component.html","./src/app/core/substance-details/substance-notes/substance-notes.component.ts","./src/app/core/substance-details/substance-notes/substance-notes.module.ts"],"sourcesContent":["<div [innerHTML]=\"currentText\"></div>\r\n<a *ngIf=\"!hideToggle\" class = \"blue-font toggle\" (click)=\"toggleView()\">Show {{isCollapsed? 'all ':'less'}} <mat-icon svgIcon=\"{{isCollapsed? 'drop_down':'drop_up'}}\"></mat-icon></a>\r\n","import {AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'read-more',\r\n  templateUrl: './read-more.component.html',\r\n  styleUrls: ['./read-more.component.scss']\r\n})\r\nexport class ReadMoreComponent implements OnInit {\r\n  @Input() text: string;\r\n  @Input() maxLength = 200;\r\n  currentText: string;\r\n  hideToggle = true;\r\n\r\n  public isCollapsed = true;\r\n\r\n  constructor(private elementRef: ElementRef) {\r\n  }\r\n  ngOnInit() {\r\n    this.determineView();\r\n  }\r\n  toggleView(): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n    this.determineView();\r\n  }\r\n  determineView(): void {\r\n    if (!this.text || this.text.length <= this.maxLength) {\r\n      this.currentText = this.text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n      this.isCollapsed = false;\r\n      this.hideToggle = true;\r\n      return;\r\n    }\r\n    this.hideToggle = false;\r\n    if (this.isCollapsed === true) {\r\n      this.currentText = this.text.substring(0, this.maxLength) + '...';\r\n      this.currentText = this.currentText.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n    } else if (this.isCollapsed === false)  {\r\n      this.currentText = this.currentText = this.text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"responsive\">\r\n    <table class=\"no-bottom-border\" mat-table [dataSource]=\"notes\">\r\n\r\n      <ng-container matColumnDef=\"note\">\r\n        <th mat-header-cell *matHeaderCellDef> Note </th>\r\n        <td mat-cell *matCellDef=\"let note\">\r\n          <read-more [text]=\"note.note\" [maxLength]=\"100\"></read-more>\r\n        </td>\r\n      </ng-container>\r\n        <ng-container matColumnDef=\"references\">\r\n         <th mat-header-cell *matHeaderCellDef> References </th>\r\n        <td mat-cell *matCellDef=\"let note\">\r\n          <button class = \"mat-raised-button mat-primary dialog-close\" (click)=\"openModal(refTemplate)\"  [disabled]=\"note.references.length <= 0\">View</button>\r\n\r\n          <ng-template #refTemplate>\r\n          <h2 mat-dialog-title>References</h2>\r\n          <div mat-dialog-content>\r\n            <app-references-manager [substance] = \"substance\" [references] = \"note.references\"></app-references-manager>\r\n          </div>\r\n          <div mat-dialog-actions>\r\n            <span class=\"middle-fill\"></span>\r\n            <button class=\"mat-raised-button mat-primary\" mat-dialog-close>Close</button>\r\n          </div>\r\n        </ng-template>\r\n\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  </div>\r\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport { SubstanceCardBase } from '../substance-card-base';\r\nimport {SubstanceDetail, SubstanceNote} from '../../substance/substance.model';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\r\nimport { ReadMoreComponent } from '@gsrs-core/substance-details/substance-notes/read-more/read-more.component';\r\nimport {Subject} from 'rxjs';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-substance-notes',\r\n  templateUrl: './substance-notes.component.html',\r\n  styleUrls: ['./substance-notes.component.scss']\r\n})\r\nexport class SubstanceNotesComponent extends SubstanceCardBase implements OnInit {\r\n  notes: Array<SubstanceNote> = [];\r\n  displayedColumns: string[] = ['note', 'references'];\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  private overlayContainer: HTMLElement;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    public gaService: GoogleAnalyticsService,\r\n    private overlayContainerService: OverlayContainer\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.substance = substance;\r\n      if (this.substance != null && this.substance.notes != null && this.substance.notes.length) {\r\n        this.notes = this.substance.notes;\r\n      }\r\n      this.countUpdate.emit(this.notes.length);\r\n    });\r\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n  }\r\n\r\n  openModal(templateRef) {\r\n\r\n    this.gaService.sendEvent(this.analyticsEventCategory, 'button', 'references view');\r\n\r\n    const dialogRef = this.dialog.open(templateRef, {\r\n      minWidth: '40%',\r\n      maxWidth: '90%'\r\n    });\r\n    this.overlayContainer.style.zIndex = '1002';\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.overlayContainer.style.zIndex = null;\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubstanceNotesComponent } from './substance-notes.component';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReferencesManagerModule} from '../../references-manager/references-manager.module';\r\nimport {ReadMoreComponent} from '@gsrs-core/substance-details/substance-notes/read-more/read-more.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceNotesComponent),\r\n    MatTableModule,\r\n    CdkTableModule,\r\n    MatDialogModule,\r\n    ReferencesManagerModule,\r\n    MatIconModule\r\n  ],\r\n  declarations: [SubstanceNotesComponent, ReadMoreComponent]\r\n})\r\nexport class SubstanceNotesModule { }\r\n"],"sourceRoot":"webpack:///","file":"4869.8cdc14d81f977c12.js"}