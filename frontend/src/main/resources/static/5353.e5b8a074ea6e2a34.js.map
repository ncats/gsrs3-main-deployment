{"version":3,"mappings":"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","names":["i0","ctx_r2","ctx_r5","ctx_r7","RefernceFormDialogComponent","dialogRef","substanceService","authService","reference","arguments","this","beforeClosed","subscribe","r","close","docType","citation","ref","uuid","lastEdited","lastEditedBy","created","createdBy","_self","showPrev","p","MAT_DIALOG_DATA","selectors","ctx_r10","ctx_r12","ctx_r14","SubstanceFormReferencesCardComponent","substanceFormReferencesService","dialog","scrollToService","gaService","overlayContainerService","l","analyticsEventCategory","canAddItemUpdate","emit","menuLabelUpdate","overlayContainer","getContainerElement","referencesSubscription","substanceReferences","i","references","filtered","searchSubscription","searchControl","valueChanges","filterList","value","console","log","error","subscriptions","push","page","pageChange","componentDestroyed","forEach","subscription","unsubscribe","access","open","data","width","style","zIndex","dialogSubscription","afterClosed","newReference","doctype","addSubstanceReference","addedReference","setTimeout","scrollToElement","deleteSubstanceReference","a","SubstanceCardBaseFilteredList","SubstanceFormReferencesModule","b","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","ScrollToModule","MatIconModule","MatButtonModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatInputModule"],"sources":["./src/app/core/substance-form/references/references-dialogs/refernce-form-dialog.component.html","./src/app/core/substance-form/references/references-dialogs/refernce-form-dialog.component.ts","./src/app/core/substance-form/references/substance-form-references-card.component.html","./src/app/core/substance-form/references/substance-form-references-card.component.ts","./src/app/core/substance-form/references/substance-form-references.module.ts"],"sourcesContent":["<h1 mat-dialog-title>{{reference.uuid ? 'Edit' : 'Add'}} Reference</h1>\n<div mat-dialog-content name = \"reference-dialog-container\" id = \"reference-dialog-container\">\n  <app-previous-references (selectedReference) = \"fillReference($event)\" *ngIf =\"showPrev\"></app-previous-references>\n  <div *ngIf=\"reference\">\n    <app-reference-form [reference]=\"reference\" #referenceForm hideDelete=\"true\" id = \"reference-dialog-form\" name = \"reference-dialog-form\"></app-reference-form>\n    <div class=\"actions\">\n      <span class=\"middle-fill\"></span>\n      <button mat-button (click)=\"cancel()\">Cancel</button>\n      <button mat-button [disabled]=\"!referenceForm || !referenceForm.isValid\" (click)=\"save()\">\n        Save\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SubstanceReference } from '../../../substance/substance.model';\nimport { SubstanceService } from '@gsrs-core/substance/substance.service';\nimport { AuthService } from '@gsrs-core/auth';\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\n\n@Component({\n  selector: 'app-refernce-form-dialog',\n  templateUrl: './refernce-form-dialog.component.html',\n  styleUrls: ['./refernce-form-dialog.component.scss']\n})\nexport class RefernceFormDialogComponent implements OnInit {\nuser: string;\nshowPrev = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<RefernceFormDialogComponent>,\n    private substanceService: SubstanceService,\n    private authService: AuthService,\n    @Inject(MAT_DIALOG_DATA) public reference: SubstanceReference = {}\n  ) {}\n\n  ngOnInit() {\n    this.dialogRef.beforeClosed().subscribe(() => this.dialogRef.close(\n      ((this.reference.docType && this.reference.docType !== '') &&\n      (this.reference.citation && this.reference.citation !== '')) ? this.reference : null));\n  }\n\n  save(): void {\n    this.dialogRef.close(this.reference);\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  fillReference(ref: SubstanceReference) {\n    delete ref.uuid;\n    delete ref.lastEdited;\n    delete ref.lastEditedBy;\n    delete ref.created;\n    delete ref.createdBy;\n    delete ref._self;\n    if ((ref.docType && ref.docType !== '') && (ref.citation && ref.citation !== '')) {\n      this.reference = ref;\n    }\n    this.showPrev = false;\n  }\n\n}\n","<div class=\"flex-row\">\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\" *ngIf=\"references && references.length > pageSize\">\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\n  </mat-form-field>\n  <span class=\"middle-fill\"></span>\n  <!-- <button mat-button (click)=\"addSubstanceReference()\">\n    Add reference <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button> -->\n</div>\n<mat-paginator *ngIf=\"references && references.length > 5\" [length]=\"filtered && filtered.length || 0\" [pageIndex]=\"page\" [pageSize]=\"5\" showFirstLastButtons=\"true\" (page)=\"pageChange($event, analyticsEventCategory)\"\n    [pageSizeOptions]=\"[5, 10, 25, 100]\">\n  </mat-paginator>\n<div class=\"reference\" *ngFor=\"let reference of paged; last as isLast\" [id]=\"reference.uuid\" appScrollToTarget>\n  <app-reference-form [reference]=\"reference\" (referenceDeleted)=\"deleteReference($event)\"></app-reference-form>\n  <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n</div>\n<mat-paginator *ngIf=\"references && references.length > 5\" [length]=\"filtered && filtered.length || 0\" [pageIndex]=\"page\" [pageSize]=\"5\" showFirstLastButtons=\"true\" (page)=\"pageChange($event, analyticsEventCategory)\"\n  [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>\n\n<div *ngIf = \"references && references.length > 0\" style = \"display: flex;\">\n    <span class=\"middle-fill\"></span>\n    <button mat-button (click)=\"addSubstanceReference()\">\n        Add reference <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n      </button> \n  </div>","import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { SubstanceCardBaseFilteredList, SubstanceCardBaseList } from '../base-classes/substance-form-base-filtered-list';\nimport { SubstanceReference } from '@gsrs-core/substance/substance.model';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RefernceFormDialogComponent } from './references-dialogs/refernce-form-dialog.component';\nimport { ScrollToService } from '../../scroll-to/scroll-to.service';\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\nimport { Subscription } from 'rxjs';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { SubstanceFormReferencesService } from './substance-form-references.service';\n\n@Component({\n  selector: 'app-substance-form-references-card',\n  templateUrl: './substance-form-references-card.component.html',\n  styleUrls: ['./substance-form-references-card.component.scss']\n})\nexport class SubstanceFormReferencesCardComponent extends SubstanceCardBaseFilteredList<SubstanceReference>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n  references: Array<SubstanceReference>;\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n\n  constructor(\n    private substanceFormReferencesService: SubstanceFormReferencesService,\n    private dialog: MatDialog,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService,\n    private overlayContainerService: OverlayContainer\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form references';\n  }\n\n  ngOnInit() {\n    this.canAddItemUpdate.emit(true);\n    this.menuLabelUpdate.emit('References');\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n  }\n\n  ngAfterViewInit() {\n    const referencesSubscription = this.substanceFormReferencesService.substanceReferences.subscribe(references => {\n      this.references = references;\n      this.filtered = references;\n      const searchSubscription = this.searchControl.valueChanges.subscribe(value => {\n        this.filterList(value, this.references, this.analyticsEventCategory);\n      }, error => {\n        console.log(error);\n      });\n      this.subscriptions.push(searchSubscription);\n      this.page = 0;\n      this.pageChange();\n    });\n    this.subscriptions.push(referencesSubscription);\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  openReferenceFormDialog(reference: SubstanceReference = { access: [] }): void {\n\n    const dialogRef = this.dialog.open(RefernceFormDialogComponent, {\n      data: reference,\n      width: '900px'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newReference => {\n      this.overlayContainer.style.zIndex = null;\n      if (newReference != null && newReference.doctype && newReference.citation) {\n        this.substanceFormReferencesService.addSubstanceReference(newReference);\n      }\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n  addItem(): void {\n    this.addSubstanceReference();\n  }\n\n  addSubstanceReference(): void {\n    const addedReference = this.substanceFormReferencesService.addSubstanceReference({});\n    setTimeout(() => {\n      this.scrollToService.scrollToElement(addedReference.uuid, 'center');\n    }, 10);\n  }\n\n  deleteReference(reference: SubstanceReference): void {\n    this.substanceFormReferencesService.deleteSubstanceReference(reference);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubstanceFormReferencesCardComponent } from './substance-form-references-card.component';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { ScrollToModule } from '../../scroll-to/scroll-to.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormReferencesCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    ScrollToModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatInputModule\n  ],\n  declarations: [\n    SubstanceFormReferencesCardComponent,\n  ]\n})\nexport class SubstanceFormReferencesModule { }\n"],"sourceRoot":"webpack:///","file":"5353.e5b8a074ea6e2a34.js"}