{"version":3,"mappings":"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","names":["i0","ctx_r2","NoteFormComponent","utilsService","this","EventEmitter","privateNote","set","note","$$deletedCode","newUUID","deleteTimer","setTimeout","t","noteDeleted","emit","clearTimeout","access","r","selectors","ctx","ctx_r5","ctx_r11","ctx_r13","ctx_r15","SubstanceFormNotesCardComponent","substanceFormNotesService","scrollToService","gaService","c","analyticsEventCategory","canAddItemUpdate","menuLabelUpdate","notesSubscription","substanceNotes","subscribe","i","notes","filtered","searchSubscription","searchControl","valueChanges","filterList","value","console","log","error","subscriptions","push","page","pageChange","componentDestroyed","forEach","subscription","unsubscribe","addNote","addSubstanceNote","scrollToElement","deleteSubstanceNote","SubstanceCardBaseFilteredList","SubstanceFormNotesModule","p","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","MatIconModule","MatButtonModule","ScrollToModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatInputModule"],"sources":["./src/app/core/substance-form/notes/note-form.component.html","./src/app/core/substance-form/notes/note-form.component.ts","./src/app/core/substance-form/notes/substance-form-notes-card.component.html","./src/app/core/substance-form/notes/substance-form-notes-card.component.ts","./src/app/core/substance-form/notes/substance-form-notes.module.ts"],"sourcesContent":["<div class=\"note-form-container\">\n  <div *ngIf=\"note.$$deletedCode\" class=\"notification-backdrop\">\n    Deleted&nbsp;\n    <button mat-icon-button matTooltip=\"Undo\" (click)=\"undoDelete()\">\n      <mat-icon svgIcon=\"undo\"></mat-icon>\n    </button>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"delete-container\">\n      <button mat-icon-button matTooltip=\"Delete note\" (click)=\"deleteNote()\">\n        <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n      </button>\n    </div>\n    <div class=\"note\">\n      <div class=\"textarea-label\">Note</div>\n      <textarea placeholder=\"Enter text here\" [(ngModel)]=\"note.note\" required name=\"note\" >\n      </textarea>\n    </div>\n    <div>\n      <app-access-manager (accessOut)=\"updateAccess($event)\" [access]=\"note.access\">\n      </app-access-manager>\n    </div>\n  </div>\n  <div class=\"form-row\" *ngIf=\"!note.$$deletedCode\">\n    <div class=\"references-container\">\n      <app-domain-references [referencesUuids]=\"note.references\" #references></app-domain-references>\n    </div>\n  </div>\n  <app-audit-info [source] = \"note\"></app-audit-info>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SubstanceNote } from '../../substance/substance.model';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UtilsService } from '../../utils/utils.service';\n\n@Component({\n  selector: 'app-note-form',\n  templateUrl: './note-form.component.html',\n  styleUrls: ['./note-form.component.scss']\n})\nexport class NoteFormComponent implements OnInit {\n  private privateNote: SubstanceNote;\n  @Output() noteDeleted = new EventEmitter<SubstanceNote>();\n  deleteTimer: any;\n\n  constructor(\n    private utilsService: UtilsService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  set note(note: SubstanceNote) {\n    this.privateNote = note;\n  }\n\n  get note(): SubstanceNote {\n    return this.privateNote;\n  }\n\n  deleteNote(): void {\n    this.privateNote.$$deletedCode = this.utilsService.newUUID();\n    if (!this.privateNote.note\n    ) {\n      this.deleteTimer = setTimeout(() => {\n        this.noteDeleted.emit(this.note);\n      }, 20);\n    }\n  }\n\n  undoDelete(): void {\n    clearTimeout(this.deleteTimer);\n    delete this.privateNote.$$deletedCode;\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.note.access = access;\n  }\n\n}\n","<div class=\"flex-row\">\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\" *ngIf=\"notes && notes.length > pageSize\">\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\n  </mat-form-field>\n  <span class=\"middle-fill\"></span>\n  <!-- <button mat-button (click)=\"addNote()\">\n    Add note <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button> -->\n</div>\n<mat-paginator *ngIf=\"notes && notes.length > 5\" [length]=\"filtered && filtered.length || 0\" [pageIndex]=\"page\" [pageSize]=\"5\" showFirstLastButtons=\"true\"\n    (page)=\"pageChange($event, analyticsEventCategory)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n  </mat-paginator>\n<div class=\"note\" *ngFor=\"let note of paged; last as isLast; index as index\" appScrollToTarget\n  [id]=\"'substance-note-' + index\">\n  <app-note-form [note]=\"note\" (noteDeleted)=\"deleteNote($event)\"></app-note-form>\n  <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n</div>\n<mat-paginator *ngIf=\"notes && notes.length > 5\" [length]=\"filtered && filtered.length || 0\" [pageIndex]=\"page\" [pageSize]=\"5\" showFirstLastButtons=\"true\"\n  (page)=\"pageChange($event, analyticsEventCategory)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>\n\n\n<div *ngIf = \"notes && notes.length > 0\" style = \"display: flex;\">\n  <span class=\"middle-fill\"></span>\n  <button mat-button (click)=\"addNote()\">\n      Add note <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n    </button>\n</div>","import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { SubstanceCardBaseFilteredList, SubstanceCardBaseList } from '../base-classes/substance-form-base-filtered-list';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { SubstanceNote } from '@gsrs-core/substance/substance.model';\nimport { ScrollToService } from '../../scroll-to/scroll-to.service';\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\nimport { Subscription } from 'rxjs';\nimport { SubstanceFormNotesService } from './substance-form-notes.service';\n\n@Component({\n  selector: 'app-substance-form-notes-card',\n  templateUrl: './substance-form-notes-card.component.html',\n  styleUrls: ['./substance-form-notes-card.component.scss']\n})\nexport class SubstanceFormNotesCardComponent extends SubstanceCardBaseFilteredList<SubstanceNote>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n\n  notes: Array<SubstanceNote>;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private substanceFormNotesService: SubstanceFormNotesService,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form notes';\n  }\n\n  ngOnInit() {\n    this.canAddItemUpdate.emit(true);\n    this.menuLabelUpdate.emit('Notes');\n  }\n\n  ngAfterViewInit() {\n    const notesSubscription = this.substanceFormNotesService.substanceNotes.subscribe(notes => {\n      this.notes = notes;\n      this.filtered = notes;\n      const searchSubscription = this.searchControl.valueChanges.subscribe(value => {\n        this.filterList(value, this.notes, this.analyticsEventCategory);\n      }, error => {\n        console.log(error);\n      });\n      this.subscriptions.push(searchSubscription);\n      this.page = 0;\n      this.pageChange();\n    });\n    this.subscriptions.push(notesSubscription);\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  addItem(): void {\n    this.addNote();\n  }\n\n  addNote(): void {\n    this.substanceFormNotesService.addSubstanceNote();\n    setTimeout(() => {\n      this.scrollToService.scrollToElement(`substance-note-0`, 'center');\n    });\n  }\n\n  deleteNote(note: SubstanceNote): void {\n    this.substanceFormNotesService.deleteSubstanceNote(note);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubstanceFormNotesCardComponent } from './substance-form-notes-card.component';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ScrollToModule } from '../../scroll-to/scroll-to.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { NoteFormComponent } from './note-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormNotesCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatInputModule\n  ],\n  declarations: [\n    SubstanceFormNotesCardComponent,\n    NoteFormComponent\n  ]\n})\nexport class SubstanceFormNotesModule { }\n"],"sourceRoot":"webpack:///","file":"6131.516a353ceb1fed14.js"}