{"version":3,"mappings":"kaA+BIA,iBACEA,kBAAkBA,sCAA0BA,QAC5CA,kBAA6BA,SAA4BA,QAC3DA,6BAD+BA,qEAE/BA,iBACEA,kBAAkBA,2BAAeA,QACjCA,kBAAmCA,SAA4BA,QACjEA,6BADqCA,kFAEnCA,iBACEA,kBACEA,gBAA4BA,kDAASC,qBACnCD,gBAAMA,SAAkDA,QAAOA,uBACjEA,QACFA,QACFA,+BAHYA,8DAAmEA,2EAI/EA,iBACEA,kBACEA,gBAA4BA,kDAASE,iBACnCF,gBAAMA,SAAyDA,QAAOA,uBACxEA,QACFA,QACFA,+BAHYA,qEAA0EA,8EAOlFA,gBAAGA,kDAASG,gBACVH,gBAAMA,SAA0DA,QAAOA,uBACzEA,+BADQA,sEAA2EA,4DAEnFA,mBAAyDA,+BAAmBA,kCANhFA,iBACEA,kBAEEA,sBAGAA,yBACFA,QACFA,6BALmEA,6CAGxDA,oFA3DjBA,eACEA,iBACAA,eACEA,iBACEA,kBAAkBA,2BAAeA,QACjCA,kBAA8BA,SAA6BA,QAC7DA,QACAA,iBACEA,kBAAkBA,8BAAiBA,QACnCA,mBACFA,QACAA,kBACEA,mBAAkBA,6BAAgBA,QAClCA,mBAA6BA,6BAAoCA,QACnEA,QACAA,kBACEA,mBAAkBA,6BAAgBA,QAClCA,mBAA6BA,UAA6BA,QAC5DA,QACAA,kBACEA,mBAAkBA,kCAAqBA,QACvCA,mBAA6BA,UAAyDA,QACxFA,QACAA,kBACEA,mBAAkBA,wBAAWA,QAC7BA,mBAA6BA,UAAuBA,QACtDA,QACAA,kBACEA,mBAAkBA,mBAAMA,QACxBA,mBAA6BA,UAAoBA,QACnDA,QACAA,yBAIAA,yBAIEA,yBAOAA,yBAOAA,yBASJA,QAEAA,mBACEA,mBACEA,iBACEA,wBACFA,QACAA,iBACEA,wBACFA,QACFA,QACAA,mBAA2BA,mEAAWI,iBAAtCJ,QACAA,eACEA,sBAAyFA,iDAASK,iBAAgBL,UAAiDA,QAEvKA,QAGFA,QACAA,8BA5EoCA,4CAIDA,sDAIAA,wDAIAA,4CAIAA,gFAIAA,sCAIAA,mCAENA,kDAIAA,kDAIEA,2FAOAA,0CAOAA,oCAagDA,0HAArBA,kCAGAA,0CAI8CA,0CAAyB,sBAAzBA,CAAyB,+BAE5EA,wDAAmEA,uFA2BlHA,yBACEA,SACFA,gCADEA,oDAONA,kBACEA,kBACFA,4BADiEA,0CAAyB,sBAAzBA,CAAyB,gCC5FrF,IAAMM,EAAb,eAAaA,EAAb,0CAkBE,WACUC,EACAC,EACDC,EACCC,EACAC,EACAC,EACAC,GAA4B,6BAEpCC,gBARQP,cACAO,qBACDA,cACCA,cACAA,WACAA,4BACAA,kBAvBVA,WAAU,EACVA,cAAa,EACbA,UAAU,YACVA,aAAa,YACbA,WAAW,YAGXA,cAAa,EAGbA,mBAAmB,IAAIC,IACvBD,aAAY,EAGZA,WAAW,QAS2BA,EAzBxC,uCA8BE,WAAQ,WAEJ,GAAsB,MAAlBE,KAAKC,UAAmB,CAC1BD,KAAKE,cACLF,KAAKG,UAAYH,KAAKC,UAAUE,UAC5BH,KAAKG,UAAUC,SACjBJ,KAAKR,iBAAiBa,SAASL,KAAKC,UAAUK,MAAMC,MAAKC,OAAK,IAAIC,UAAU,YAC1EC,EAAKC,MAAQA,EAAMC,QAAQ,MAAO,MAEdZ,KAAKR,iBAAiBqB,cAAcb,KAAKC,UAAUK,MAAMC,MAAKC,OAAK,IAAIC,UAAU,YACrGC,EAAKI,WAAaH,EAAMC,QAAQ,MAAO,OAG3CZ,KAAKG,UAAUY,QAAUf,KAAKR,iBAAiBwB,cAAchB,KAAKG,WAElE,IACMc,EAAMjB,KAAKN,UAAUwB,uBAAuB,2BAA6BC,mBAD/DnB,KAAKG,UAAUiB,UAE/BpB,KAAKqB,YAAcJ,EACnBjB,KAAKsB,WAAa,8BAAgCtB,KAAKG,UAAUoB,GAEnEvB,KAAKwB,iBAAmBxB,KAAKJ,wBAAwB6B,sBACjDzB,KAAKH,cAAc6B,YAAc1B,KAAKH,cAAc6B,WAAWC,oBAC/D3B,KAAK4B,SAAW,OAAS5B,KAAKH,cAAc6B,WAAWC,qBApDjE,yBA2DE,WAAW,WACJ3B,KAAKC,WAAaD,KAAKC,UAAU4B,QACpC7B,KAAK8B,WAAa,GAClB9B,KAAKC,UAAU4B,MAAME,QAAS,YACV,QAAdC,EAAKC,MACPvB,EAAKoB,WAAWI,KAAKF,EAAKA,WAhEpC,uBAsEE,SAAUG,GAAW,WAEbC,EAAYpC,KAAKL,OAAO0C,KAAKF,EAAa,CAC9CG,MAAO,QACPC,WAAY,0BAEdvC,KAAKwB,iBAAiBgB,MAAMC,OAAS,OAErCL,EAAUM,cAAcjC,UAAU,YAChCkC,EAAKnB,iBAAiBgB,MAAMC,OAAS,SA/E3C,6BAmFE,WAAe,WACfzC,KAAK4C,iBAAiBnC,UAAU,YAE9B,GADAC,EAAKT,UAAYA,GACXS,EAAKP,WAAaO,EAAKP,UAAUoB,KAAOb,EAAKT,UAAUE,UAAUoB,IACrEb,EAAKP,UAAUiB,UAAYV,EAAKT,UAAUE,UAAUiB,QAAS,CAC3DV,EAAKR,cACDQ,EAAKP,UAAUC,SACAM,EAAKlB,iBAAiBa,SAASK,EAAKT,UAAUK,MAAMC,MAAKC,OAAK,IAAIC,UAAU,YAC3FC,EAAKC,MAAQA,EAAMC,QAAQ,MAAO,MAEdF,EAAKlB,iBAAiBqB,cAAcH,EAAKT,UAAUK,MAAMC,MAAKC,OAAK,IAAIC,UAAU,YACrGC,EAAKI,WAAaH,EAAMC,QAAQ,MAAO,OAG3CF,EAAKP,UAAYO,EAAKT,UAAUE,UACpC,IACMc,EAAMP,EAAKhB,UAAUwB,uBAAuB,2BAA6BC,mBAD/DT,EAAKP,UAAUiB,UAE/BV,EAAKW,YAAcJ,OApGvB,8BA0GE,WAGEjB,KAAKP,UAAUoD,UAAU7C,KAAK8C,uBAAwB,cAAe,aADvD9C,KAAK+C,QAAU,EAAI,GAGjC/C,KAAK+C,SAAW/C,KAAK+C,QAInB/C,KAAKgD,QAHPhD,KAAU+C,QAGO,UAFA,cAjHrB,yBAwHE,WAGE/C,KAAKiD,WAAajD,KAAKiD,UAIrBjD,KAAKkD,SAHPlD,KAAUiD,UAGQ,UAFA,cA7HtB,0BAoIE,WAGEjD,KAAKP,UAAUoD,UAAU7C,KAAK8C,uBAAwB,cAAe,SADvD9C,KAAKmD,WAAa,EAAI,GAGpCnD,KAAKmD,YAAcnD,KAAKmD,WAItBnD,KAAKoD,WAHPpD,KAAUmD,WAGU,UAFA,cA3IxB,0BAiJE,WAEEnD,KAAKP,UAAUoD,UAAU7C,KAAK8C,uBAAwB,cAAe,SADvD9C,KAAKqD,WAAa,EAAI,GAEpCrD,KAAKqD,YAAcrD,KAAKqD,eApJ5BC,GAA+CC,kDAAlCjE,GAAyBN,0GAAzBM,EAAyBkE,8uCDnBtCxE,yBAmFAA,iBAEEA,iBACEA,cAAIA,sBAAUA,QACdA,oCACFA,QAEAA,iBACEA,cAAIA,mBAAOA,QACXA,eAAoBA,UAAoBA,QACxCA,eAAIA,sBAASA,QACbA,gBAAoBA,UAASA,QAC7BA,eAAIA,mBAAMA,QACVA,gBAAoBA,UAAcA,QACpCA,QAEAA,kBACIA,eAAIA,8BAAiBA,QACzBA,qBACIA,kCAGJA,QACFA,QAGAA,2CA1BAA,eAnFOA,0BAqFAA,oCAEsBA,wCAAuB,qCAG7CA,uCAEiBA,mCAEAA,wBAEAA,6BAGjBA,sCAGiCA,ozDCnF3BM,EAAb,oCCGamE,EAAb,eAAaA,KAAbC,iFAAaD,4DAZF,CACPE,KACAC,aAAsCtE,GACtCuE,KACAC,IACAC,IACAC,SAMSP,EAAb","names":["i0","ctx_r9","ctx_r11","ctx_r15","ctx_r17","ctx_r19","StructureDetailsComponent","utilService","structureService","gaService","sanitizer","dialog","overlayContainerService","configService","o","Subject","this","substance","getSysNames","structure","smiles","getInchi","uuid","pipe","take","subscribe","i","inchi","replace","getOtherInchi","otherInchi","formula","formatFormula","uri","bypassSecurityTrustUrl","encodeURIComponent","molfile","molfileHref","searchHref","id","overlayContainer","getContainerElement","configData","molWeightRounding","rounding","names","systematic","forEach","name","type","push","templateRef","dialogRef","open","width","panelClass","style","zIndex","afterClosed","c","substanceUpdated","sendEvent","analyticsEventCategory","showDef","defIcon","showNames","nameIcon","showSmiles","smilesIcon","showStereo","t","SubstanceCardBase","selectors","StructureDetailsModule","Z","CommonModule","DynamicComponentLoaderModule","MatIconModule","ReferencesManagerModule","SubstanceImageModule","MatListModule"],"sources":["./src/app/core/substance-details/structure-details/structure-details.component.html","./src/app/core/substance-details/structure-details/structure-details.component.ts","./src/app/core/substance-details/structure-details/structure-details.module.ts"],"sourcesContent":["<div  *ngIf=\"structure\">\r\n  <div class=\"structure-card-content\">\r\n  <div>\r\n    <div class=\"name-value\">\r\n      <div class=\"name\">Stereochemistry</div>\r\n      <div class=\"value black-pill\">{{structure.stereochemistry}}</div>\r\n    </div>\r\n    <div class=\"name-value\">\r\n      <div class=\"name\">Molecular Formula</div>\r\n      <div class=\"value blue-font\" [innerHTML] = \"structure.formula\"></div>\r\n    </div>\r\n    <div class=\"name-value\">\r\n      <div class=\"name\">Molecular Weight</div>\r\n      <div class=\"value blue-font\">{{structure.mwt | number: rounding}}</div>\r\n    </div>\r\n    <div class=\"name-value\">\r\n      <div class=\"name\">Optical Activity</div>\r\n      <div class=\"value gray-pill\">{{structure.opticalActivity}}</div>\r\n    </div>\r\n    <div class=\"name-value\">\r\n      <div class=\"name\">Defined Stereocenters</div>\r\n      <div class=\"value gray-pill\">{{structure.definedStereo}} / {{structure.stereoCenters}}</div>\r\n    </div>\r\n    <div class=\"name-value\">\r\n      <div class=\"name\">E/Z Centers</div>\r\n      <div class=\"value gray-pill\">{{structure.ezCenters}}</div>\r\n    </div>\r\n    <div class=\"name-value\">\r\n      <div class=\"name\">Charge</div>\r\n      <div class=\"value gray-pill\">{{structure.charge}}</div>\r\n    </div>\r\n    <div class=\"name-value\" *ngIf = \"structure.atropisomerism\" >\r\n      <div class=\"name\">Additional stereochemistry</div>\r\n      <div class=\"value gray-pill\">{{structure.atropisomerism}}</div>\r\n    </div>\r\n    <div class=\"name-value\" *ngIf = \"structure.stereoComments\" >\r\n      <div class=\"name\">Stereo Comments</div>\r\n      <div class=\"value stereo-comments\">{{structure.stereoComments}}</div>\r\n    </div>\r\n      <div class=\"name-value\" *ngIf=\"structure.references?.length > 0\" >\r\n        <div class=\"name\">\r\n          <a tabindex=\"0\" role=\"link\" (click)=\"toggleReferences()\" class='blue-font references-link'>\r\n            <span>{{showDef === false ? 'Show' : 'Hide'}} References</span><mat-icon svgIcon=\"{{defIcon}}\"></mat-icon>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"name-value\" *ngIf=\"structure.smiles\" >\r\n        <div class=\"name\">\r\n          <a tabindex=\"0\" role=\"link\" (click)=\"toggleSmiles()\" class='blue-font references-link'>\r\n            <span>{{showSmiles === false ? 'Show' : 'Hide'}} SMILES / InChi</span><mat-icon svgIcon=\"{{smilesIcon}}\"></mat-icon>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div class=\"name-value\" *ngIf=\"systematic\" >\r\n        <div class=\"name\">\r\n          \r\n          <a (click)=\"toggleNames()\" class='blue-font references-link'  *ngIf = \"systematic.length > 0\">\r\n            <span>{{showNames === false ? 'Show' : 'Hide'}} Systematic Names</span><mat-icon svgIcon=\"{{nameIcon}}\"></mat-icon>\r\n          </a>\r\n          <span *ngIf = \"systematic.length < 1\" class = \"disabled\">No Systematic Names</span> \r\n        </div>\r\n      </div>\r\n  </div>\r\n\r\n  <div class=\"structure-image-container text-center\">\r\n    <div class = 'float-right'>\r\n      <a class=\"mat-icon-button\" title=\"Download molfile\" [href]=\"molfileHref\" download=\"{{substance.approvalID? substance.approvalID.toString() : substance.uuid.toString()}}.mol\">\r\n        <mat-icon svgIcon=\"get_app\"></mat-icon>\r\n      </a>\r\n      <a class=\"mat-icon-button\" title=\"Structure Search\" [href]=\"searchHref\">\r\n        <mat-icon svgIcon=\"search\"></mat-icon>\r\n      </a>\r\n    </div>\r\n    <img class=\"structure-img\" (click) = \"openModal(structureTemplate)\" appSubstanceImage  size = \"250\" [entityId]=\"structure.id\" [stereo]=\"showStereo\" [version] =\"substance.version\">\r\n    <br/>\r\n      <button class =\"mat-raised-button mat-primary\" [disabled]=\"structure.definedStereo == 0\" (click)=\"toggleStereo()\">{{showStereo === false ? 'Show' : 'Hide'}} Stereo</button>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n<div style=\"width:100%\" >\r\n\r\n  <div [hidden]=\"!showDef\" style=\"min-width:50%;\">\r\n    <h3>References</h3>\r\n    <app-references-manager  [substance]=\"substance\" [references]=\"structure.references\" ></app-references-manager>\r\n  </div>\r\n\r\n  <div [hidden]=\"!showSmiles\" style=\"width:100%\">\r\n    <h3>SMILES:</h3>\r\n    <p class = \"indent\">{{structure.smiles}}</p>\r\n    <h3>InChiKey:</h3>\r\n    <p class = \"indent\">{{inchi}}</p>\r\n    <h3>InChi:</h3>\r\n    <p class = \"indent\">{{otherInchi}}</p>\r\n  </div>\r\n  \r\n  <div [hidden]=\"!showNames\" style=\"width:100%\">\r\n      <h3>Systematic Names:</h3>\r\n  <mat-list >\r\n      <mat-list-item *ngFor = \"let name of systematic\">\r\n        {{name}}\r\n      </mat-list-item>\r\n  </mat-list>\r\n</div>\r\n\r\n\r\n<ng-template #structureTemplate>\r\n  <div mat-dialog-content>\r\n    <img class=\"structure-img-big\" appSubstanceImage  size = \"250\" [entityId]=\"structure.id\" [stereo]=\"showStereo\" [version] =\"substance.version\">\r\n  </div>\r\n</ng-template>","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport { SubstanceDetail } from '../../substance/substance.model';\r\nimport { SubstanceStructure } from '../../substance/substance.model';\r\nimport { StructureService } from '../../structure/structure.service';\r\nimport {DomSanitizer, SafeUrl} from '@angular/platform-browser';\r\nimport { SubstanceCardBase } from '../substance-card-base';\r\nimport { UtilsService } from '../../utils/utils.service';\r\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\r\nimport {Subject} from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { ConfigService } from '@gsrs-core/config';\r\n\r\n@Component({\r\n  selector: 'app-structure-details',\r\n  templateUrl: './structure-details.component.html',\r\n  styleUrls: ['./structure-details.component.scss']\r\n})\r\nexport class StructureDetailsComponent extends SubstanceCardBase implements OnInit, AfterViewInit {\r\n  structure: SubstanceStructure;\r\n  showDef = false;\r\n  showSmiles = false;\r\n  defIcon = 'drop_down';\r\n  smilesIcon = 'drop_down';\r\n  nameIcon = 'drop_down';\r\n  inchi: string;\r\n  otherInchi: string;\r\n  showStereo = false;\r\n  molfileHref: any;\r\n  systematic: Array<string>;\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  showNames = false;\r\n  searchHref: string;\r\n  private overlayContainer: HTMLElement;\r\n  rounding = '1.0-2';\r\n\r\n  constructor(\r\n    private utilService: UtilsService,\r\n    private structureService: StructureService,\r\n    public gaService: GoogleAnalyticsService,\r\n    private sanitizer: DomSanitizer,\r\n    private dialog: MatDialog,\r\n    private overlayContainerService: OverlayContainer,\r\n    private configService: ConfigService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      if (this.substance != null) {\r\n        this.getSysNames();\r\n        this.structure = this.substance.structure;\r\n        if (this.structure.smiles) {\r\n          this.structureService.getInchi(this.substance.uuid).pipe(take(1)).subscribe(inchi => {\r\n            this.inchi = inchi.replace(/\\\"/g, '');\r\n          });\r\n          const otherInchiSub = this.structureService.getOtherInchi(this.substance.uuid).pipe(take(1)).subscribe(inchi => {\r\n            this.otherInchi = inchi.replace(/\\\"/g, '');\r\n          });\r\n        }\r\n        this.structure.formula = this.structureService.formatFormula(this.structure);\r\n\r\n        const theJSON = this.structure.molfile;\r\n        const uri = this.sanitizer.bypassSecurityTrustUrl('data:text;charset=UTF-8,' + encodeURIComponent(theJSON));\r\n        this.molfileHref = uri;\r\n        this.searchHref = 'structure-search?structure=' + this.structure.id;\r\n      }\r\n      this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n      if (this.configService.configData && this.configService.configData.molWeightRounding) {\r\n          this.rounding = '1.0-' + this.configService.configData.molWeightRounding;\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n  getSysNames() {\r\n    if ( this.substance && this.substance.names) {\r\n      this.systematic = [];\r\n      this.substance.names.forEach (name => {\r\n        if (name.type === 'sys') {\r\n          this.systematic.push(name.name);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  openModal(templateRef) {\r\n\r\n    const dialogRef = this.dialog.open(templateRef, {\r\n      width: '650px',\r\n      panelClass: 'structure-image-panel',\r\n    });\r\n    this.overlayContainer.style.zIndex = '1002';\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.overlayContainer.style.zIndex = null;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  this.substanceUpdated.subscribe(substance => {\r\n    this.substance = substance;\r\n    if ( !this.structure || this.structure.id !== this.substance.structure.id ||\r\n      this.structure.molfile !== this.substance.structure.molfile) {\r\n        this.getSysNames();\r\n        if (this.structure.smiles) {\r\n          const inchiSub = this.structureService.getInchi(this.substance.uuid).pipe(take(1)).subscribe(inchi => {\r\n            this.inchi = inchi.replace(/\\\"/g, '');\r\n          });\r\n          const otherInchiSub = this.structureService.getOtherInchi(this.substance.uuid).pipe(take(1)).subscribe(inchi => {\r\n            this.otherInchi = inchi.replace(/\\\"/g, '');\r\n          });\r\n        }\r\n        this.structure = this.substance.structure;\r\n    const theJSON = this.structure.molfile;\r\n    const uri = this.sanitizer.bypassSecurityTrustUrl('data:text;charset=UTF-8,' + encodeURIComponent(theJSON));\r\n    this.molfileHref = uri;\r\n    }\r\n\r\n  });\r\n  }\r\n\r\n  toggleReferences() {\r\n\r\n    const value = this.showDef ? 0 : 1;\r\n    this.gaService.sendEvent(this.analyticsEventCategory, 'link-toggle', 'references', value);\r\n\r\n    this.showDef = !this.showDef;\r\n    if (!this.showDef) {\r\n      this.defIcon = 'drop_down';\r\n    } else {\r\n      this.defIcon = 'drop_up';\r\n    }\r\n  }\r\n\r\n\r\n  toggleNames() {\r\n    const value = this.showNames ? 0 : 1;\r\n\r\n    this.showNames = !this.showNames;\r\n    if (!this.showNames) {\r\n      this.nameIcon = 'drop_down';\r\n    } else {\r\n      this.nameIcon = 'drop_up';\r\n    }\r\n  }\r\n\r\n\r\n  toggleSmiles() {\r\n\r\n    const value = this.showSmiles ? 0 : 1;\r\n    this.gaService.sendEvent(this.analyticsEventCategory, 'link-toggle', 'smiles', value);\r\n\r\n    this.showSmiles = !this.showSmiles;\r\n    if (!this.showSmiles) {\r\n      this.smilesIcon = 'drop_down';\r\n    } else {\r\n      this.smilesIcon = 'drop_up';\r\n    }\r\n  }\r\n\r\n  toggleStereo() {\r\n    const value = this.showStereo ? 0 : 1;\r\n    this.gaService.sendEvent(this.analyticsEventCategory, 'link-toggle', 'stereo', value);\r\n    this.showStereo = !this.showStereo;\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StructureDetailsComponent } from './structure-details.component';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {ReferencesManagerModule} from '../../references-manager/references-manager.module';\r\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(StructureDetailsComponent),\r\n    MatIconModule,\r\n    ReferencesManagerModule,\r\n    SubstanceImageModule,\r\n    MatListModule\r\n  ],\r\n  declarations: [\r\n    StructureDetailsComponent\r\n  ]\r\n})\r\nexport class StructureDetailsModule { }\r\n"],"sourceRoot":"webpack:///","file":"4333.5c32a6f78a43f792.js"}