{"version":3,"mappings":"4cAAAA,iBACEA,iBACEA,0BAAsFA,wDAAiBC,OAAO,kBAAiBC,KAAgDF,QAC/KA,iBACEA,8BAAoEA,uDAAcG,mBAChCH,QACpDA,QACAA,iBACEA,0BAAmEA,wDAAiBI,OAAO,iBAAgBF,KAAiDF,QAC9JA,QACAA,0BAAsHA,wDAAeK,OAAO,eAAcH,KAAUF,QAGtKA,QACAA,iBACEA,4BACFA,QACFA,8BAf6IA,sDAE9BA,wDAIYA,qDAEtCA,mDAKjEA,wCCAb,IAAMM,EAAb,eAAaA,EAAb,0CAKE,WACUC,EACDC,EACAC,GAAsC,6BAE7CC,cAAMF,IAJED,uBACDG,cACAA,cALHA,gBAAqC,GAC3CA,mBAAsC,GAOpCA,EAAKC,uBAAyB,sCAHeD,EARjD,uCAcE,WAAQ,WACNE,KAAKC,gBAAgBC,KAAK,+BAC1B,IAAMC,EAA0BH,KAAKL,qBAAqBS,qBAAqBC,UAAU,YACvFC,EAAKC,YAAcA,IAErBP,KAAKQ,cAAcC,KAAKN,GACxBH,KAAKU,iBAAmB,CAAEC,iBAAiB,EAAOC,QAAS,QAASC,UAAW,UAAWC,cAAe,aACvGC,gBAAiB,eAAgBC,eAAgB,EAAGC,mBAAmB,KArB7E,6BAwBE,cAxBF,yBA2BE,WACEjB,KAAKQ,cAAcU,QAAQ,YACzBC,EAAaC,kBA7BnB,0BAiCE,SAAaC,GACXrB,KAAKO,YAAYc,OAASA,IAlC9B,oBAqCE,SAAQC,EAAeC,GACP,oBAAVD,EACFtB,KAAKO,YAAYiB,gBAAkBD,EAChB,mBAAdjB,EACLN,KAAKO,YAAYkB,eAAiBF,EACf,iBAAVD,IACTtB,KAAKO,YAAYmB,aAAeH,KA3CtC,2BA+CE,SAAcI,GACV3B,KAAKO,YAAYqB,mBAAqBD,MAhD5CE,GAAqDC,kDAAxCpC,GAA+BN,2DAA/BM,EAA+BqC,8nBDf5C3C,6BAAgCA,ivBCenBM,EAAb,GCeasC,EAAb,eAAaA,KAAbC,iFAAaD,4DAhBF,CACPE,KACAC,aAAsCzC,GACtC0C,KACAC,IACAC,KACAC,KACAC,KACAC,IACAC,IACAC,SAMSX,EAAb","names":["i0","ctx_r1","$event","ctx_r3","ctx_r4","ctx_r5","NucleicAcidDetailsFormComponent","substanceFormService","gaService","cvService","s","analyticsEventCategory","this","menuLabelUpdate","emit","nucleicAcidSubscription","substanceNucleicAcid","subscribe","t","nucleicAcid","subscriptions","push","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","forEach","subscription","unsubscribe","access","field","event","nucleicAcidType","sequenceOrigin","sequenceType","tags","nucleicAcidSubType","l","SubstanceCardBaseFilteredList","selectors","NucleicAcidDetailsFormModule","r","CommonModule","DynamicComponentLoaderModule","MatFormFieldModule","MatInputModule","ReactiveFormsModule","FormsModule","MatSelectModule","SubstanceFormModule","NameResolverModule","NgMultiSelectDropDownModule"],"sources":["./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component.html","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component.ts","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.module.ts"],"sourcesContent":["<div class=\"na-form-container\" *ngIf = \"nucleicAcid\">\n  <div class=\"form-row\">\n    <app-cv-input class = \"type\" domain = \"NUCLEIC_ACID_TYPE\" title = \"Nucleic Acid Type\" (valueChange) = \"update('nucleicAcidType',$event)\" [model] = nucleicAcid.nucleicAcidType></app-cv-input>\n    <div class = \"mat-form-field-flex subtype\">\n      <app-tag-selector placeholder = \"Nucleic Acid SubType\" class=\"tags\" (tagsUpdate)=\"updateSubtype($event)\" [tags]=\"nucleicAcid.nucleicAcidSubType\"\n                        cvDomain=\"NUCLEIC_ACID_SUBTYPE\"></app-tag-selector>\n    </div>\n    <div class= \"location-container origin\">\n      <app-cv-input domain = \"SEQUENCE_ORIGIN\" title = \"Sequence Origin\" (valueChange) = \"update('sequenceOrigin',$event)\" [model] = \"nucleicAcid.sequenceOrigin\"></app-cv-input>\n    </div>\n    <app-cv-input class = \"seqtype\" domain = \"SEQUENCE_TYPE\" title = \"Sequence Type\" [model] = \"nucleicAcid.sequenceType\" (valueChange)=\"update('sequenceType',$event)\"></app-cv-input>\n  <!--  <app-access-manager (accessOut)=\"updateAccess($event)\" [access]=\"nucleicAcid.access\">\n    </app-access-manager>-->\n  </div>\n  <div class = \"form-row\">\n    <app-audit-info [source] = \"nucleicAcid\"></app-audit-info>\n  </div>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {SubstanceCardBaseFilteredList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {NucleicAcid, Protein} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {IDropdownSettings} from 'ng-multiselect-dropdown';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\n\n@Component({\n  selector: 'app-nucleic-acid-details-form',\n  templateUrl: './nucleic-acid-details-form.component.html',\n  styleUrls: ['./nucleic-acid-details-form.component.scss']\n})\n// eslint-disable-next-line max-len\nexport class NucleicAcidDetailsFormComponent extends SubstanceCardBaseFilteredList<NucleicAcid> implements OnInit, AfterViewInit, OnDestroy {\n\n  nucleicAcid: NucleicAcid;\nprivate subscriptions: Array<Subscription> = [];\n  dropdownSettings: IDropdownSettings = {};\n  constructor(\n    private substanceFormService: SubstanceFormService,\n    public gaService: GoogleAnalyticsService,\n    public cvService: ControlledVocabularyService\n) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form Nucleic Acid Details';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Nucleic Acid Classification');\n    const nucleicAcidSubscription = this.substanceFormService.substanceNucleicAcid.subscribe(nucleicAcid => {\n      this.nucleicAcid = nucleicAcid;\n    });\n    this.subscriptions.push(nucleicAcidSubscription);\n    this.dropdownSettings = { singleSelection: false, idField: 'value', textField: 'display', selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All', itemsShowLimit: 3, allowSearchFilter: true};\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.nucleicAcid.access = access;\n  }\n\n  update( field: string, event: any): void {\n    if (field === 'nucleicAcidType') {\n      this.nucleicAcid.nucleicAcidType = event;\n    } else if (field === 'sequenceOrigin') {\n      this.nucleicAcid.sequenceOrigin = event;\n    } else if (field === 'sequenceType') {\n      this.nucleicAcid.sequenceType = event;\n    }\n  }\n\n  updateSubtype(tags: Array<string>) {\n      this.nucleicAcid.nucleicAcidSubType = tags;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { NameResolverModule } from '../../name-resolver/name-resolver.module';\n// eslint-disable-next-line max-len\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\nimport {NucleicAcidDetailsFormComponent} from '@gsrs-core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(NucleicAcidDetailsFormComponent),\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSelectModule,\n    SubstanceFormModule,\n    NameResolverModule,\n    NgMultiSelectDropDownModule\n  ],\n  declarations: [\n    NucleicAcidDetailsFormComponent\n  ]\n})\nexport class NucleicAcidDetailsFormModule { }\n"],"sourceRoot":"webpack:///","file":"6599.d344ea9e6eae0756.js"}