{"version":3,"mappings":"iUAIMA,iBAAuCA,qBAAQA,kCAC/CA,iBAAwCA,SAAuCA,0CAAvCA,8EAItCA,iBAAuCA,uBAAUA,kCACjDA,iBAAwCA,kBAAuDA,gCAA9BA,+DAInEA,iBAAuCA,wBAAWA,kCAClDA,iBAAwCA,SAA2BA,gCAA3BA,gEAIxCA,iBAAuCA,wBAAWA,kCAClDA,iBAAwCA,SAAgCA,0CAAhCA,sEAG1CA,sCACAA,iBCZG,IAAMC,EAAb,eAAaA,EAAb,0CASE,WACSC,GAAsC,6BAE7CC,gBAFOD,YARTC,mBAA6B,CAAC,UAAY,YAAa,aAAe,cAGtEA,mBAAmB,IAAIC,IACvBD,gBAAqC,GAIUA,EAVjD,uCAeE,WAAQ,WACNE,KAAKC,iBAAiBC,UAAU,YAE9B,GADAJ,EAAKK,UAAYA,EACK,MAAlBL,EAAKK,WAC0B,MAA9BL,EAAKK,UAAUC,aACwB,MAAvCN,EAAKK,UAAUC,YAAYC,UAC3BP,EAAKK,UAAUC,YAAYC,SAASC,OAAQ,CAC/CR,EAAKO,SAAWP,EAAKK,UAAUC,YAAYC,SAC3CP,EAAKS,YAAYC,KAAKV,EAAKO,SAASC,QACpC,IAAMG,EAAkBX,EAAKD,UAAUa,oBAAoB,wBAAwBR,UAAU,YAC3FJ,EAAKa,WAAaC,EAASC,qBAAwBC,WACnDhB,EAAKO,SAASU,QAAQ,YAElBC,EAAQC,UADPnB,EAAKa,WAAWK,EAAQA,SACLlB,EAAKD,UAAUqB,wBAAwBpB,EAAKa,WAAWK,EAAQA,SAASG,mBAExE,SAI1BrB,EAAKsB,cAAcC,KAAKZ,GACxBX,EAAKwB,qBAnCb,yBAwCE,WACEtB,KAAKoB,cAAcL,QAAQ,YACzBQ,EAAaC,kBA1CnB,2BA8CE,WACExB,KAAKyB,UAAY,EADN,gBAEWzB,KAAKK,UAFhB,IAEX,2BACEL,KAAKyB,UAAYzB,KAAKyB,UADaC,QACOC,MAAMrB,aAHvCsB,2BA9Cf,0BAsDE,SAAaD,GACX,OAAOA,EAAMrB,OAAS,IAAMN,KAAKyB,YAvDrC,+BA0DE,SAAkBI,GAChB,OAAI7B,KAAKW,YAAcX,KAAKW,WAAWkB,IAAS7B,KAAKW,WAAWkB,GAAMC,QAC7D9B,KAAKW,WAAWkB,GAAMC,QAEtBD,MA9DbE,GAAkDC,kDAArCpC,GAA4BD,qCAA5BC,EAA4BqC,ykBDZzCtC,iBACEA,mBAEEA,WACEA,sBACAA,sBACFA,QAEAA,WACIA,sBACAA,sBACFA,QAEFA,WACEA,sBACAA,uBACFA,QAEAA,YACEA,uBACAA,uBACFA,QAEAA,uBACAA,uBACFA,QACFA,eAzBmBA,wCAsBKA,sDACoCA,gLCZ/CC,EAAb,+CCQasC,EAAb,eAAaA,KAAbC,iFAAaD,4DAVF,CACPE,KACAC,aAAsCzC,GACtC0C,KACAC,KACAC,KACAC,QAISP,EAAb","names":["i0","SubstanceNaLinkagesComponent","cvService","n","Subject","this","substanceUpdated","subscribe","substance","nucleicAcid","linkages","length","countUpdate","emit","cvSubscription","getDomainVocabulary","vocabulary","response","NUCLEIC_ACID_LINKAGE","dictionary","forEach","linkage","structure","getStructureUrlFragment","fragmentStructure","subscriptions","push","getTotalSites","subscription","unsubscribe","siteCount","l","sites","m","term","display","u","SubstanceCardBase","selectors","SubstanceNaLinkagesModule","d","CommonModule","DynamicComponentLoaderModule","MatTableModule","CdkTableModule","MatPaginatorModule","MatInputModule"],"sources":["./src/app/core/substance-details/substance-na-linkages/substance-na-linkages.component.html","./src/app/core/substance-details/substance-na-linkages/substance-na-linkages.component.ts","./src/app/core/substance-details/substance-na-linkages/substance-na-linkages.module.ts"],"sourcesContent":["<div class=\"responsive\">\r\n  <table mat-table [dataSource]=\"linkages\">\r\n\r\n    <ng-container matColumnDef='linkage'>\r\n      <th mat-header-cell *matHeaderCellDef> Linkage </th>\r\n      <td mat-cell *matCellDef=\"let linkage\"> {{getLinkageDisplay(linkage.linkage)}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef='Structure'>\r\n        <th mat-header-cell *matHeaderCellDef> Structure </th>\r\n        <td mat-cell *matCellDef=\"let linkage\"> <img class = \"structure\" [src] = \"linkage.structure\" /></td>\r\n      </ng-container>\r\n\r\n    <ng-container matColumnDef='Site Range'>\r\n      <th mat-header-cell *matHeaderCellDef> Site Range </th>\r\n      <td mat-cell *matCellDef=\"let linkage\"> {{linkage.sitesShorthand}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef='Site Count'>\r\n      <th mat-header-cell *matHeaderCellDef> Site Count </th>\r\n      <td mat-cell *matCellDef=\"let linkage\"> {{getSiteCount(linkage.sites)}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row style = \"height:145px\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Linkage, Site, SubstanceDetail} from '../../substance/substance.model';\r\nimport {SubstanceCardBase} from '../substance-card-base';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {DataDictionaryService} from '@gsrs-core/utils/data-dictionary.service';\r\nimport {ControlledVocabularyService, VocabularyDictionary, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\r\n\r\n@Component({\r\n  selector: 'app-substance-na-linkages',\r\n  templateUrl: './substance-na-linkages.component.html',\r\n  styleUrls: ['./substance-na-linkages.component.scss']\r\n})\r\nexport class SubstanceNaLinkagesComponent extends SubstanceCardBase implements OnInit, OnDestroy {\r\n  linkages: Array<Linkage>;\r\n  displayedColumns: string[] = ['linkage' , 'Structure', 'Site Range' , 'Site Count' ];\r\n  siteCount: number;\r\n  vocabulary: any;\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  subscriptions: Array<Subscription> = [];\r\n\r\n\r\n  constructor(\r\n    public cvService: ControlledVocabularyService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.substance = substance;\r\n      if (this.substance != null\r\n        && this.substance.nucleicAcid != null\r\n        && this.substance.nucleicAcid.linkages != null\r\n        && this.substance.nucleicAcid.linkages.length) {\r\n        this.linkages = this.substance.nucleicAcid.linkages;\r\n        this.countUpdate.emit(this.linkages.length);\r\n        const cvSubscription =  this.cvService.getDomainVocabulary('NUCLEIC_ACID_LINKAGE').subscribe(response => {\r\n          this.vocabulary = response['NUCLEIC_ACID_LINKAGE'].dictionary;\r\n          this.linkages.forEach(linkage => {\r\n            if(this.vocabulary[linkage.linkage]) {\r\n              linkage.structure = this.cvService.getStructureUrlFragment(this.vocabulary[linkage.linkage].fragmentStructure);\r\n            } else {\r\n              linkage.structure = null;\r\n            }\r\n          })\r\n        });\r\n        this.subscriptions.push(cvSubscription);\r\n        this.getTotalSites();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(subscription => {\r\n      subscription.unsubscribe();\r\n    });\r\n  }\r\n\r\n  getTotalSites() {\r\n    this.siteCount = 0;\r\n    for (const linkage of this.linkages) {\r\n      this.siteCount = this.siteCount + linkage.sites.length;\r\n    }\r\n\r\n  }\r\n\r\n  getSiteCount(sites: Array<Site>): string {\r\n    return sites.length + '/' + this.siteCount;\r\n  }\r\n\r\n  getLinkageDisplay(term: string): string {\r\n    if (this.vocabulary && this.vocabulary[term] && this.vocabulary[term].display) {\r\n      return this.vocabulary[term].display;\r\n    } else {\r\n      return term;\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SubstanceNaLinkagesComponent} from './substance-na-linkages.component';\r\nimport {DynamicComponentLoaderModule} from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceNaLinkagesComponent),\r\n    MatTableModule,\r\n    CdkTableModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n  ],\r\n  declarations: [SubstanceNaLinkagesComponent]\r\n})\r\nexport class SubstanceNaLinkagesModule { }\r\n"],"sourceRoot":"webpack:///","file":"5718.abf826fd1c1d07c4.js"}