{"version":3,"mappings":"gVAiBaA,EAAb,eAAaA,EAAb,0CAQE,WACSC,EACCC,EACDC,EACAC,GAA4B,6BAEnCC,gBALOJ,YACCI,yBACDA,cACAA,kBANDA,gBAAqC,GAS3CA,EAAKC,uBAAyB,8CAHKD,EAZvC,uCAkBE,WAAQ,WAENE,KAAKC,eAAkBD,KAAKH,cAAcK,YAAcF,KAAKH,cAAcK,WAAWC,UAAa,KACnG,IAAIC,EAAc,qCACdJ,KAAKC,iBACPG,EAAcJ,KAAKC,eAAeI,OAAOC,iBAAmB,MAG9DN,KAAKO,gBAAgBC,KAAKJ,GAC1B,IAAMK,EAAwBT,KAAKL,qBAAqBe,UAAUC,UAAU,YAC1EC,EAAKF,UAAYA,EACjBE,EAAKC,eAAiBH,EAAUG,eAG5BD,EAAKC,gBAA0C,0BAAxBD,EAAKC,gBAC1BD,EAAKF,UAAUI,sBAAsBR,iBACnCM,EAAKF,UAAUI,sBAAsBR,gBAAgBS,UACvDH,EAAKI,qBAAuBJ,EAAKF,UAAUI,sBAAsBR,gBAAgBS,SAsBvFH,EAAKjB,qBAAqBsB,eAO5BjB,KAAKkB,cAAcC,KAAKV,KAhE5B,6BAmEE,cAnEF,yBAsEE,WACET,KAAKkB,cAAcE,QAAQ,YACzBC,EAAaC,kBAxEnB,qCA4EE,SAAwBZ,GACJ,OAAdA,EAQEV,KAAKa,gBAA0C,0BAAxBb,KAAKa,iBAC9Bb,KAAKU,UAAUI,sBAAsBR,gBARI,CACzCiB,SAAUb,EAAUc,MACpBC,KAAMf,EAAUc,MAChBT,QAASL,EAAUgB,KACnBb,eAAgB,YAChBc,WAAYjB,EAAUiB,aAMpB3B,KAAKa,gBAA0C,0BAAxBb,KAAKa,iBAC9Bb,KAAKU,UAAUI,sBAAsBR,gBAAkB,QA1F/DsB,GAAqDC,kDAAxCpC,GAA+BqC,sEAA/BrC,EAA+BsC,qWCjB5CD,iBACEA,iBACEA,iBACEA,oCAAwBA,4CAAoBE,+BAG5CF,QACFA,QACFA,QAgBFA,eAnBQA,iDAAgC,kmBDY3BrC,EAAb,mCEGawC,EAAb,eAAaA,KAAbC,iFAAaD,4DAXF,CACPE,KACAC,KACAC,aAAsC5C,GACtC6C,IACAC,QAMSN,EAAb","names":["SsgParentSubstanceFormComponent","gaService","substanceFormService","cvService","configService","a","analyticsEventCategory","this","configSsg4Form","configData","ssg4Form","configTitle","titles","parentSubstance","menuLabelUpdate","emit","substanceSubscription","substance","subscribe","e","substanceClass","specifiedSubstanceG4m","refuuid","relatedSubstanceUuid","resetState","subscriptions","push","forEach","subscription","unsubscribe","refPname","_name","name","uuid","approvalID","i","SubstanceFormBase","i0","selectors","ctx","SsgParentSubstanceFormModule","d","CommonModule","RouterModule","DynamicComponentLoaderModule","SubstanceFormModule","SubstanceSelectorModule"],"sources":["./src/app/core/substance-form/ssg-parent-substance-form/ssg-parent-substance-form.component.ts","./src/app/core/substance-form/ssg-parent-substance-form/ssg-parent-substance-form.component.html","./src/app/core/substance-form/ssg-parent-substance-form/ssg-parent-substance-form.module.ts"],"sourcesContent":["import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { SubstanceRelated, SubstanceSummary, SpecifiedSubstanceG3, SpecifiedSubstanceG4m } from '@gsrs-core/substance';\nimport { SubstanceFormService } from '@gsrs-core/substance-form/substance-form.service';\nimport { ControlledVocabularyService, VocabularyTerm } from '@gsrs-core/controlled-vocabulary';\nimport { ConfigService } from '@gsrs-core/config/config.service';\nimport { ScrollToService } from '@gsrs-core/scroll-to/scroll-to.service';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\nimport { SubstanceFormSsg4mStartingMaterialsModule } from '@gsrs-core/substance-ssg4m/ssg4m-starting-materials/substance-form-ssg4m-starting-materials.module';\n\n@Component({\n  selector: 'app-ssg-parent-substance-form',\n  templateUrl: './ssg-parent-substance-form.component.html',\n  styleUrls: ['./ssg-parent-substance-form.component.scss']\n})\n\nexport class SsgParentSubstanceFormComponent extends SubstanceFormBase implements OnInit, AfterViewInit, OnDestroy {\n  substance: any;\n  substanceClass: string;\n  parentSubstance: SubstanceRelated;\n  relatedSubstanceUuid: string;\n  configSsg4Form: any;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    public gaService: GoogleAnalyticsService,\n    private substanceFormService: SubstanceFormService,\n    public cvService: ControlledVocabularyService,\n    public configService: ConfigService\n  ) {\n    super();\n    this.analyticsEventCategory = 'substance form ssg 3 and 4 parent substance';\n  }\n\n  ngOnInit() {\n    // Get Config variables for SSG4\n    this.configSsg4Form = (this.configService.configData && this.configService.configData.ssg4Form) || null;\n    let configTitle = 'Search or Register a New Substance';\n    if (this.configSsg4Form) {\n      configTitle = this.configSsg4Form.titles.parentSubstance || null;\n    }\n\n    this.menuLabelUpdate.emit(configTitle);\n    const substanceSubscription = this.substanceFormService.substance.subscribe(substance => {\n      this.substance = substance;\n      this.substanceClass = substance.substanceClass;\n\n      // SSG4m: Load/Set Substance Name with Structure\n      if (this.substanceClass && this.substanceClass === 'specifiedSubstanceG4m') {\n        if (this.substance.specifiedSubstanceG4m.parentSubstance) {\n          if (this.substance.specifiedSubstanceG4m.parentSubstance.refuuid) {\n            this.relatedSubstanceUuid = this.substance.specifiedSubstanceG4m.parentSubstance.refuuid;\n          }\n        }\n      }\n\n      // Specified Substance Group 3\n      /*\n      if (substance.specifiedSubstanceG3.parentSubstance == null) {\n        substance.specifiedSubstanceG3.parentSubstance = {};\n      }\n      this.substanceFormService.resetState();\n      this.parentSubstance = substance.specifiedSubstanceG3.parentSubstance;\n\n      if (substance.specifiedSubstanceG3.parentSubstance != null) {\n        this.relatedSubstanceUuid = substance.specifiedSubstanceG3.parentSubstance.refuuid;\n      }\n      */\n\n      // Specified Substance Group 4 Manufacturing\n      if (substance.specifiedSubstanceG4m.parentSubstance == null) {\n        //  substance.specifiedSubstanceG4m.parentSubstance = {};\n      }\n      this.substanceFormService.resetState();\n      //  this.parentSubstance = substance.specifiedSubstanceG4m.parentSubstance;\n\n      // if (substance.specifiedSubstanceG4m.parentSubstance != null) {\n      //   this.relatedSubstanceUuid = substance.specifiedSubstanceG4m.parentSubstance.refuuid;\n      // }\n    });\n    this.subscriptions.push(substanceSubscription);\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  relatedSubstanceUpdated(substance: SubstanceSummary): void {\n    if (substance !== null) {\n      const relatedSubstance: SubstanceRelated = {\n        refPname: substance._name,\n        name: substance._name,\n        refuuid: substance.uuid,\n        substanceClass: 'reference',\n        approvalID: substance.approvalID\n      };\n      if (this.substanceClass && this.substanceClass === 'specifiedSubstanceG4m') {\n        this.substance.specifiedSubstanceG4m.parentSubstance = relatedSubstance;\n      }\n    } else {\n      if (this.substanceClass && this.substanceClass === 'specifiedSubstanceG4m') {\n        this.substance.specifiedSubstanceG4m.parentSubstance = {};\n      }\n    }\n  }\n\n}\n","<div class=\"name-form-container\">\n  <div class=\"form-row\">\n    <div class=\"related-substance\">\n      <app-substance-selector (selectionUpdated)=\"relatedSubstanceUpdated($event)\"\n        eventCategory=\"substanceRelationshipRelatedSub\" placeholder=\"Search by Name/CAS RN/UNII/BDNUM\" header=\"Parent Substance\"\n        [subuuid]=\"relatedSubstanceUuid\" [showMorelinks]=\"true\">\n      </app-substance-selector>\n    </div>\n  </div>\n\n  <!--\n  <div class=\"form-row\">\n    <div class=\"col\">\n      <a [routerLink]=\"['/substances/register/chemical']\" target=\"_blank\" matTooltip='Register New Substance'>\n        <span class=\"font11px\">Register New</span>\n      </a>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <a [routerLink]=\"['/structure-search']\" target=\"_blank\" matTooltip='Structure Search'>\n        <span class=\"font11px\">Search By Structure</span>\n      </a>\n    </div>\n  </div>\n  -->\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SsgParentSubstanceFormComponent } from './ssg-parent-substance-form.component';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { SubstanceSelectorModule } from '@gsrs-core/substance-selector/substance-selector.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    DynamicComponentLoaderModule.forChild(SsgParentSubstanceFormComponent),\n    SubstanceFormModule,\n    SubstanceSelectorModule\n  ],\n  declarations: [\n    SsgParentSubstanceFormComponent\n  ]\n})\nexport class SsgParentSubstanceFormModule { }\n"],"sourceRoot":"webpack:///","file":"6620.2368041933af908e.js"}