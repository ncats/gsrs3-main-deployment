{"version":3,"mappings":"4ZAAAA,kBACEA,gBAAqEA,uDAASC,2BAC5ED,kBACFA,QACAA,cACFA,8BAHyDA,yDAOrDA,iBAAuCA,+BAAkBA,6EAEvDA,eACEA,gBACEA,SACFA,QACFA,sCAH4BA,mEACxBA,0EAHNA,iBACEA,wBAKFA,gCALQA,iEASRA,iBAAuCA,uBAAUA,+CAG7CA,kBACEA,gBAAqEA,0EAASE,6CAC5EF,kBACFA,QACFA,yCAFwDA,gFAH1DA,eACEA,wBAKFA,sCALqCA,4EAFvCA,iBACEA,wBAOFA,gCAPQA,iEAWRA,iBAAuCA,+BAAkBA,kCACzDA,iBAAoCA,SAAyBA,gCAAzBA,kEAIpCA,iBAAuCA,8BAAiBA,kCACxDA,iBAAoCA,SAAwBA,gCAAxBA,iEAIpCA,iBAAuCA,gCAAmBA,kCAExDA,eACEA,gBACEA,SACFA,QACFA,sCAH4BA,oEACxBA,2EAHNA,iBACEA,wBAKFA,gCALQA,kEASRA,iBAA0DA,sBAASA,kCACnEA,iBAAoCA,SAAiBA,gCAAjBA,yDAGtCA,sCACAA,uDCzCWG,EAAb,eAAaA,EAAb,0CAQE,WACUC,EACAC,EACDC,EACCC,EACAC,GAAiB,6BACvBC,cAAMH,IALAF,mBACAK,gBACDA,cACCA,4BACAA,WAZVA,aAAwC,GACxCA,mBAA6B,CAAC,mBAAoB,YAAa,mBAAoB,kBAAmB,mBAAoB,YAW/FA,EAb7B,uCAgBE,WACEC,KAAKC,iBAAmBD,KAAKH,wBAAwBK,sBAErDF,KAAKG,KAAOH,KAAKI,UAAUD,KAY3BH,KAAKK,8BA/BT,uCAkCE,WAAyB,WACnBC,EAAeN,KAAKI,UAAUG,cAE9BD,EAAaE,OAAS,IACxBR,KAAKS,aAAe,GACpBH,EAAaI,QAAQ,YACJ,MAAXC,GACEA,EAAQC,eAA2C,eAA1BD,EAAQC,eAUnCC,EAAKJ,aAAaK,KARX,CACLC,iBAAkBJ,EAAQI,iBAC1BC,iBAAkBL,EAAQM,KAC1BC,gBAAiBP,EAAQO,gBACzBC,KAAM,eACNC,kBAAmBT,EAAQS,kBAC3BC,SAAUV,EAAQU,cAO5BrB,KAAKsB,SAAWtB,KAAKS,eAxDzB,4BA2DE,SAAeN,GAAY,WACnBoB,EAAYvB,KAAKF,OAAO0B,KAAKC,KAA8B,CAC/DC,OAAQ,MACRC,MAAO,QACPC,WAAY,wBACZC,KAAM,CAAEC,UAAW3B,KAGrBH,KAAKC,iBAAiB8B,MAAMC,OAAS,OAErC,IAAMC,EAAeV,EAAUW,cAAcC,UAAU,WACrDC,EAAKnC,iBAAiB8B,MAAMC,OAAS,KACrCC,EAAaI,eACZ,WACDD,EAAKnC,iBAAiB8B,MAAMC,OAAS,KACrCC,EAAaI,oBA1EnBC,GAAyDC,mDAA5C9C,GAAmCH,mFAAnCG,EAAmC+C,ipCDlBhDlD,uBAMAA,eAAKA,aAAGA,wBAAYA,QAAIA,QACxBA,mBACEA,WACEA,sBACAA,sBAOFA,QAEAA,WACEA,sBACAA,uBASFA,QAEAA,YACEA,uBACAA,uBACFA,QAEAA,YACEA,uBACAA,uBACFA,QAEAA,YACEA,uBACAA,uBAOFA,QAEAA,YACEA,wBACAA,uBACFA,QAEAA,wBACAA,wBACFA,QAEAA,6BACEA,gCAAQmD,2CACVnD,eAhEwBA,qBAOPA,4CAmDKA,sDACaA,sDAGpBA,0DAA2C,aAA3CA,CAA2C,ooBC5C7CG,EAAb,+IC2BaiD,GAAb,eAAaA,KAAbC,iFAAaD,4DAxBF,CACPE,KACAC,aAAsCpD,GACtCqD,KACAC,KACAC,KACAC,KACAC,MACAC,MACAC,KACAC,KACAC,MACAC,KACAC,MACAC,KACAC,KACAC,MACAC,KACAC,SAMSnB,EAAb","names":["i0","ctx_r15","ctx_r23","SubstanceDependenciesImageComponent","substanceService","authService","gaService","overlayContainerService","dialog","m","this","overlayContainer","getContainerElement","uuid","substance","getSubstanceRelationships","relationship","relationships","length","dependencies","forEach","element","qualification","c","push","relatedSubstance","relationshipType","type","interactionType","role","mediatorSubstance","comments","filtered","dialogRef","open","StructureImageModalComponent","height","width","panelClass","data","structure","style","zIndex","subscription","afterClosed","subscribe","u","unsubscribe","o","SubstanceCardBaseFilteredList","selectors","ctx","SubstanceDependenciesImageModule","g","CommonModule","DynamicComponentLoaderModule","MatTableModule","CdkTableModule","MatPaginatorModule","MatInputModule","MatFormFieldModule","MatSelectModule","ReactiveFormsModule","FormsModule","MatTreeModule","RouterModule","MatIconModule","ReferencesManagerModule","MatDialogModule","MatSortModule","CodeDisplayModule","SubstanceImageModule"],"sources":["./src/app/core/substance-details/substance-dependencies-image/substance-dependencies-image.component.html","./src/app/core/substance-details/substance-dependencies-image/substance-dependencies-image.component.ts","./src/app/core/substance-details/substance-dependencies-image/substance-dependencies-image.module.ts"],"sourcesContent":["<div class=\"divcenter\" *ngIf=\"uuid\">\n  <a tabindex=\"0\" role=\"img\" aria-label=\"substance image\" class=\"zoom\" (click)=\"openImageModal(uuid)\">\n    <img class=\"image-icon\" appSubstanceImage size=\"400\" [entityId]=\"uuid\">\n  </a>\n  <br>\n</div>\n<div><b>Dependencies</b></div>\n<table mat-table [dataSource]=\"dependencies\">\n  <ng-container matColumnDef=\"relatedSubstance\">\n    <th mat-header-cell *matHeaderCellDef> Related Substance </th>\n    <td mat-cell *matCellDef=\"let mod\">\n      <div *ngIf=\"mod.relatedSubstance\">\n        <a class=\"substance-name\" [routerLink]=\"['/substances', mod.relatedSubstance.refuuid]\" target=\"_blank\">\n          {{mod.relatedSubstance.name}}\n        </a>\n      </div>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"structure\">\n    <th mat-header-cell *matHeaderCellDef> Structure </th>\n    <td mat-cell *matCellDef=\"let mod\">\n      <div *ngIf=\"mod.relatedSubstance\">\n        <div class=\"bordergray width95px\" *ngIf=\"mod.relatedSubstance.refuuid\">\n          <a tabindex=\"0\" role=\"img\" aria-label=\"substance image\" class=\"zoom\" (click)=\"openImageModal(mod.relatedSubstance.refuuid)\">\n            <img class=\"image-icon\" appSubstanceImage size=\"90\" [entityId]=\"mod.relatedSubstance.refuuid\">\n          </a>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"relationshipType\">\n    <th mat-header-cell *matHeaderCellDef> Relationship Type </th>\n    <td mat-cell *matCellDef=\"let mod\"> {{mod.relationshipType}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"interactionType\">\n    <th mat-header-cell *matHeaderCellDef> Interaction Type </th>\n    <td mat-cell *matCellDef=\"let mod\"> {{mod.interactionType}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"mediatorSubtance\">\n    <th mat-header-cell *matHeaderCellDef> Mediator Substance </th>\n    <td mat-cell *matCellDef=\"let mod\">\n      <div *ngIf=\"mod.mediatorSubstance\">\n        <a class=\"substance-name\" [routerLink]=\"['/substances', mod.mediatorSubstance.refuuid]\" target=\"_blank\">\n          {{mod.mediatorSubstance.name}}\n        </a>\n      </div>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"comments\">\n    <th mat-header-cell *matHeaderCellDef class=\"width110px\"> Comments </th>\n    <td mat-cell *matCellDef=\"let mod\"> {{mod.comments}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<mat-paginator [length]=\"filtered && filtered.length || 0\" [pageSize]=\"5\" showFirstLastButtons=\"true\"\n  (page)=\"pageChange($event, analyticsEventCategory)\" [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { SubstanceCardBase } from '../substance-card-base';\nimport { SubstanceDetail, SubstanceReference } from '../../substance/substance.model';\nimport { SubstanceDependenciesImageNode } from './substance-dependencies-image.model';\nimport { SubstanceService } from '@gsrs-core/substance/substance.service';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { AuthService } from '@gsrs-core/auth';\nimport { SubstanceCardBaseFilteredList } from '@gsrs-core/substance-details';\nimport { StructureImageModalComponent } from '@gsrs-core/structure';\n\n@Component({\n  selector: 'app-substance-dependencies-image',\n  templateUrl: './substance-dependencies-image.component.html',\n  styleUrls: ['./substance-dependencies-image.component.scss']\n})\n\nexport class SubstanceDependenciesImageComponent extends SubstanceCardBaseFilteredList<SubstanceDependenciesImageNode> implements OnInit {\n  references: Array<SubstanceReference> = [];\n  displayedColumns: string[] = ['relatedSubstance', 'structure', 'relationshipType', 'interactionType', 'mediatorSubtance', 'comments'];\n  private overlayContainer: HTMLElement;\n  displayImagetag: string;\n  dependencies: Array<SubstanceDependenciesImageNode>;\n  uuid: string;\n\n  constructor(\n    private substanceService: SubstanceService,\n    private authService: AuthService,\n    public gaService: GoogleAnalyticsService,\n    private overlayContainerService: OverlayContainer,\n    private dialog: MatDialog\n  ) { super(gaService); }\n\n  ngOnInit() {\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n\n    this.uuid = this.substance.uuid;\n\n    /*\n    this.substanceService.getDependencies(this.uuid).subscribe(response => {\n      if (response) {\n        this.dependencies = response;\n        this.filtered = response;\n      }\n    }, error => {\n    });\n    */\n\n    this.getSubstanceRelationships();\n  }\n\n  getSubstanceRelationships() {\n    let relationship = this.substance.relationships;\n\n    if (relationship.length > 0) {\n      this.dependencies = [];\n      relationship.forEach(element => {\n        if (element != null) {\n          if (element.qualification && element.qualification === 'DEPENDENCY') {\n            let data: any;\n            data = {\n              relatedSubstance: element.relatedSubstance,\n              relationshipType: element.type,\n              interactionType: element.interactionType,\n              role: 'Relationship',\n              mediatorSubstance: element.mediatorSubstance,\n              comments: element.comments\n            };\n            this.dependencies.push(data);\n          }\n        }\n      });\n    }\n    this.filtered = this.dependencies;\n  }\n\n  openImageModal(uuid: string) {\n    const dialogRef = this.dialog.open(StructureImageModalComponent, {\n      height: '90%',\n      width: '650px',\n      panelClass: 'structure-image-panel',\n      data: { structure: uuid }\n    });\n\n    this.overlayContainer.style.zIndex = '1002';\n\n    const subscription = dialogRef.afterClosed().subscribe(() => {\n      this.overlayContainer.style.zIndex = null;\n      subscription.unsubscribe();\n    }, () => {\n      this.overlayContainer.style.zIndex = null;\n      subscription.unsubscribe();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubstanceDependenciesImageComponent } from './substance-dependencies-image.component';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport {ReferencesManagerModule} from '../../references-manager/references-manager.module';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSortModule} from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { CodeDisplayModule } from '@gsrs-core/utils/code-display.module';\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceDependenciesImageComponent),\n    MatTableModule,\n    CdkTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTreeModule,\n    RouterModule,\n    MatIconModule,\n    ReferencesManagerModule,\n    MatDialogModule,\n    MatSortModule,\n    CodeDisplayModule,\n    SubstanceImageModule\n  ],\n  declarations: [\n    SubstanceDependenciesImageComponent\n  ]\n})\nexport class SubstanceDependenciesImageModule { }\n"],"sourceRoot":"webpack:///","file":"3906.f961fdb5f82cc186.js"}