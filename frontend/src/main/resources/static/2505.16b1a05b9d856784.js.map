{"version":3,"mappings":"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","names":["i0","SubstanceModificationsComponent","utilsService","a","Subject","this","substanceUpdated","subscribe","substance","modifications","structuralModifications","length","structural","physicalModifications","physical","agentModifications","agent","forEach","item","extentAmount","$$amount","displayAmount","amount","returned","trim","c","SubstanceCardBase","selectors","SubstanceModificationsModule","_","CommonModule","DynamicComponentLoaderModule","MatTableModule","CdkTableModule","RouterModule"],"sources":["./src/app/core/substance-details/substance-modifications/substance-modifications.component.html","./src/app/core/substance-details/substance-modifications/substance-modifications.component.ts","./src/app/core/substance-details/substance-modifications/substance-modifications.module.ts"],"sourcesContent":["\r\n<div *ngIf=\"agent\">\r\n  <h4>Agent Modifications:</h4>\r\n\r\n  <table class=\"no-bottom-border\" mat-table [dataSource]=\"agent\">\r\n\r\n    <ng-container matColumnDef=\"Modification Process\">\r\n      <th mat-header-cell *matHeaderCellDef> Modification Process </th>\r\n      <td mat-cell *matCellDef=\"let agent\">\r\n        {{agent.agentModificationProcess}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Modification Role\">\r\n      <th mat-header-cell *matHeaderCellDef> Modification Role </th>\r\n      <td mat-cell *matCellDef=\"let agent\">\r\n        {{agent.agentModificationRole}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Modification Type\">\r\n      <th mat-header-cell *matHeaderCellDef> Modification Type </th>\r\n      <td mat-cell *matCellDef=\"let agent\">\r\n        {{agent.agentModificationType}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let agent\">\r\n         <span [ngClass]=\"{'empty': displayAmount(agent.amount) === 'empty value'}\">\r\n           {{displayAmount(agent.amount)}}\r\n         </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"Modification Agent\">\r\n      <th mat-header-cell *matHeaderCellDef> Modification Agent </th>\r\n      <td mat-cell *matCellDef=\"let agent\">\r\n        {{agent.agentSubstance?.refPname}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Approved ID\">\r\n      <th mat-header-cell *matHeaderCellDef> Approved ID </th>\r\n      <td mat-cell *matCellDef=\"let agent\">\r\n        <a *ngIf=\"agent.agentSubstance && agent.agentSubstance.refuuid\" [routerLink]=\"['/substances', agent.agentSubstance.refuuid]\" target=\"_blank\">{{agent.agentSubstance.approvalID || agent.agentSubstance.refuuid}}</a>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"agentColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: agentColumns;\"></tr>\r\n  </table>\r\n\r\n</div>\r\n\r\n<br/>\r\n\r\n<div *ngIf=\"physical\">\r\n <h4>Physical Modifications:</h4>\r\n\r\n  <table class=\"no-bottom-border\" mat-table [dataSource]=\"physical\">\r\n\r\n    <ng-container matColumnDef=\"Modification Role\">\r\n      <th mat-header-cell *matHeaderCellDef> Modification Role </th>\r\n      <td mat-cell *matCellDef=\"let physical\">\r\n        {{physical.physicalModificationRole}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Parameter Name\">\r\n      <th mat-header-cell *matHeaderCellDef> Parameter Name </th>\r\n      <td mat-cell *matCellDef=\"let physical\">\r\n        <div *ngIf=\"physical.parameters && physical.parameters.length\" class = \"param-container\">\r\n          <span *ngFor=\"let parameter of physical.parameters; last as isLast\" class = \"param-name\">\r\n            {{parameter.parameterName}}\r\n          </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let physical\">\r\n        <div *ngIf=\"physical.parameters && physical.parameters.length\" class = \"param-container\">\r\n        <span *ngFor=\"let parameter of physical.parameters; last as isLast\" class = \"param-amount\" >\r\n                   <span [ngClass]=\"{'empty': displayAmount(parameter.amount) === 'empty value'}\">\r\n                     {{displayAmount(parameter.amount)}}\r\n                   </span>\r\n        </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"physicalColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: physicalColumns;\"></tr>\r\n  </table>\r\n\r\n</div>\r\n\r\n<br/>\r\n\r\n<div *ngIf=\"structural\">\r\n  <h4>Structural Modifications:</h4>\r\n\r\n  <div class=\"responsive\">\r\n    <table class=\"no-bottom-border\" mat-table [dataSource]=\"structural\">\r\n\r\n      <ng-container matColumnDef=\"Modification Type\">\r\n        <th mat-header-cell *matHeaderCellDef> Modification Type </th>\r\n        <td mat-cell *matCellDef=\"let structural\">\r\n          {{structural.structuralModificationType}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Location Site\">\r\n        <th mat-header-cell *matHeaderCellDef> Location Site </th>\r\n        <td mat-cell *matCellDef=\"let structural\">\r\n          <div *ngFor=\"let site of structural.sites\">\r\n            [{{site.subunitIndex}}_{{site.residueIndex}}]\r\n            <br />\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Location Type\">\r\n        <th mat-header-cell *matHeaderCellDef> Location Type </th>\r\n        <td mat-cell *matCellDef=\"let structural\">\r\n          {{structural.locationType}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Residue Modified\">\r\n        <th mat-header-cell *matHeaderCellDef> Residue Modified </th>\r\n        <td mat-cell *matCellDef=\"let structural\">\r\n          {{structural.residueModified}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Extent\">\r\n        <th mat-header-cell *matHeaderCellDef> Extent </th>\r\n        <td mat-cell *matCellDef=\"let structural\">\r\n          {{structural.extent}}<br>\r\n          <b>Amount: </b> {{structural.$$amount}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Modification Name\">\r\n        <th mat-header-cell *matHeaderCellDef> Modification Name </th>\r\n        <td mat-cell *matCellDef=\"let structural\">\r\n          <span *ngIf=\"structural.molecularFragment\">\r\n            {{structural.molecularFragment.refPname}}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Modification ID\">\r\n        <th mat-header-cell *matHeaderCellDef> Modification ID </th>\r\n        <td mat-cell *matCellDef=\"let structural\">\r\n          <span *ngIf=\"structural.molecularFragment\">\r\n            <a [routerLink]=\"['/substances', structural.molecularFragment.refuuid]\" target=\"_blank\">{{structural.molecularFragment.approvalID || structural.molecularFragment.refuuid}}</a>\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"structuralColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: structuralColumns;\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SubstanceCardBase} from '../substance-card-base';\r\nimport {UtilsService} from '../../utils/utils.service';\r\nimport {\r\n  AgentModification,\r\n  PhysicalModification,\r\n  StructuralModification,\r\n  SubstanceAmount,\r\n  SubstanceDetail\r\n} from '../../substance/substance.model';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-substance-modifications',\r\n  templateUrl: './substance-modifications.component.html',\r\n  styleUrls: ['./substance-modifications.component.scss']\r\n})\r\nexport class SubstanceModificationsComponent extends SubstanceCardBase implements OnInit {\r\n  structural: Array<StructuralModification>;\r\n  physical: Array<PhysicalModification>;\r\n  agent: Array<AgentModification>;\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  structuralColumns: string[] = [\r\n    'Modification Type',\r\n    'Location Site',\r\n    'Location Type',\r\n    'Residue Modified',\r\n    'Extent',\r\n    'Modification Name',\r\n    'Modification ID'\r\n  ];\r\n  physicalColumns: string[] = ['Modification Role', 'Parameter Name', 'Amount'];\r\n  agentColumns: string[] = [\r\n    'Modification Process',\r\n    'Modification Role',\r\n    'Modification Type',\r\n    'Amount',\r\n    'Modification Agent',\r\n    'Approved ID'\r\n  ];\r\n  constructor(\r\n    private utilsService: UtilsService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.substance = substance;\r\n      if (this.substance != null) {\r\n        if (this.substance.modifications.structuralModifications.length > 0) {\r\n          this.structural = this.substance.modifications.structuralModifications;\r\n        }\r\n        if (this.substance.modifications.physicalModifications.length > 0) {\r\n          this.physical = this.substance.modifications.physicalModifications;\r\n        }\r\n        if (this.substance.modifications.agentModifications.length > 0) {\r\n          this.agent = this.substance.modifications.agentModifications;\r\n        }\r\n      }\r\n\r\n      if (this.structural) {\r\n        this.structural.forEach( item => {\r\n          if (item.extentAmount) {\r\n            item.$$amount = this.displayAmount(item.extentAmount);\r\n          }\r\n      });\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  displayAmount(amount: any): any {\r\n    let returned = this.utilsService.displayAmount(amount);\r\n\r\n    if (!returned || returned.trim().length === 0) {\r\n      returned = 'empty value';\r\n    }\r\n    return returned;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { SubstanceModificationsComponent } from './substance-modifications.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceModificationsComponent),\r\n    MatTableModule,\r\n    CdkTableModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [SubstanceModificationsComponent]\r\n})\r\nexport class SubstanceModificationsModule { }\r\n"],"sourceRoot":"webpack:///","file":"2505.16b1a05b9d856784.js"}