{"version":3,"mappings":"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","names":["i0","StructuralUnitFormComponent","cvService","dialog","utilsService","substanceService","overlayContainerService","substanceFormService","this","EventEmitter","showImagePopup","subscribe","v","hidePopup","data","overlayContainer","getContainerElement","next","imagePopupUnit","unit","amount","type","units","dialogRef","open","AmountFormDialogComponent","subsAmount","width","style","zIndex","dialogSubscription","afterClosed","n","newAmount","subscriptions","push","amt","displayAmount","event","result","sruDisplayToConnectivity","errors","$errors","length","attachmentMap","$$deletedCode","newUUID","unitDeleted","emit","a","selectors","ctx","ctx_r5","SubstanceFormStructuralUnitsCardComponent","substanceFormStructuralUnitsService","scrollToService","gaService","c","analyticsEventCategory","menuLabelUpdate","structuralSubscription","substanceSRUs","s","structuralUnits","forEach","subscription","unsubscribe","deleteSubstanceSRU","SubstanceCardBaseFilteredList","SubstanceFormStructuralUnitsModule","m","CommonModule","DynamicComponentLoaderModule","SubstanceFormModule","MatDividerModule","MatIconModule","MatButtonModule","ScrollToModule","MatFormFieldModule","ReactiveFormsModule","FormsModule","MatPaginatorModule","MatInputModule","SubstanceImageModule"],"sources":["./src/app/core/substance-form/structural-units/structural-unit-form.component.html","./src/app/core/substance-form/structural-units/structural-unit-form.component.ts","./src/app/core/substance-form/structural-units/substance-form-structural-units-card.component.html","./src/app/core/substance-form/structural-units/substance-form-structural-units-card.component.ts","./src/app/core/substance-form/structural-units/substance-form-structural-units.module.ts"],"sourcesContent":["  <div class = \"unit-form-container\">\n    <div class=\"delete-container\">\n      <button mat-icon-button matTooltip=\"Delete SRU\" (click)=\"deleteSRU()\">\n        <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n      </button>\n    </div>\n      <div class = \"form-row full\">\n    <div class=\"flex-column related-substance\">\n    <img (click)=\"showHidePopup()\" class = \"related-image\" appSubstanceImage [entityId]=\"unit && (unit.uuid || (unit._structure && unit._structure.id))\">\n    </div>\n\n\n    <div class = \"form-container\">\n    <div class = \"inner-row-top\">\n      <app-cv-input domain=\"POLYMER_SRU_TYPE\" class = \"type\" title = \"SRU Type\" (valueChange)= \"unit.type = $event\" [model] = \"unit.type\"></app-cv-input>\n      <mat-form-field class=\"label\">\n        <input matInput placeholder=\"Label\" [(ngModel)]=\"unit.label\" required name=\"label\" />\n      </mat-form-field>\n      <mat-form-field class=\"attachment-count\">\n        <input matInput placeholder=\"attachment count\" [(ngModel)]=\"unit.attachmentCount\" required name=\"attachment count\" disabled />\n      </mat-form-field>\n    </div>\n\n    <div class = \"inner-row-bottom\">\n      <div class = 'amount' >\n        <div class = \"label padded\">\n          Amount\n        </div>\n        <button mat-icon-button matTooltip=\"add\" (click)=\"(openAmountDialog())\">\n          <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n        </button>\n        <div *ngIf = \"unit.amount\" class = \"amount-display\">\n          {{displayAmount(unit.amount)}}\n        </div>\n      </div>\n      <div class = \"connectivity-container\">\n        <mat-form-field class = \"connectivity\">\n          <mat-label>Connectivity</mat-label>\n          <textarea matInput cdkTextareaAutosize [ngModel] = \"unit._displayConnectivity\" (ngModelChange) = \"displayToConnectivity($event)\">\n          </textarea>\n        </mat-form-field>\n        <div class = \"error-container\" *ngIf = \"errors && errors.length > 0\">\n          <div *ngFor =\"let error of errors\">\n            {{error.text}}\n          </div>\n        </div>\n      </div>\n    </div>\n      </div>\n      </div>\n    </div>\n    <div class = \"form-row\">\n        <app-audit-info [source] = \"unit\"></app-audit-info>\n    </div>\n\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AmountFormDialogComponent } from '@gsrs-core/substance-form/amount-form-dialog/amount-form-dialog.component';\nimport { Subscription } from 'rxjs';\nimport { ControlledVocabularyService } from '@gsrs-core/controlled-vocabulary';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilsService } from '@gsrs-core/utils';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { SubstanceFormService } from '@gsrs-core/substance-form/substance-form.service';\nimport { StructuralUnit, SubstanceCode, SubstanceService } from '@gsrs-core/substance';\nimport { SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-structural-unit-form',\n  templateUrl: './structural-unit-form.component.html',\n  styleUrls: ['./structural-unit-form.component.scss']\n})\nexport class StructuralUnitFormComponent implements OnInit {\n  @Input() unit: StructuralUnit;\n  @Output() unitDeleted = new EventEmitter<StructuralUnit>();\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n  siteDisplay: string;\n  substanceType: string;\n  errors = [];\n  hidePopup: boolean = false;\n\n  constructor(\n    private cvService: ControlledVocabularyService,\n    private dialog: MatDialog,\n    private utilsService: UtilsService,\n    private substanceService: SubstanceService,\n    private overlayContainerService: OverlayContainer,\n    private substanceFormService: SubstanceFormService\n  ) { \n    this.substanceService.showImagePopup.subscribe (data => {\n      this.hidePopup = data;\n    })\n  }\n\n\n  ngOnInit() {\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n  }\n\n  showHidePopup(): void {\n    this.hidePopup = !this.hidePopup;\n    this.substanceService.showImagePopup.next(this.hidePopup);\n    this.substanceService.imagePopupUnit.next(this.unit);\n  }\n\n  openAmountDialog(): void {\n\n    if (!this.unit.amount) {\n      this.unit.amount = {};\n      if (this.unit.type === 'SRU-BLOCK') {\n        this.unit.amount = {\n          type: 'DEGREE OF POLYMERIZATION',\n          units: 'per polymer'\n        };\n      }\n    }\n    const dialogRef = this.dialog.open(AmountFormDialogComponent, {\n      data: { 'subsAmount': this.unit.amount },\n      width: '1040px'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newAmount => {\n      this.overlayContainer.style.zIndex = null;\n      this.unit.amount = newAmount;\n\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n  displayAmount(amt): string {\n    return this.utilsService.displayAmount(amt);\n  }\n\n  displayToConnectivity(event: any) {\n    const result = this.utilsService.sruDisplayToConnectivity(event);\n    this.errors = result.$errors;\n    if (this.errors.length === 0) {\n      delete result.$errors;\n      this.unit.attachmentMap = result;\n    }\n  }\n\n  deleteSRU(): void {\n    this.unit.$$deletedCode = this.utilsService.newUUID();\n    this.unitDeleted.emit(this.unit);\n  }\n\n}\n\n\n\n","<div class=\"responsive\">\n  <div class = \"alternate-backgrounds\"  *ngFor=\"let unit of structuralUnits; last as isLast; index as index\"  appScrollToTarget [id]=\"'substance-structural-unit-' + index\" >\n    <app-structural-unit-form [unit]=\"unit\" (unitDeleted)=\"deleteSRU($event)\" ></app-structural-unit-form>\n    <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n  </div>\n</div>\n\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {SubstanceCardBaseFilteredList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {StructuralUnit} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ScrollToService} from '@gsrs-core/scroll-to/scroll-to.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport { SubstanceFormStructuralUnitsService } from './substance-form-structural-units.service';\n\n@Component({\n  selector: 'app-substance-form-structural-units-card',\n  templateUrl: './substance-form-structural-units-card.component.html',\n  styleUrls: ['./substance-form-structural-units-card.component.scss']\n})\nexport class SubstanceFormStructuralUnitsCardComponent extends SubstanceCardBaseFilteredList<StructuralUnit>\n  implements OnInit, AfterViewInit, OnDestroy {\n  structuralUnits: Array<StructuralUnit>;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private substanceFormStructuralUnitsService: SubstanceFormStructuralUnitsService,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form structural units';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Structural Units');\n  }\n\n  ngAfterViewInit() {\n    const structuralSubscription = this.substanceFormStructuralUnitsService.substanceSRUs.subscribe(structuralUnits => {\n      this.structuralUnits = structuralUnits;\n    });\n    this.subscriptions.push(structuralSubscription);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  deleteSRU(unit: StructuralUnit): void {\n    this.substanceFormStructuralUnitsService.deleteSubstanceSRU(unit);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader';\nimport {SubstanceFormModule} from '@gsrs-core/substance-form/substance-form.module';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ScrollToModule} from '@gsrs-core/scroll-to';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {SubstanceFormStructuralUnitsCardComponent} from '@gsrs-core/substance-form/structural-units/substance-form-structural-units-card.component';\nimport { StructuralUnitFormComponent } from './structural-unit-form.component';\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormStructuralUnitsCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatInputModule,\n    SubstanceImageModule\n  ],\n  declarations: [\n    SubstanceFormStructuralUnitsCardComponent,\n    StructuralUnitFormComponent\n  ]\n})\nexport class SubstanceFormStructuralUnitsModule { }\n"],"sourceRoot":"webpack:///","file":"1089.8b595b8296d4ec75.js"}