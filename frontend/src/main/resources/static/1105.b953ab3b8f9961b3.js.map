{"version":3,"mappings":"0ZAIMA,iBAAuCA,kBAAKA,kCAC5CA,iBAAyCA,SAAkBA,gCAAlBA,sDAIzCA,iBAAuCA,2BAAcA,kCACrDA,iBAAyCA,SAA0BA,gCAA1BA,8DAIzCA,iBAAuCA,oBAAOA,8BAG1CA,gDADFA,mBACEA,6BACFA,gDADyDA,mFAF3DA,iBAAyCA,SACvCA,yBAGFA,0CAJyCA,4CAChCA,gFAOTA,iBAAuCA,kCAAqBA,kCAE1DA,kBAAsEA,SAA0CA,uCAA1CA,qHADhCA,kBACtCA,wBACAA,kBACAA,eACEA,gBACAA,SACAA,QACFA,QACFA,sCAPQA,uDACuCA,yDAEjBA,sEAC1BA,6EALJA,iBAAwCA,wBASxCA,gCAT8CA,oEAa9CA,iBAAuCA,sBAASA,kCAChDA,iBAAyCA,SAAsBA,gCAAtBA,0DAIzCA,iBAAuCA,wBAAWA,kCAE9CA,eAAqDA,SAAkBA,cAAIA,SAAkBA,cAAKA,SAA6BA,2CAA1EA,uBAAsBA,uBAAuBA,8DADtGA,iBACIA,wBACJA,gCADiCA,8DAKjCA,iBAAuCA,wBAAWA,kCAK9CA,iBAAqBA,sBAAUA,QAC/BA,kBACEA,qCACFA,QACEA,kBACEA,mBACAA,qBAA+DA,iBAAKA,QACtEA,gDALwBA,wCAAyB,kEANvDA,iBACEA,qBAA6DA,gEAASC,eAAsED,gBAAIA,QAEhJA,2CAUFA,kCAZiGA,wEAgBnGA,sCACAA,iBCvDG,IAAME,EAAb,eAAaA,EAAb,0CAKE,WACUC,EACAC,EACAC,GAAyC,6BAEjDC,gBAJQH,eACAG,WACAA,4BAPVA,aAAuC,GACvCA,mBAA6B,CAAC,OAAQ,gBAAiB,SAAU,uBAAwB,WAAY,aAAc,cACnHA,mBAAmB,IAAIC,IAK4BD,EARrD,uCAaE,WAAQ,WACNE,KAAKC,iBAAiBC,UAAU,YAC9BC,EAAKC,UAAYA,EACK,MAAlBD,EAAKC,WAAkD,MAA7BD,EAAKC,UAAUC,aAC3CF,EAAKE,WAAaF,EAAKC,UAAUC,YAEnCF,EAAKG,YAAYC,KAAKJ,EAAKE,WAAWG,UAExCR,KAAKS,iBAAmBT,KAAKH,wBAAwBa,wBArBzD,sBAwBS,SAASC,GACd,OAAOX,KAAKL,aAAaiB,cAAcD,KAzB3C,6BA4BE,SAAgBE,GACd,IAD8BC,EAC1BC,GAAO,EADmBjB,UAEjBe,GAFiB,IAE9B,2BACyB,cADJC,QACdE,gBACHD,GAAO,SAJmBE,0BAO9B,OAAOF,IAnCX,uBAsCE,SAAUG,GAAW,WAEbC,EAAYnB,KAAKJ,OAAOwB,KAAKF,EAAa,CAC9CG,SAAU,MACVC,SAAU,QAEZtB,KAAKS,iBAAiBc,MAAMC,OAAS,OAErCL,EAAUM,cAAcvB,UAAU,YAChCwB,EAAKjB,iBAAiBc,MAAMC,OAAS,WA/C3CG,GAAkDC,kDAArClC,GAA4BF,8DAA5BE,EAA4BmC,uuCDbzCrC,iBACEA,mBAEEA,WACEA,sBACAA,sBACFA,QAEAA,WACEA,sBACAA,sBACFA,QAEAA,WACEA,sBACAA,uBAKFA,QAEAA,YACEA,uBACAA,uBAUFA,QAEAA,YACEA,uBACAA,uBACFA,QAEAA,YACEA,uBACAA,uBAGFA,QAEAA,aACEA,uBACAA,uBAcFA,QAGAA,wBACAA,wBACFA,QACFA,eArEmBA,0CAkEKA,sDACaA,0LCvDxBE,EAAb,+DCmBaoC,GAAb,eAAaA,KAAbC,iFAAaD,4DAhBF,CACPE,KACAC,aAAsCvC,GACtCwC,KACAC,KACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAC,KACAC,SAISb,EAAb","names":["i0","ctx_r35","SubstancePropertiesComponent","utilsService","dialog","overlayContainerService","s","Subject","this","substanceUpdated","subscribe","r","substance","properties","countUpdate","emit","length","overlayContainer","getContainerElement","amount","displayAmount","access","d","itIs","toLowerCase","se","templateRef","dialogRef","open","minWidth","maxWidth","style","zIndex","afterClosed","u","i","SubstanceCardBase","selectors","SubstancePropertiesModule","v","CommonModule","DynamicComponentLoaderModule","MatTableModule","MatIconModule","CdkTableModule","MatPaginatorModule","MatInputModule","RouterModule","SubstanceImageModule","ReferencesManagerModule","MatDialogModule","MatTooltipModule"],"sources":["./src/app/core/substance-details/substance-properties/substance-properties.component.html","./src/app/core/substance-details/substance-properties/substance-properties.component.ts","./src/app/core/substance-details/substance-properties/substance-properties.module.ts"],"sourcesContent":["<div class=\"responsive\">\r\n  <table mat-table [dataSource]=\"properties\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let property\"> {{property.name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"property type\">\r\n      <th mat-header-cell *matHeaderCellDef> Property Type </th>\r\n      <td mat-cell *matCellDef=\"let property\"> {{property.propertyType}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\r\n      <td mat-cell *matCellDef=\"let property\"> {{toString(property.value)}} \r\n        <span *ngIf=\"codeIsProtected(property.value.access)\" matTooltip=\"Not Public\">\r\n          <mat-icon svgIcon=\"lock\" class=\"icon-align blue-font\" *ngIf=\"codeIsProtected(property.value.access)\"></mat-icon>\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"referenced substance\">\r\n      <th mat-header-cell *matHeaderCellDef> Referenced Substance </th>\r\n      <td mat-cell *matCellDef=\"let property\"><div *ngIf = \"property.referencedSubstance\" class = \"thumb-col\">\r\n        <div *ngIf = \"property.referencedSubstance.linkingID\" class = \"code\" >{{property.referencedSubstance.linkingID}}</div>\r\n        <img class = \"image-thumb\" appSubstanceImage [entityId]=\"property.referencedSubstance.refuuid\">\r\n        <div>\r\n          <a class=\"substance-name\" [routerLink]=\"['/substances', property.referencedSubstance.refuuid]\" >\r\n          {{property.referencedSubstance.name}}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"defining\">\r\n      <th mat-header-cell *matHeaderCellDef> Defining </th>\r\n      <td mat-cell *matCellDef=\"let property\"> {{property.defining}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"parameters\">\r\n      <th mat-header-cell *matHeaderCellDef> Parameters </th>\r\n      <td mat-cell *matCellDef=\"let property\">\r\n          <div *ngFor = \"let parameter of property.parameters\">{{parameter.name}}<br>{{parameter.type}}<br/>{{toString(parameter.value)}}</div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"references\">\r\n      <th mat-header-cell *matHeaderCellDef> References </th>\r\n      <td mat-cell *matCellDef=\"let property\">\r\n        <button class = \"mat-raised-button mat-primary dialog-close\" (click)=\"openModal(refTemplate)\"  [disabled]=\"property.references.length <= 0\">View</button>\r\n\r\n        <ng-template #refTemplate>\r\n          <h2 mat-dialog-title>References</h2>\r\n          <div mat-dialog-content>\r\n            <app-references-manager [substance] = \"substance\" [references] = \"property.references\"></app-references-manager>\r\n          </div>\r\n            <div mat-dialog-actions>\r\n              <span class=\"middle-fill\"></span>\r\n              <button class=\"mat-raised-button mat-primary\" mat-dialog-close>Close</button>\r\n            </div>\r\n        </ng-template>\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SubstanceCardBase} from '../substance-card-base';\r\nimport {SubstanceAmount, SubstanceDetail, SubstanceProperty} from '../../substance/substance.model';\r\nimport {Subject} from 'rxjs';\r\nimport { UtilsService } from '@gsrs-core/utils';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-substance-properties',\r\n  templateUrl: './substance-properties.component.html',\r\n  styleUrls: ['./substance-properties.component.scss']\r\n})\r\nexport class SubstancePropertiesComponent extends SubstanceCardBase implements OnInit {\r\n  properties: Array<SubstanceProperty> = [];\r\n  displayedColumns: string[] = ['name', 'property type', 'amount', 'referenced substance', 'defining', 'parameters', 'references'];\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  private overlayContainer: HTMLElement;\r\n  constructor(\r\n    private utilsService: UtilsService,\r\n    private dialog: MatDialog,\r\n    private overlayContainerService: OverlayContainer,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.substance = substance;\r\n      if (this.substance != null && this.substance.properties != null) {\r\n        this.properties = this.substance.properties;\r\n      }\r\n      this.countUpdate.emit(this.properties.length);\r\n    });\r\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n  }\r\n\r\n  public toString(amount: SubstanceAmount) {\r\n    return this.utilsService.displayAmount(amount);\r\n  }\r\n\r\n  codeIsProtected(access: string[]) {\r\n    let itIs = false;\r\n    for(let a of access) {\r\n      if(a.toLowerCase() === 'protected') {\r\n        itIs = true;\r\n      }\r\n    }\r\n    return itIs;\r\n  }\r\n\r\n  openModal(templateRef) {\r\n\r\n    const dialogRef = this.dialog.open(templateRef, {\r\n      minWidth: '40%',\r\n      maxWidth: '90%'\r\n    });\r\n    this.overlayContainer.style.zIndex = '1002';\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.overlayContainer.style.zIndex = null;\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {DynamicComponentLoaderModule} from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport {SubstancePropertiesComponent} from './substance-properties.component';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {RouterModule} from '@angular/router';\r\nimport { SubstanceImageModule } from '@gsrs-core/substance/substance-image.module';\r\nimport { ReferencesManagerModule } from '@gsrs-core/references-manager';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstancePropertiesComponent),\r\n    MatTableModule,\r\n    MatIconModule,\r\n    CdkTableModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    RouterModule,\r\n    SubstanceImageModule,\r\n    ReferencesManagerModule,\r\n    MatDialogModule,\r\n    MatTooltipModule\r\n  ],\r\n  declarations: [SubstancePropertiesComponent]\r\n})\r\nexport class SubstancePropertiesModule {\r\n}\r\n"],"sourceRoot":"webpack:///","file":"1105.b953ab3b8f9961b3.js"}