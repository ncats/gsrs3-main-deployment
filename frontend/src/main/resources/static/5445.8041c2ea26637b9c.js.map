{"version":3,"mappings":"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","names":["forwardSlash","value","replace","o","pure","i0","ctx_r54","ctx_r57","ctx_r62","ctx_r65","ctx_r67","SubstanceCodesComponent","dialog","gaService","overlayContainerService","utilsService","r","Subject","FormControl","this","substanceUpdated","subscribe","a","substance","codes","type","displayedColumns","displayedFilterColumns","filterSubstanceCodes","length","forEach","code","url","trim","filtered","pageChange","searchControl","valueChanges","filterList","getTypeFilterOptions","pageSize","overlayContainer","getContainerElement","codeSystemFilter","codeSystemFilterValue","filterTable","codeFilter","codeFilterValue","typeFilter","typeFilterValue","csFilter","cFilter","tFilter","n","f","codeSystem","toLowerCase","includes","push","x","hideFilters","showHideFilterText","typeFilterOptions","l","c","display","u","oneType","filter","e","sort","data","slice","active","direction","b","isAsc","s","compare","toString","toUpperCase","_isClassification","countUpdate","emit","access","itIs","comments","split","setValue","templateRef","sendEvent","analyticsEventCategory","dialogRef","open","minWidth","maxWidth","style","zIndex","afterClosed","closeAll","i","SubstanceCardBaseFilteredList","selectors","ctx","SubstanceCodesModule","_","imports","CommonModule","DynamicComponentLoaderModule","MatTableModule","CdkTableModule","MatPaginatorModule","MatInputModule","MatFormFieldModule","MatSelectModule","ReactiveFormsModule","FormsModule","MatTreeModule","RouterModule","MatIconModule","ReferencesManagerModule","MatDialogModule","MatSortModule","CodeDisplayModule"],"sources":["./src/app/core/substance-details/substance-codes/codeSearchPipe.ts","./src/app/core/substance-details/substance-codes/substance-codes.component.html","./src/app/core/substance-details/substance-codes/substance-codes.component.ts","./src/app/core/substance-details/substance-codes/substance-codes.module.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'forwardSlash'\n})\nexport class forwardSlash implements PipeTransform {\n\n  transform(value: any): any {\n    value = value.replace(\"/\", \" \");\n    return value;\n  }\n\n}\n","<div class=\"flex-row\">\r\n  <span class=\"middle-fill\"></span>\r\n  <mat-form-field [floatLabel]=\"'never'\" class=\"search\">\r\n    <input matInput placeholder=\"Search\" [formControl]=\"searchControl\">\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"responsive\">\r\n  <span class=\"show-filter-span\">\r\n    <mat-label class = \"mat-button mat-button-primary\" mat-flat-button color=\"warn\" (click)=\"toggleFilter()\">{{showHideFilterText}}</mat-label>\r\n  </span>\r\n  <table [ngClass]=\"{ 'classification': type == 'Codes - Classifications' }\" mat-table [dataSource]=\"paged\" matSort (matSortChange)=\"sortData($event)\">\r\n\r\n    <ng-container matColumnDef=\"classificationTree\">\r\n      <th mat-header-cell *matHeaderCellDef> Classification Tree </th>\r\n      <td mat-cell *matCellDef=\"let code\">\r\n        <div *ngFor=\"let node of getClassificationTree(code.comments); index as i\" [ngStyle]=\"{'padding-left.px':i * 10}\">\r\n          <mat-icon svgIcon=\"subdirectory_arrow_right\" *ngIf=\"i > 0\"></mat-icon>\r\n          <a\r\n            routerLink=\"/browse-substance\"\r\n            [queryParams]='{ search: \"root_codes_comments:\\\"\" + (node | forwardSlash) + \"\\\"\"}'\r\n            [innerHTML] = \"node\">\r\n          </a>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"codeSystem\">\r\n      <th mat-header-cell *matHeaderCellDef  mat-sort-header> Code System </th>\r\n      <td mat-cell *matCellDef=\"let code\"> {{code.codeSystem | codeSystemDisplay | async}}\r\n        <span *ngIf=\"codeIsProtected(code.access)\" matTooltip=\"Not Public\">\r\n          <mat-icon svgIcon=\"lock\" class=\"icon-align blue-font\" *ngIf=\"codeIsProtected(code.access)\"></mat-icon>\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"code\">\r\n      <th mat-header-cell *matHeaderCellDef  mat-sort-header> Code </th>\r\n      <td mat-cell *matCellDef=\"let code\">\r\n        <a  class = 'a-link' *ngIf = \"code.url\" [href] = \"code.url\" target = \"_blank\">{{code.code}}</a>\r\n        <span *ngIf = \"!code.url\"> {{code.code}}</span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th mat-header-cell *matHeaderCellDef  mat-sort-header> Type </th>\r\n      <td mat-cell *matCellDef=\"let code\"> {{code.type}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"codeSystemFilter\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <div class=\"tableFilter\">\r\n          <mat-form-field>\r\n            <input matInput class=\"form-field\" [formControl]=\"codeSystemFilter\" placeholder=\"Code System Filter\">\r\n          </mat-form-field>\r\n        </div>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let code\"> {{code.codeSystem | codeSystemDisplay | async}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"codeFilter\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <div class=\"tableFilter\">\r\n          <mat-form-field>\r\n            <input matInput class=\"form-field\" [formControl]=\"codeFilter\" placeholder=\"Code Filter\">\r\n          </mat-form-field>\r\n        </div>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let code\">\r\n        <a  class = 'a-link' *ngIf = \"code.url\" [href] = \"code.url\" target = \"_blank\">{{code.code}}</a>\r\n        <span *ngIf = \"!code.url\"> {{code.code}}</span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"typeFilter\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <div class=\"tableFilter\">\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-select [formControl]=\"typeFilter\">\r\n              <mat-select-trigger>\r\n                {{typeFilter.value ? typeFilter.value : ''}}\r\n              </mat-select-trigger>\r\n              <mat-option [value]=\"\" selected>Select Type Filter</mat-option>\r\n              <mat-option *ngFor=\"let type of typeFilterOptions\" [value]=\"type.display\">{{type.display}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let code\"> {{code.type}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"comments\">\r\n      <th mat-header-cell *matHeaderCellDef  mat-sort-header> Comments  </th>\r\n      <td mat-cell *matCellDef=\"let code\">\r\n          <button class = \"mat-button mat-primary mat-raised-button\" color = \"primary\" (click)=\"openModal(commentTemplate)\"\r\n            [ngClass] = \"(!code.comments && !code.codeText) ? 'mat-button-disabled':''\"\r\n          [disabled] = \"!code.comments && !code.codeText\" >{{!code.comments && !code.codeText ? 'None' : 'View'}}</button>  \r\n          <ng-template #commentTemplate>\r\n              <h2 mat-dialog-title>Code Comments</h2>\r\n              <div mat-dialog-content>\r\n               <div class = \"form-row\" *ngIf = \"code.codeText\">\r\n                 <div class = \"label\">Comments:</div>\r\n                 <div class = \"content\">{{code.codeText}}</div>\r\n              </div>\r\n              <div class = \"form-row\" *ngIf = \"code.comments\">\r\n                  <div class = \"label\">Code Text:</div>\r\n                  <div class = \"content\">{{code.comments}}</div>\r\n               </div>\r\n               </div>\r\n              <div mat-dialog-actions>\r\n                <span class=\"middle-fill\"></span>\r\n                <button class=\"mat-raised-button mat-primary\" (click) = \"close()\" mat-dialog-close>Close</button>\r\n              </div>\r\n              \r\n            </ng-template>\r\n      </td>\r\n\r\n      \r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"references\">\r\n      <th mat-header-cell *matHeaderCellDef> References </th>\r\n      <td mat-cell *matCellDef=\"let code\">\r\n        <button class = \"mat-raised-button mat-primary\" (click)=\"openModal(refTemplate)\" \r\n        [ngClass] = \"code.references.length <= 0 ? 'mat-button-disabled':''\"\r\n        [disabled]=\"code.references.length <= 0\" >{{code.references.length <= 0 ? 'None' : 'View'}}</button>\r\n\r\n        <ng-template #refTemplate>\r\n          <h2 mat-dialog-title>References</h2>\r\n          <div mat-dialog-content>\r\n            <app-references-manager [substance] = \"substance\" [references] = \"code.references\"></app-references-manager>\r\n          </div>\r\n          <div mat-dialog-actions>\r\n            <span class=\"middle-fill\"></span>\r\n            <button class=\"mat-raised-button mat-primary\" (click) = \"close()\">Close</button>\r\n          </div>\r\n        </ng-template>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"emptyFilter\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n      </th>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"resetFilter\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <div class=\"tableFilter\">\r\n          <button class = \"mat-button mat-button-primary\" mat-flat-button color=\"warn\" (click)=\"resetFilters()\">Reset</button>\r\n        </div>\r\n      </th>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr [hidden]=\"hideFilters\" mat-header-row *matHeaderRowDef=\"displayedFilterColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>\r\n<mat-paginator [length]=\"filtered && filtered.length || 0\" [pageSize]=\"10\" showFirstLastButtons=\"true\" (page)=\"pageChange($event, analyticsEventCategory)\"\r\n  [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n</mat-paginator>\r\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport { SubstanceCardBaseFilteredList } from '../substance-card-base-filtered-list';\r\nimport {SubstanceCode, SubstanceDetail, SubstanceName, TableFilterDDModel} from '../../substance/substance.model';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\r\nimport {Subject} from 'rxjs';\r\nimport {Sort} from '@angular/material/sort';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport {UtilsService} from '@gsrs-core/utils';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-substance-codes',\r\n  templateUrl: './substance-codes.component.html',\r\n  styleUrls: ['./substance-codes.component.scss']\r\n})\r\nexport class SubstanceCodesComponent extends SubstanceCardBaseFilteredList<SubstanceCode> implements OnInit, AfterViewInit {\r\n  type: string;\r\n  codes: Array<SubstanceCode> = [];\r\n  displayedColumns: string[];\r\n  substanceUpdated = new Subject<SubstanceDetail>();\r\n  hideFilters = true;\r\n  showHideFilterText = 'Show Filter';\r\n  displayedFilterColumns: string[];\r\n  codeSystemFilter = new FormControl();\r\n  typeFilter = new FormControl();\r\n  codeFilter = new FormControl();\r\n  typeFilterOptions: Array<TableFilterDDModel> = [];\r\n  private overlayContainer: HTMLElement;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    public gaService: GoogleAnalyticsService,\r\n    private overlayContainerService: OverlayContainer,\r\n    private utilsService: UtilsService\r\n  ) {\r\n    super(gaService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.substanceUpdated.subscribe(substance => {\r\n      this.substance = substance;\r\n      this.codes = [];\r\n      if (this.substance != null && this.type != null) {\r\n        if (this.type === 'Codes - Classifications') {\r\n          this.displayedColumns = ['classificationTree', 'codeSystem', 'code', 'references'];\r\n          //this.displayedFilterColumns = ['classTreeFilter', 'codeSystemFilter', 'codeFilter', 'emptyFilter', 'resetFilter'];\r\n        } else {\r\n          this.displayedColumns = ['codeSystem', 'code', 'type', 'comments', 'references'];\r\n          this.displayedFilterColumns = ['codeSystemFilter', 'codeFilter', 'typeFilter', 'emptyFilter', 'resetFilter'];\r\n        }\r\n\r\n          this.filterSubstanceCodes();\r\n\r\n        if (this.codes != null && this.codes.length) {\r\n          this.codes.forEach(code => {\r\n            if (code.url) {\r\n              code.url = code.url.trim();\r\n            }\r\n          });\r\n          this.filtered = this.codes;\r\n          this.pageChange();\r\n\r\n          this.searchControl.valueChanges.subscribe(value => {\r\n            this.filterList(value, this.codes);\r\n          }, error => {\r\n         //   console.log(error);\r\n          });\r\n          this.getTypeFilterOptions();\r\n        } else {\r\n          this.filtered = [];\r\n        }\r\n      }\r\n    });\r\n\r\n  //  if (this.type === 'identifiers') {\r\n      this.pageSize = 10;\r\n  //  }\r\n    \r\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\r\n    this.codeSystemFilter.valueChanges.subscribe((codeSystemFilterValue) => {\r\n      this.filterTable();\r\n    });\r\n    this.codeFilter.valueChanges.subscribe((codeFilterValue) => {\r\n      this.filterTable();\r\n    });\r\n    this.typeFilter.valueChanges.subscribe((typeFilterValue) => {\r\n      this.filterTable();\r\n    });\r\n  }\r\n\r\n  filterTable(type?:string) {\r\n    const csFilter = this.codeSystemFilter.value === null ? '' : this.codeSystemFilter.value;\r\n    const cFilter = this.codeFilter.value === null ? '' : this.codeFilter.value;\r\n    const tFilter = this.typeFilter.value === null ? '' : this.typeFilter.value;\r\n    this.filtered = [];\r\n    for(let n of this.codes) {\r\n      if((n.codeSystem.toLowerCase().includes(csFilter.toLowerCase())) &&\r\n      (n.code.toLowerCase().includes(cFilter.toLowerCase())) &&\r\n      (n.type.toLowerCase().includes(tFilter.toLowerCase()))) {\r\n        this.filtered.push(n);\r\n      }\r\n    }\r\n    \r\n    this.pageChange();\r\n  }\r\n\r\n  toggleFilter() {\r\n    this.hideFilters = !this.hideFilters;\r\n    if(this.hideFilters) {\r\n      this.showHideFilterText = 'Show Filter';\r\n    } else {\r\n      this.showHideFilterText = 'Hide Filter';\r\n    }\r\n  }\r\n\r\n  getTypeFilterValue(value) {\r\n    for(let l of this.typeFilterOptions) {\r\n      if(l.display === value) {\r\n        return l;\r\n      }\r\n    }\r\n  }\r\n\r\n  getTypeFilterOptions() {\r\n    for(let n of this.codes) {\r\n        let oneType = n.type;\r\n        let value: TableFilterDDModel = {\r\n          value: oneType,\r\n          display: oneType\r\n        }\r\n        if (this.typeFilterOptions.filter(e => e.value === oneType).length > 0) {\r\n        } else {\r\n          this.typeFilterOptions.push(value);\r\n        }\r\n    }\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.codes.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.filtered = data;\r\n      this.pageChange();\r\n      return;\r\n    }\r\n    this.filtered = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      return this.utilsService.compare(a[sort.active] ? a[sort.active].toString().toUpperCase() : null, b[sort.active] ? b[sort.active].toString().toUpperCase() : null, isAsc);\r\n    });\r\n    this.pageChange();\r\n\r\n    \r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  private filterSubstanceCodes(): void {\r\n    if (this.substance.codes && this.substance.codes.length > 0) {\r\n      this.substance.codes.forEach(code => {\r\n        if (code._isClassification && this.type === 'Codes - Classifications') {\r\n          this.codes.push(code);\r\n        } else if (!code._isClassification && this.type === 'Codes - Identifiers') {\r\n          this.codes.push(code);\r\n        }\r\n      });\r\n      this.countUpdate.emit(this.codes.length);\r\n    }\r\n  }\r\n\r\n  codeIsProtected(access: string[]) {\r\n    let itIs = false;\r\n    for(let a of access) {\r\n      if(a.toLowerCase() === 'protected') {\r\n        itIs = true;\r\n      }\r\n    }\r\n    return itIs;\r\n  }\r\n\r\n  getClassificationTree(comments: string): Array<string> {\r\n    return comments.split('|');\r\n  }\r\n\r\n  resetFilters() {\r\n    this.pageChange();\r\n    this.searchControl.setValue('');\r\n    this.codeFilter.setValue('');\r\n    this.codeSystemFilter.setValue('');\r\n    this.typeFilter.setValue('');\r\n  }\r\n\r\n  openModal(templateRef) {\r\n\r\n    this.gaService.sendEvent(this.analyticsEventCategory, 'button', 'references view');\r\n\r\n    const dialogRef = this.dialog.open(templateRef, {\r\n      minWidth: '40%',\r\n      maxWidth: '90%'\r\n    });\r\n    this.overlayContainer.style.zIndex = '1002';\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.overlayContainer.style.zIndex = null;\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.dialog.closeAll();\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubstanceCodesComponent } from './substance-codes.component';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {ReferencesManagerModule} from '../../references-manager/references-manager.module';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CodeDisplayModule } from '@gsrs-core/utils/code-display.module';\r\nimport { forwardSlash } from './codeSearchPipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicComponentLoaderModule.forChild(SubstanceCodesComponent),\r\n    MatTableModule,\r\n    CdkTableModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatTreeModule,\r\n    RouterModule,\r\n    MatIconModule,\r\n    ReferencesManagerModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    CodeDisplayModule\r\n  ],\r\n  declarations: [\r\n    SubstanceCodesComponent,\r\n    forwardSlash\r\n  ],\r\n  providers: [forwardSlash]\r\n})\r\nexport class SubstanceCodesModule { }\r\n"],"sourceRoot":"webpack:///","file":"5445.8041c2ea26637b9c.js"}