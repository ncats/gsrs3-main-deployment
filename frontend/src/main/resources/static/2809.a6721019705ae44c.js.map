{"version":3,"mappings":"yeAEIA,eACAA,iBACEA,6BACEA,oBAAqCA,kGAArCA,QACFA,QACAA,6BACEA,oBAAoCA,iGAApCA,QACFA,QACAA,6BACEA,oBAAsCA,mGAAtCA,QACFA,QACAA,6BACEA,oBAAqCA,kGAArCA,QACFA,QACFA,QACEA,kBAEEA,4BAA8FA,yDAAiBC,gBAAsED,QAErLA,8BACEA,qBAAkDA,qGAAlDA,QACFA,QAEAA,4BAA+FA,yDAAiBE,iBAAwEF,QAC1LA,QAEAA,2BAEFA,+BAzByCA,+DAGDA,8DAGEA,gEAGDA,+DAK8FA,gEAG/EA,kEAGiFA,iEAGrGA,kEA3BtCA,eACEA,wBA6BAA,iBACEA,iBACEA,oCAAqDA,8DAAoBG,qBAGzEH,QACFA,QACAA,iBACEA,oCAAqDA,8DAAoBI,qBAGzEJ,QACFA,QACFA,QACFA,+BA3CQA,8EAiCsBA,yCAMAA,+DAK9BA,+BAAkCA,wDA4B5BA,2BACCA,yDAAiBK,8BAAqFL,+BAAnDA,+FA3B1DA,iBACEA,kBACEA,iBACEA,qCAAoDA,8DAAoBM,2BAGxEN,QACFA,QACFA,QAEAA,0BACAA,kBACEA,iBAEEA,+BAA+BA,wDAAcO,gBAE7CP,QAEAA,2BAAkFA,yDAAiBQ,oBAAqER,QAC1KA,QACAA,iBACEA,8BACEA,qBAA4CA,gGAA5CA,QACFA,QAEAA,4BAAoGA,yDAAiBS,wBAAiFT,QACtMA,kCAGFA,QACFA,QACAA,+BA1B4BA,uCAKUA,8BAI+BA,kDAI0DA,2DAI7EA,6DAGmGA,mEAClDA,wEA1EvGA,iBACEA,uBA6CAA,+BAEAA,wBAgCEA,4BAEJA,4BAjFQA,gEA6C4CA,8CAE5CA,mEAgCYA,gDCjEb,IAAMU,EAAb,eAAaA,EAAb,0CAUE,WACUC,EACDC,EACAC,GAAsC,6BAE7CC,gBAJQH,0CACDG,cACAA,cALDA,gBAAqC,GAQ3CA,EAAKC,uBAAyB,uEAHeD,EAbjD,uCAmBE,WAAQ,WACAE,EAAkCC,KAAKN,wCAC1CO,6BAA6BC,UAAU,YACxCC,EAAKC,oBAAsBA,EAGvBD,EAAKC,oBAAoBC,gBAC3BF,EAAKG,KAAOH,EAAKC,oBAAoBC,eAErB,UAAlBF,EAASG,MACPH,EAAKI,gBAAgBC,KAAK,oBAC1BL,EAAKM,aAAeN,EAAKC,oBAAoBM,+BACxCP,EAAKC,oBAAoBM,8BAA8BC,SAAW,GACvER,EAAKS,aAAeT,EAAKC,oBAAoBS,+BACxCV,EAAKC,oBAAoBS,8BAA8BF,SAAW,GACrER,EAAKW,WAAaX,EAAKC,oBAAoBW,iBACxCZ,EAAKC,oBAAoBW,gBAAgBJ,SAAW,MACjC,gBAAlBR,EAASG,MACfH,EAAKI,gBAAgBC,KAAK,0CAC1BL,EAAKM,aAAeN,EAAKC,oBAAoBM,+BACxCP,EAAKC,oBAAoBM,8BAA8BC,SAAW,GACvER,EAAKS,aAAeT,EAAKC,oBAAoBS,+BACxCV,EAAKC,oBAAoBS,8BAA8BF,SAAW,KAEvER,EAAKI,gBAAgBC,KAAK,uBAC1BL,EAAKW,WAAaX,EAAKC,oBAAoBW,iBACtCZ,EAAKC,oBAAoBW,gBAAgBJ,SAAW,MAG7DX,KAAKgB,cAAcC,KAAKlB,KAhD5B,6BAmDE,cAnDF,wBAsDE,SAAWmB,GACTlB,KAAKI,oBAAoBe,kBAAoBD,IAvDjD,yBA0DE,SAAYA,GACVlB,KAAKI,oBAAoBgB,mBAAqBF,IA3DlD,6BA8DE,SAAgBG,GASZrB,KAAKI,oBAAoBS,8BART,OAAdQ,EACyC,CACzCC,SAAUD,EAAUE,MACpBC,KAAMH,EAAUE,MAChBZ,QAASU,EAAUI,KACnBC,eAAgB,YAChBC,WAAYN,EAAUM,YAIkC,OAzEhE,6BA8EE,SAAgBN,GASdrB,KAAKI,oBAAoBM,8BARP,OAAdW,EACuC,CACzCC,SAAUD,EAAUE,MACpBC,KAAMH,EAAUE,MAChBZ,QAASU,EAAUI,KACnBC,eAAgB,YAChBC,WAAYN,EAAUM,YAIiC,OAzF7D,mCA6FE,SAAsBN,GAUtBrB,KAAKI,oBAAoBW,gBATT,OAAdM,EAEyC,CACzCC,SAAUD,EAAUE,MACpBC,KAAMH,EAAUE,MAChBZ,QAASU,EAAUI,KACnBC,eAAgB,YAChBC,WAAYN,EAAUM,YAImB,OAzG7C,4BA6GE,SAAeT,GACblB,KAAKI,oBAAoBwB,aAAeV,IA9G5C,gCAiHE,SAAmBA,GACjBlB,KAAKI,oBAAoByB,qBAAuBX,IAlHpD,sCAqHE,SAAyBA,GACvBlB,KAAKI,oBAAoBgB,mBAAqBF,IAtHlD,wBAyHE,SAAWY,GACT9B,KAAKI,oBAAoBE,KAAOwB,IA1HpC,yBA6HE,WACE9B,KAAKgB,cAAce,QAAQ,YACzBC,EAAaC,oBA/HnBC,GAAuEC,kDAA1D1C,GAAiDV,2DAAjDU,EAAiD2C,8sEDf9DrD,4BAAsCA,4lDCezBU,EAAb,cCmBa4C,YAAb,eAAaA,KAAbC,iFAAaD,4DAnBF,CACPE,KACAC,cAAsC/C,GACtCgD,KACAC,IACAC,KACAC,KACAC,KACAC,IACAC,IACAC,KACAC,IACAC,IACAJ,QAMST,EAAb","names":["i0","ctx_r10","ctx_r12","ctx_r13","ctx_r15","ctx_r17","ctx_r19","ctx_r21","ctx_r22","ctx_r24","SubstanceFormStructurallyDiverseOrganismComponent","substanceFormStructurallyDiverseService","gaService","cvService","o","analyticsEventCategory","structurallyDiverseSubscription","this","substanceStructurallyDiverse","subscribe","t","structurallyDiverse","$$diverseType","part","menuLabelUpdate","emit","maternalUuid","hybridSpeciesMaternalOrganism","refuuid","paternalUuid","hybridSpeciesPaternalOrganism","parentUuid","parentSubstance","subscriptions","push","event","infraSpecificType","developmentalStage","substance","refPname","_name","name","uuid","substanceClass","approvalID","partLocation","fractionMaterialType","tags","forEach","subscription","unsubscribe","i","SubstanceFormBase","selectors","SubstanceFormStructurallyDiverseOrganismModule","p","CommonModule","DynamicComponentLoaderModule","MatFormFieldModule","MatInputModule","ReactiveFormsModule","FormsModule","MatSelectModule","SubstanceFormModule","NameResolverModule","NgMultiSelectDropDownModule","SubstanceSelectorModule","MatDividerModule"],"sources":["./src/app/core/substance-form/structurally-diverse/substance-form-structurally-diverse-organism/substance-form-structurally-diverse-organism.component.html","./src/app/core/substance-form/structurally-diverse/substance-form-structurally-diverse-organism/substance-form-structurally-diverse-organism.component.ts","./src/app/core/substance-form/structurally-diverse/substance-form-structurally-diverse-organism/substance-form-structurally-diverse-organism.module.ts"],"sourcesContent":["<div class=\"organism-form-container\" *ngIf = \"structurallyDiverse\">\n  <div *ngIf = \"part === 'whole' || part === 'full_fields'\">\n    <div *ngIf = \"structurallyDiverse.sourceMaterialClass === 'ORGANISM'\">\n    <div class = 'form-row'>\n      <mat-form-field class=\"family\">\n        <input matInput placeholder=\"Family\" [(ngModel)]=\"structurallyDiverse.organismFamily\" required name=\"Family\" />\n      </mat-form-field>\n      <mat-form-field class=\"genus\">\n        <input matInput placeholder=\"Genus\" [(ngModel)]=\"structurallyDiverse.organismGenus\" required name=\"genus\" />\n      </mat-form-field>\n      <mat-form-field class=\"species\">\n        <input matInput placeholder=\"Species\" [(ngModel)]=\"structurallyDiverse.organismSpecies\" required name=\"species\" />\n      </mat-form-field>\n      <mat-form-field class=\"author\">\n        <input matInput placeholder=\"Author\" [(ngModel)]=\"structurallyDiverse.organismAuthor\" required name=\"author\" />\n      </mat-form-field>\n    </div>\n      <div class = 'form-row'>\n\n        <app-cv-input class = 'cv-field' domain = \"INFRA_SPECIFIC_TYPE\" title = \"Infra Specific Type\" (valueChange) = \"updateType($event)\" [model] = \"structurallyDiverse.infraSpecificType\"></app-cv-input>\n\n        <mat-form-field class=\"cv-field\">\n          <input matInput placeholder=\"Infra Specific Name\" [(ngModel)]=\"structurallyDiverse.infraSpecificName\" required name=\"\" />\n        </mat-form-field>\n        \n        <app-cv-input  class = 'cv-field' domain = \"DEVELOPMENTAL_STAGE\" title = \"Developmental Stage\" (valueChange) = \"updateStage($event)\" [model] = \"structurallyDiverse.developmentalStage\"></app-cv-input>\n      </div>\n\n      <mat-divider class=\"form-divider\" [inset]=\"true\" ></mat-divider>\n\n    </div>\n    <div class = 'form-row'>\n      <div class=\"flex-column related-substance\">\n        <app-substance-selector class = \"related-substance\"  (selectionUpdated)=\"paternalUpdated($event)\"\n                                eventCategory=\"substanceRelationshipRelatedSub\" placeholder=\"Hybrid Paternal Organism\" header=\"Hybrid Paternal Organism\"\n                                [subuuid]=\"paternalUuid\">\n        </app-substance-selector>\n      </div>\n      <div class=\"flex-column related-substance\">\n        <app-substance-selector class = \"related-substance\"  (selectionUpdated)=\"maternalUpdated($event)\"\n                                eventCategory=\"substanceRelationshipRelatedSub\" placeholder=\"Hybrid Maternal Organism\" header=\"Hybrid Maternal Organism\"\n                                [subuuid]=\"maternalUuid\">\n        </app-substance-selector>\n      </div>\n    </div>\n  </div>\n  <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf = \"part === 'full_fields'\" ></mat-divider>\n\n  <div *ngIf = \"part === 'fraction' || part === 'full_fields'\" class = 'form-row'>\n    <div class = 'parent'>\n      <div class = 'form-row'>\n        <app-substance-selector class = \"related-substance\" (selectionUpdated)=\"sourceMaterialUpdated($event)\"\n                                eventCategory=\"substanceRelationshipRelatedSub\" placeholder=\"Source Material Parent\" header=\"Source Material Parent\"\n                                [subuuid]=\"parentUuid\">\n        </app-substance-selector>\n      </div>\n    </div>\n\n    <mat-divider class=\"vertical-divider\" [vertical]=\"true\"></mat-divider>\n    <div class = 'details'>\n      <div class = 'form-row'>\n\n        <app-tag-selector class=\"tags\" (tagsUpdate)=\"updatePart($event)\" [tags]=\"structurallyDiverse.part\" cvDomain=\"PART\"\n                          placeholder=\"Part(s)\">\n        </app-tag-selector>\n\n        <app-cv-input class = 'cv-field' domain = \"PART_LOCATION\" title = \"Part Location\" (valueChange) = \"updateLocation($event)\" [model] = \"structurallyDiverse.partLocation\"></app-cv-input>\n      </div>\n      <div class = 'form-row'>\n        <mat-form-field class=\"fraction-name\">\n          <input matInput placeholder=\"Fraction Name\" [(ngModel)]=\"structurallyDiverse.fractionName\" name=\"Fraction Name\" />\n        </mat-form-field>\n\n        <app-cv-input class = 'cv-field' domain = \"FRACTION_MATERIAL_TYPE\" title = \"Fraction Material Type\" (valueChange) = \"updateMaterialType($event)\" [model] = \"structurallyDiverse.fractionMaterialType\"></app-cv-input>\n        <app-cv-input class = 'cv-field' domain = \"DEVELOPMENTAL_STAGE\" title = \"Developmental Stage\" *ngIf = \"part !== 'full_fields'\"\n         (valueChange) = \"updateDevelopmentalStage($event)\" [model] = \"structurallyDiverse.developmentalStage\"></app-cv-input>\n         \n      </div>\n    </div>\n    </div>\n    <app-audit-info [source] = \"structurallyDiverse\"></app-audit-info>\n\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {StructurallyDiverse} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {IDropdownSettings} from 'ng-multiselect-dropdown';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport { SubstanceFormBase } from '../../base-classes/substance-form-base';\nimport { SubstanceSummary, SubstanceRelated } from '@gsrs-core/substance/substance.model';\nimport { SubstanceFormStructurallyDiverseService } from '../substance-form-structurally-diverse.service';\n\n@Component({\n  selector: 'app-substance-form-structurally-diverse-organism',\n  templateUrl: './substance-form-structurally-diverse-organism.component.html',\n  styleUrls: ['./substance-form-structurally-diverse-organism.component.scss']\n})\nexport class SubstanceFormStructurallyDiverseOrganismComponent extends SubstanceFormBase\n  implements OnInit, AfterViewInit, OnDestroy {\n  part: string;\n  paternalUuid: string;\n  maternalUuid: string;\n  parentUuid: string;\n  structurallyDiverse: StructurallyDiverse;\n  temporaryPart: string;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private substanceFormStructurallyDiverseService: SubstanceFormStructurallyDiverseService,\n    public gaService: GoogleAnalyticsService,\n    public cvService: ControlledVocabularyService\n  ) {\n    super();\n    this.analyticsEventCategory = 'substance form structural modification structurally diverse organism';\n  }\n\n  ngOnInit() {\n    const structurallyDiverseSubscription = this.substanceFormStructurallyDiverseService\n      .substanceStructurallyDiverse.subscribe(structurallyDiverse => {\n      this.structurallyDiverse = structurallyDiverse;\n     // this.part = this.structurallyDiverse.$$diverseType;\n     // when the form submits, $$diversetype is stripped so part must be used in it's place\n      if (this.structurallyDiverse.$$diverseType) {\n        this.part = this.structurallyDiverse.$$diverseType;\n      }\n      if (this.part === 'whole') {\n        this.menuLabelUpdate.emit('Organism Details');\n        this.maternalUuid = this.structurallyDiverse.hybridSpeciesMaternalOrganism\n          && this.structurallyDiverse.hybridSpeciesMaternalOrganism.refuuid || '';\n        this.paternalUuid = this.structurallyDiverse.hybridSpeciesPaternalOrganism\n          && this.structurallyDiverse.hybridSpeciesPaternalOrganism.refuuid || '';\n          this.parentUuid = this.structurallyDiverse.parentSubstance\n          && this.structurallyDiverse.parentSubstance.refuuid || null;\n       } else if (this.part === 'full_fields') {\n        this.menuLabelUpdate.emit('Organism Details / Parts And Fractions');\n        this.maternalUuid = this.structurallyDiverse.hybridSpeciesMaternalOrganism\n          && this.structurallyDiverse.hybridSpeciesMaternalOrganism.refuuid || '';\n        this.paternalUuid = this.structurallyDiverse.hybridSpeciesPaternalOrganism\n          && this.structurallyDiverse.hybridSpeciesPaternalOrganism.refuuid || '';\n       } else {\n        this.menuLabelUpdate.emit('Parts And Fractions');\n        this.parentUuid = this.structurallyDiverse.parentSubstance\n          && this.structurallyDiverse.parentSubstance.refuuid || '';\n      }\n    });\n    this.subscriptions.push(structurallyDiverseSubscription);\n  }\n\n  ngAfterViewInit() {\n  }\n\n  updateType(event): void {\n    this.structurallyDiverse.infraSpecificType = event;\n  }\n\n  updateStage(event): void {\n    this.structurallyDiverse.developmentalStage = event;\n  }\n\n  paternalUpdated(substance: SubstanceSummary): void {\n    if (substance !== null) {\n      const relatedSubstance: SubstanceRelated = {\n        refPname: substance._name,\n        name: substance._name,\n        refuuid: substance.uuid,\n        substanceClass: 'reference',\n        approvalID: substance.approvalID\n      };\n      this.structurallyDiverse.hybridSpeciesPaternalOrganism = relatedSubstance;\n    } else {\n      this.structurallyDiverse.hybridSpeciesPaternalOrganism  = null;\n    }\n\n  }\n\n  maternalUpdated(substance: SubstanceSummary): void {\n    if (substance !== null) {\n    const relatedSubstance: SubstanceRelated = {\n      refPname: substance._name,\n      name: substance._name,\n      refuuid: substance.uuid,\n      substanceClass: 'reference',\n      approvalID: substance.approvalID\n    };\n    this.structurallyDiverse.hybridSpeciesMaternalOrganism = relatedSubstance;\n  } else {\n    this.structurallyDiverse.hybridSpeciesMaternalOrganism = null;\n  }\n  }\n\n  sourceMaterialUpdated(substance: SubstanceSummary): void {\nif (substance !== null) {\n\n  const relatedSubstance: SubstanceRelated = {\n    refPname: substance._name,\n    name: substance._name,\n    refuuid: substance.uuid,\n    substanceClass: 'reference',\n    approvalID: substance.approvalID\n  };\n  this.structurallyDiverse.parentSubstance = relatedSubstance;\n} else {\n  this.structurallyDiverse.parentSubstance = null;\n}\n  }\n\n  updateLocation(event): void {\n    this.structurallyDiverse.partLocation = event;\n  }\n\n  updateMaterialType(event): void {\n    this.structurallyDiverse.fractionMaterialType = event;\n  }\n\n  updateDevelopmentalStage(event): void {\n    this.structurallyDiverse.developmentalStage = event;\n  }\n\n  updatePart(tags:  Array<string>): void {\n    this.structurallyDiverse.part = tags;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\nimport {SubstanceFormModule} from '@gsrs-core/substance-form/substance-form.module';\nimport {NameResolverModule} from '@gsrs-core/name-resolver/name-resolver.module';\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\nimport {SubstanceFormStructurallyDiverseOrganismComponent} from '@gsrs-core/substance-form/structurally-diverse/substance-form-structurally-diverse-organism/substance-form-structurally-diverse-organism.component';\nimport {SubstanceSelectorModule} from '@gsrs-core/substance-selector/substance-selector.module';\nimport {MatDividerModule} from '@angular/material/divider';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormStructurallyDiverseOrganismComponent),\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSelectModule,\n    SubstanceFormModule,\n    NameResolverModule,\n    NgMultiSelectDropDownModule,\n    SubstanceSelectorModule,\n    MatDividerModule,\n    SubstanceFormModule\n  ],\n  declarations: [\n    SubstanceFormStructurallyDiverseOrganismComponent\n  ]\n})\nexport class SubstanceFormStructurallyDiverseOrganismModule { }\n"],"sourceRoot":"webpack:///","file":"2809.a6721019705ae44c.js"}