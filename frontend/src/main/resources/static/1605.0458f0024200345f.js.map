{"version":3,"mappings":"qZAgBaA,EAAb,eAAaA,EAAb,0CAOE,WACUC,EACDC,EACAC,GAAsC,6BAE7CC,gBAJQH,uBACDG,cACAA,cALDA,gBAAqC,GAQ3CA,EAAKC,uBAAyB,iCAHeD,EAVjD,uCAgBE,WAAQ,WACNE,KAAKC,gBAAgBC,KAAK,mBAC1B,IAAMC,EAAwBH,KAAKL,qBAAqBS,UAAUC,UAAU,YACjD,MAArBD,EAAUE,UACZF,EAAUE,QAAU,CAClBC,OAAQ,KAGZC,EAAKF,QAAUF,EAAUE,QACzBE,EAAKC,OAASL,EAAUE,QAAQI,gBAChCF,EAAKG,qBAAuBH,EAAKF,QAAQI,iBAAmBF,EAAKF,QAAQI,gBAAgBE,SAAW,GACpGJ,EAAKb,qBAAqBkB,eAE5Bb,KAAKc,cAAcC,KAAKZ,KA7B5B,6BAgCE,cAhCF,yBAmCE,WACEH,KAAKc,cAAcE,QAAQ,YACzBC,EAAaC,kBArCnB,0BAyCE,SAAaX,GACXP,KAAKM,QAAQC,OAASA,IA1C1B,oCA6CE,SAAuBH,GAErB,GAAkB,OAAdA,EAAoB,CACtB,IAAMe,EAAqC,CACzCC,SAAUhB,EAAUiB,MACpBC,KAAMlB,EAAUiB,MAChBT,QAASR,EAAUmB,KACnBC,eAAgB,YAChBC,WAAYrB,EAAUqB,YAExBzB,KAAKM,QAAQI,gBAAkBS,EAC/BnB,KAAKW,qBAAuBQ,GAAoBA,EAAiBP,SAAW,QAE5EZ,KAAKM,QAAQI,gBAAkB,KAC/BV,KAAKW,qBAAuB,SA3DlCe,GAA2DC,kDAA9CjC,GAAoCkC,2DAApClC,EAAoCmC,2WChBjDD,iBACEA,iBACEA,oCAAwBA,4CAAoBE,8BAG5CF,QACFA,QAGFA,QACAA,iBACEA,4BACFA,eAR4BA,iDAOVA,4UDKLlC,EAAb,cEeaqC,YAAb,eAAaA,KAAbC,iFAAaD,4DAjBF,CACPE,KACAC,cAAsCxC,GACtCyC,KACAC,IACAC,KACAC,KACAC,KACAC,IACAC,IACAC,KACAC,QAMSZ,EAAb","names":["SubstanceFormMixtureDetailsComponent","substanceFormService","gaService","cvService","a","analyticsEventCategory","this","menuLabelUpdate","emit","substanceSubscription","substance","subscribe","mixture","access","n","parent","parentSubstance","relatedSubstanceUuid","refuuid","resetState","subscriptions","push","forEach","subscription","unsubscribe","relatedSubstance","refPname","_name","name","uuid","substanceClass","approvalID","i","SubstanceFormBase","i0","selectors","ctx","SubstanceFormMixtureDetailsModule","m","CommonModule","DynamicComponentLoaderModule","MatFormFieldModule","MatInputModule","ReactiveFormsModule","FormsModule","MatSelectModule","SubstanceFormModule","NameResolverModule","NgMultiSelectDropDownModule","SubstanceSelectorModule"],"sources":["./src/app/core/substance-form/mixture-details/substance-form-mixture-details.component.ts","./src/app/core/substance-form/mixture-details/substance-form-mixture-details.component.html","./src/app/core/substance-form/mixture-details/substance-form-mixture-details.module.ts"],"sourcesContent":["import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {SubstanceCardBaseFilteredList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {Mixture, SubstanceRelated, SubstanceSummary} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {IDropdownSettings} from 'ng-multiselect-dropdown';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\n\n@Component({\n  selector: 'app-substance-form-mixture-details',\n  templateUrl: './substance-form-mixture-details.component.html',\n  styleUrls: ['./substance-form-mixture-details.component.scss']\n})\n// eslint-disable-next-line max-len\nexport class SubstanceFormMixtureDetailsComponent  extends SubstanceFormBase implements OnInit, AfterViewInit, OnDestroy {\n\n  parent: SubstanceRelated;\n  relatedSubstanceUuid: string;\n  mixture: Mixture;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private substanceFormService: SubstanceFormService,\n    public gaService: GoogleAnalyticsService,\n    public cvService: ControlledVocabularyService\n  ) {\n    super();\n    this.analyticsEventCategory = 'substance form Mixture Details';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Mixture Details');\n    const substanceSubscription = this.substanceFormService.substance.subscribe(substance => {\n      if (substance.mixture == null) {\n        substance.mixture = {\n          access: []\n        };\n      }\n      this.mixture = substance.mixture;\n      this.parent = substance.mixture.parentSubstance;\n      this.relatedSubstanceUuid = this.mixture.parentSubstance && this.mixture.parentSubstance.refuuid || '';\n      this.substanceFormService.resetState();\n    });\n    this.subscriptions.push(substanceSubscription);\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.mixture.access = access;\n  }\n\n  parentSubstanceUpdated(substance: SubstanceSummary): void {\n\n    if (substance !== null) {\n      const relatedSubstance: SubstanceRelated = {\n        refPname: substance._name,\n        name: substance._name,\n        refuuid: substance.uuid,\n        substanceClass: 'reference',\n        approvalID: substance.approvalID\n      };\n      this.mixture.parentSubstance = relatedSubstance;\n      this.relatedSubstanceUuid = relatedSubstance && relatedSubstance.refuuid || '';\n    } else {\n      this.mixture.parentSubstance = null;\n      this.relatedSubstanceUuid = null;\n    }\n  }\n\n}\n","<div class = \"mixture-details-container\">\n  <div class=\"flex-column related-substance\">\n    <app-substance-selector (selectionUpdated)=\"parentSubstanceUpdated($event)\"\n                            eventCategory=\"substanceRelationshipRelatedSub\" placeholder=\"Parent Substance\" header=\"Parent Substance\"\n                            [subuuid]=\"relatedSubstanceUuid\">\n    </app-substance-selector>\n  </div>\n <!-- <app-access-manager (accessOut)=\"updateAccess($event)\" [access]=\"mixture.access\">\n  </app-access-manager>-->\n</div>\n<div class = \"form-row\">\n  <app-audit-info [source] = \"mixture\"></app-audit-info>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DynamicComponentLoaderModule} from '@gsrs-core/dynamic-component-loader';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\nimport {SubstanceFormModule} from '@gsrs-core/substance-form/substance-form.module';\nimport {NameResolverModule} from '@gsrs-core/name-resolver/name-resolver.module';\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\nimport {SubstanceFormMixtureDetailsComponent} from '@gsrs-core/substance-form/mixture-details/substance-form-mixture-details.component';\nimport {SubstanceSelectorModule} from '@gsrs-core/substance-selector/substance-selector.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormMixtureDetailsComponent),\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSelectModule,\n    SubstanceFormModule,\n    NameResolverModule,\n    NgMultiSelectDropDownModule,\n    SubstanceSelectorModule\n  ],\n  declarations: [\n    SubstanceFormMixtureDetailsComponent\n  ]\n})\nexport class SubstanceFormMixtureDetailsModule { }\n"],"sourceRoot":"webpack:///","file":"1605.0458f0024200345f.js"}