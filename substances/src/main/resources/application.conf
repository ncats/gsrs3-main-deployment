include "substances-core.conf"
include "substances-env.conf"
include "substances-env-db.conf"
include "substances-import.conf"

##################################################################
# MAIN CONFIGURATION                                            ##
##################################################################

spring.application.name="substances"

gsrs.serviceinfo.api.endpoints.entities = ["substances", "vocabularies"]

# The default assumes single Tomcat where the context path is "/" + the service name
# In embedded Tomcat you'll probably override with using env value "/"
# as we do by default in the *-env.conf files
server.servlet.context-path="/"${spring.application.name}
server.servlet.context-path=${?MS_SERVLET_CONTEXT_PATH_SUBSTANCES}

ix.home=${spring.application.name}".ix"
ix.home=${?IX_HOME}

application.host="http://localhost:8080"
application.host=${?APPLICATION_HOST}

# Server port is used in embedded Tomcat
server.port=""
server.port=${?MS_SERVER_PORT_SUBSTANCES}

# Secure session off for dev, but if using HTTPS it's better to have it on
gsrs.sessions.sessionSecure=false
gsrs.sessions.sessionSecure=${?GSRS_SESSIONS_SESSION_SECURE}

gsrs.substances.molwitch.enabled=true


# PUT YOUR SOME SERVICE SPECIFIC ADDITIONS HERE

debug=false
debug=${?DEBUG_SUBSTANCES}

spring.main.allow-bean-definition-overriding=true

# export path
ix.ginas.export.path=./exports
ix.ginas.export.path=${?MS_EXPORT_PATH_SUBSTANCES}

# download path
admin.panel.download.path=${?MS_ADMIN_PANEL_DOWNLOAD_PATH_SUBSTANCES}

gsrs.substance.structures.saltFilePath=${?MS_SALT_PATH_SUBSTANCES}

# maximum file upload size
spring.servlet.multipart.max-file-size=512MB
spring.servlet.multipart.max-request-size=512MB

# For jchem3
# ix.structure-hasher = "ix.core.chem.LychiStructureHasher"
# ix.structure-standardizer = "ix.core.chem.LychiStandardizer"

# For CDK
ix.structure-hasher = "ix.core.chem.InchiStructureHasher"
ix.structure-standardizer = "ix.core.chem.InchiStandardizer"

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################
# turn off rabbit mq check for now since we don't use it otherwise it will say we are down
management.health.rabbit.enabled: false

management.endpoints.web.base-path="/service-info/api/v1/"${spring.application.name}"/actuator"
management.endpoints.web.exposure.include=${?MS_ACTUATOR_EXPOSE_ENDPOINTS_SUBSTANCES}
management.endpoint.health.show-details="NEVER"
management.endpoint.health.show-details=${?MS_ACTUATOR_SHOW_HEALTH_DETAILS}
management.endpoint.health.show-details=${?MS_ACTUATOR_SHOW_HEALTH_DETAILS_SUBSTANCES}

##################################################################
# GSRS CONFIGURATION REPORTS                                    ##
##################################################################

# See document 'How configuration works' for discussion of security implications.
# If in doubt, you probably want false (default) for all optons in production or even online development instances
gsrs.extensions.config.report.api.enabled=${?EXTENSIONS_CONFIG_REPORT_API_ENABLED}
gsrs.services.config.properties.report.api.enabled=${?CONFIG_PROPERTIES_REPORT_API_ENABLED}
gsrs.services.config.properties.report.log.enabled=${?CONFIG_PROPERTIES_REPORT_LOG_ENABLED}


##################################################################
# ENDPOINTS CONFIGURATION                                       ##
##################################################################
include "entity-service-info-endpoints.conf"
include "basic-service-info-endpoints.conf"
gsrs.serviceinfo.api.endpoints.entities = ["substances", "vocabularies"]


##################################################################
# EUREKA SETTINGS                                               ##
##################################################################

eureka.instance.hostname=${spring.application.name}
eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}

eureka.client.enabled=false
eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
ribbon.eureka.enabled=false
ribbon.eureka.enabled=${?RIBBON_EUREKA_ENABLED}

eureka.instance.statusPageUrl="${application.host}/ginas/app${management.endpoints.web.base-path}/health"
eureka.instance.statusPageUrl=${?EUREKA_STATUS_PAGE_URL_SUBSTANCES}
eureka.instance.healthCheckUrl="${application.host}/ginas/app${management.endpoints.web.base-path}/health"
eureka.instance.healthCheckUrl=${?EUREKA_HEALTH_CHECK_URL_SUBSTANCES}


##################################################################
# DATABASE CONNECTION                                           ##
##################################################################

ix.h2 {
	base = ./${ix.home}/h2
}

spring.datasource.url="jdbc:h2:"${ix.h2.base}"/sprinxight;AUTO_SERVER=TRUE"
spring.datasource.url=${?DB_URL_SUBSTANCES}
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.driverClassName=${?DB_DRIVER_CLASS_NAME}
spring.datasource.driverClassName=${?DB_DRIVER_CLASS_NAME_SUBSTANCES}
spring.datasource.username=${?DB_USERNAME}
spring.datasource.username=${?DB_USERNAME_SUBSTANCES}
spring.datasource.password=${?DB_PASSWORD}
spring.datasource.password=${?DB_PASSWORD_SUBSTANCES}
spring.datasource.connectionTimeout=120000
spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT_SUBSTANCES}
spring.datasource.maximumPoolSize=50
spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE_SUBSTANCES}
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.database-platform=${?DB_DIALECT}
spring.jpa.database-platform=${?DB_DIALECT_SUBSTANCES}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
spring.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO_SUBSTANCES}
spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
spring.hibernate.show-sql=false

##################################################################
# API SETTINGS                                                  ##
##################################################################

substanceAPI.BaseUrl="http://localhost:8080/"
substanceAPI.BaseUrl=${?API_URL}

gsrs.microservice.applications.api.baseURL=${substanceAPI.BaseUrl}"applications"
gsrs.microservice.applications.api.baseURL=${?API_BASE_URL_APPLICATIONS}

gsrs.microservice.clinicaltrialsus.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
gsrs.microservice.clinicaltrialsus.api.baseURL=${?API_BASE_URL_CLINICAL_TRIALS}
gsrs.microservice.clinicaltrialsus.api.baseURL=${?API_BASE_URL_CLINICAL_TRIALS_US}

gsrs.microservice.clinicaltrialseurope.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
gsrs.microservice.clinicaltrialseurope.api.baseURL=${?API_BASE_URL_CLINICAL_TRIALS}
gsrs.microservice.clinicaltrialseurope.api.baseURL=${?API_BASE_URL_CLINICAL_TRIALS_EUROPE}

gsrs.microservice.products.api.baseURL=${substanceAPI.BaseUrl}"products"
gsrs.microservice.products.api.baseURL=${?API_BASE_URL_PRODUCTS}

gsrs.microservice.applications.api.headers= {
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME},
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME_APPLICATIONS}
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY},
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY_APPLICATIONS}
}

gsrs.microservice.clinicaltrialsus.api.headers= {
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME},
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME_CLINICAL_TRIALS}
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME_CLINICAL_TRIALS_US}
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY},
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY_CLINICAL_TRIALS}
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY_CLINICAL_TRIALS_US}
}
gsrs.microservice.clinicaltrialseurope.api.headers= {
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME},
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME_CLINICAL_TRIALS}
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME_CLINICAL_TRIALS_EUROPE}
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY},
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY_CLINICAL_TRIALS}
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY_CLINICAL_TRIALS_EUROPE}
}

gsrs.microservice.products.api.headers= {
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME},
	"auth-username" = ${?MS_API_HEADERS_AUTH_USERNAME_PRODUCTS}
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY},
	"auth-key"=${?MS_API_HEADERS_AUTH_KEY_PRODUCTS}
}

gsrs.loopback.port=8080
gsrs.loopback.port=${?APPLICATION_HOST_PORT}
gsrs.loopback.port=${?MS_LOOPBACK_PORT_SUBSTANCES}

gsrs.application.ivm.search.max.fetch = "20000"
gsrs.product.ivm.search.max.fetch = "20000"
gsrs.clinicaltrial.ivm.search.max.fetch = "20000"

##################################################################
# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
##################################################################

ix.ginas.approvalIdGenerator.generatorClass="ix.ginas.utils.UNIIGenerator"
ix.ginas.approvalIdGenerator.generatorClass=${?APPROVALID_GENERATOR}
ix.ginas.approvalIdGenerator.parameters.name=${?APPROVALID_NAME}
ix.ginas.approvalIdGenerator.parameters.codeSystem=${?APPROVALID_CODESYSTEM}


# indexers

# These "cross indexers" make calls to other non-substance services.
# If using the public release gsrs3-main-deployment, first edit the 
# substances/pom.xml file and uncomment the gsrs-fda-substance-extension 
# dependency.
# Use substances-env.conf/environment variables to assure that disabled=false
# Also make sure they are not disabled at the bottom of this file (set to null). 
# Comment-out those lines as needed.

gsrs.indexers.list.SubstanceApplicationIndexValueMaker =
{
   "indexer" = "fda.gsrs.substance.indexers.SubstanceApplicationIndexValueMaker",
   "order" = 5000,
   "disabled" = true
   "disabled" = ${?MS_DISABLE_CROSS_INDEX_APPLICATIONS_SUBSTANCES}
}
gsrs.indexers.list.SubstanceProductIndexValueMaker =
{
  "indexer" = "fda.gsrs.substance.indexers.SubstanceProductIndexValueMaker",
  "order" = 5100,
  "disabled" = true
  "disabled" = ${?MS_DISABLE_CROSS_INDEX_PRODUCTS_SUBSTANCES}
}

gsrs.indexers.list.SubstanceClinicalUSTrialIndexValueMaker =
{
   "indexer" = "fda.gsrs.substance.indexers.SubstanceClinicalUSTrialIndexValueMaker",
   "order" = 5200,
   "disabled" = true
   "disabled" = ${?MS_DISABLE_CROSS_INDEX_CLINICAL_TRIALS_US_SUBSTANCES}
}
gsrs.indexers.list.SubstanceClinicalEuropeTrialIndexValueMaker =
{
   "indexer" = "fda.gsrs.substance.indexers.SubstanceClinicalEuropeTrialIndexValueMaker",
   "order" = 5300,
   "disabled" = true
   "disabled" = ${?MS_DISABLE_CROSS_INDEX_CLINICAL_TRIALS_EUROPE_SUBSTANCES}
}

# exporters

# These "fda extension exporters" may be enabled.
# If using the public release gsrs3-main-deployment, first edit the 
# substances/pom.xml file and uncomment the gsrs-fda-substance-extension 
# dependency.
# Use substances-env.conf/environment variables to assure that disabled=false
# Also make sure they are not disabled at the bottom of this file (set to null). 
# Comment-out those lines as needed.

ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedApplicationsExporterFactory =
    {
        "exporterFactoryClass" : "fda.gsrs.substance.exporters.ExcelSubstanceRelatedApplicationsExporterFactory",
        "order" = 5300,
        "disabled" = true
        "disabled" = ${?MS_DISABLE_EXCEL_SUBSTANCE_RELATED_APPLICATIONS_EXPORTER_FACTORY}
    }

ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedProductsExporterFactory =
    {
        "exporterFactoryClass" : "fda.gsrs.substance.exporters.ExcelSubstanceRelatedProductsExporterFactory",
        "order" = 5400,
        "disabled" = true
        "disabled" = ${?MS_DISABLE_EXCEL_SUBSTANCE_RELATED_PRODUCTS_EXPORTER_FACTORY}

    }

ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedClinicalTrialsUSExporterFactory =
    {
        "exporterFactoryClass" : "fda.gsrs.substance.exporters.ExcelSubstanceRelatedClinicalTrialsUSExporterFactory",
        "order" = 5600,
        "disabled" = true
        "disabled" = ${?MS_DISABLE_EXCEL_SUBSTANCE_RELATED_CLINICAL_TRIALS_US_EXPORTER_FACTORY}
    }

ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedClinicalTrialsEuropeExporterFactory =
    {
        "exporterFactoryClass" : "fda.gsrs.substance.exporters.ExcelSubstanceRelatedClinicalTrialsEuropeExporterFactory",
        "order" = 5700,
        "disabled" = true
        "disabled" = ${?MS_DISABLE_EXCEL_SUBSTANCE_RELATED_CLINICAL_TRIALS_EUROPE_EXPORTER_FACTORY}
    }


# special adjustments when not using gsrs-fda-substance-extension

# If you remove these lines and you DON'T gsrs-fda-substance-extension as a dependency you will get errors.
# Remove or comment-out these lines as needed if you use gsrs-fda-substance-extension as a dependency
# These lines turn off any configuration for these items that may be included above in this file or in upstream modules.
gsrs.indexers.list.SubstanceApplicationIndexValueMaker = null
gsrs.indexers.list.SubstanceProductIndexValueMaker = null
gsrs.indexers.list.SubstanceClinicalUSTrialIndexValueMaker = null
gsrs.indexers.list.SubstanceClinicalEuropeTrialIndexValueMaker = null
ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedApplicationsExporterFactory = null
ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedProductsExporterFactory = null
ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedClinicalTrialsUSExporterFactory = null
ix.ginas.export.exporterfactories.substances.list.ExcelSubstanceRelatedClinicalTrialsEuropeExporterFactory = null
ix.ginas.export.exporterfactories.substances.list.FDANameExporterFactory=null
ix.ginas.export.exporterfactories.substances.list.FDACodeExporterFactory=null
ix.ginas.export.exporterfactories.substances.list.SRSLegacyDictionaryExporterFactory=null
ix.ginas.export.exporterfactories.substances.list.SPLValidatorXMLExporterFactory=null

##################################################################
# LEGACY AUTHENTICATION                                         ##
##################################################################

ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}
ix.authentication.logheaders = ${?AUTH_LOG_HEADERS}

##################################################################
# CUSTOM CONFIGURATION                                          ##
##################################################################



include "conf/substances.conf"
include "substances.conf"
