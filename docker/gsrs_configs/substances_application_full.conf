include "substances-core.conf"

application.host="http://localhost:8080"
ix.home="ginas.ix"

spring.application.name="substances"

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################
# turn off rabbit mq check for now since we don't use it otherwise it will say we are down
management.health.rabbit.enabled: false

server.port=8080
ix.ginas.approvalIdGenerator.generatorClass="ix.ginas.utils.UNIIGenerator"

# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
#debug=true
spring.main.allow-bean-definition-overriding=true

#this is how HOCON does default values
#eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"
eureka.client.enabled=false

ix.h2 {
        base = ./${ix.home}/h2
      }
spring.datasource.url="jdbc:h2:"${ix.h2.base}"/sprinxight;AUTO_SERVER=TRUE"
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.connectionTimeout=120000
spring.datasource.maximumPoolSize=50
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# NEED THIS for Applications-api, Products-api and ClinicalTrialsUS/Europe-Api
gsrs.microservice.applications.api.baseURL="http://localhost:8080/"
gsrs.microservice.products.api.baseURL="http://localhost:8080/"
gsrs.microservice.clinicaltrialsus.api.baseURL="http://localhost:8080/"
gsrs.microservice.clinicaltrialseurope.api.baseURL="http://localhost:8080/"


# Secure session off for dev, but if using HTTPS it's better to have it on
gsrs.sessions.sessionSecure=false

# This is configured in substance-core.conf; modify if needed here.
# Standardize Names in accordance with FDA rules
# Uncomment to add name standardization functionality
# gsrs.validators.substances += {
#         "validatorClass" = "ix.ginas.utils.validation.validators.StandardNameValidator",
#         "newObjClass" = "ix.ginas.models.v1.Substance",
#         "configClass" = "SubstanceValidatorConfig",
#         "parameters"= {
#            "inPlaceNameStandardizerClass":"gsrs.module.substance.standardizer.FDAMinimumNameStandardizer",
#            "fullNameStandardizerClass":"gsrs.module.substance.standardizer.FDAFullNameStandardizer",
#            "behaviorOnInvalidStdName": "error"
#         }
# }

ix.ginas.export.settingsPresets.substances= {
   "PUBLIC_DATA_ONLY": {
   	"owner":"admin",
   	"scrubberSettings": {
   		"removeAllLocked":true
   	}
   },
  "ALL_DATA": {
    "owner":"admin",
   	"scrubberSettings":null
   }
}

gsrs.importAdapterFactories.substances =
	[
		{

			"adapterName": "SDF Adapter",
			"importAdapterFactoryClass": "gsrs.module.substance.importers.SDFImportAdapterFactory",
			"stagingAreaServiceClass": "gsrs.stagingarea.service.DefaultStagingAreaService",
			"entityServiceClass" :"gsrs.dataexchange.SubstanceStagingAreaEntityService",
			"description" : "SD file importer for general users",
			"supportedFileExtensions": [
				"sdf",
				"sd",
				"sdfile"
			],

			"parameters": {
			#the things used to instantiate a thing used to do the import

				"fileImportActions": [
				##list of available actions for user to select from
				#each action takes in a file record + a substance record to update substance record with data from file
				{
						"actionClass": "gsrs.module.substance.importers.importActionFactories.NameExtractorActionFactory",
						"fields": [
							{
								"fieldName": "Name",
								"fieldLabel": "Substance Name",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							},
							{
								"fieldName": "nameType",
								"fieldLabel": "Name Type",
								"defaultValue": "cn",
								"cv": "name_type",
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							},
							{
								"fieldName": "displayName",
								"fieldLabel": "Display Name?",
								"defaultValue": false,
								"fieldType": "java.lang.Boolean",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							}
						],
						"parameters": {
							"lang": "en"
						},
						"actionName": "common_name",
						"label":"Create Name"
					},
					{
						"actionName": "code_import",
						"label":"Create Code",
						"actionClass": "gsrs.module.substance.importers.importActionFactories.CodeExtractorActionFactory",
						"fields": [
							{
								"fieldName": "code",
								"fieldLabel": "Code/Identifier",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							},
							{
								"fieldName": "codeType",
								"fieldLabel": "Primary or Alternative",
								"defaultValue": "PRIMARY",
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							},
							{
								"fieldName": "codeSystem",
								"fieldLabel": "Code System",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							}
						],
						"parameters": {
						}
					},
					{
						"actionClass": "gsrs.module.substance.importers.importActionFactories.NSRSCustomCodeExtractorActionFactory",
						"fields": [
							{
								"fieldName": "code",
								"fieldLabel": "NSC Number",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							},
							{
								"fieldName": "codeType",
								"fieldLabel": "Primary or Alternative",
								"defaultValue": "PRIMARY",
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							}
						],
						"parameters": {
							"codeSystem": "NSC"
						},
						"actionName": "nci_import",
						"label":"Create NSC Code"
					},
					{
						"actionClass": "gsrs.module.substance.importers.importActionFactories.StructureExtractorActionFactory",
						"fields": [
							{
								"fieldName": "molfile",
								"fieldLabel": "Structure",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							}
						],
						"parameters": {

						},
						"actionName": "structure_and_moieties",
						"label":"Create Structure"
					},
					{
						"actionClass": "gsrs.module.substance.importers.importActionFactories.PropertyExtractorActionFactory",
						"fields": [
							{
								"fieldName": "name",
								"fieldLabel": "Name",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							},
							{
								"fieldName": "propertyType",
								"fieldLabel": "Property Type",
								"defaultValue": "chemical",
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							},
							{
								"fieldName": "valueAverage",
								"fieldLabel": "Average Value",
								"defaultValue": null,
								"fieldType": "java.lang.Double",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							},
							{
								"fieldName": "valueNonNumeric",
								"fieldLabel": "Non-numeric Value",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							},
							{
								"fieldName": "valueUnits",
								"fieldLabel": "Units",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							}
						],
						"parameters": {
						},
						"actionName": "property_import",
						"label":"Create Chemical Property"
					},
					{
						"actionClass": "gsrs.module.substance.importers.importActionFactories.ReferenceExtractorActionFactory",
						"fields": [
							{
								"fieldName": "docType",
								"fieldLabel": "Type",
								"defaultValue": "OTHER",
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							},
							{
								"fieldName": "citation",
								"fieldLabel": "Reference",
								"defaultValue": "{INSERT REFERENCE CITATION HERE}",
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": false,
								"lookupKey": null
							}
						],
						"parameters": {

						},
						"actionName": "public_reference",
						"label":"Create Reference"
					},
					{
						"actionClass": "gsrs.module.substance.importers.importActionFactories.NotesExtractorActionFactory",
						"fields": [
							{
								"fieldName": "note",
								"fieldLabel": "Note",
								"defaultValue": null,
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"required": true,
								"lookupKey": null
							}
						],
						"parameters": {
						},
						"actionName": "note_import",
						"label":"Create Note"
					},
					{
						"actionClass": "gsrs.module.substance.importers.importActionFactories.NoOpActionFactory",
						"fields": [
						{
								"fieldName": "fieldName",
								"fieldLabel": "Field to ignore",
								"fieldType": "java.lang.String",
								"expectedToChange": true,
								"lookupKey": null
							}
						],
						"parameters": {
						},
						"actionName": "no-op",
						"label":"Omit this field"
					}
				]
			}
		},
		{
			"adapterName": "GSRS JSON Adapter",
			"importAdapterFactoryClass": "gsrs.module.substance.importers.GSRSJSONImportAdapterFactory",
			"stagingAreaServiceClass": "gsrs.stagingarea.service.DefaultStagingAreaService",
			"entityServiceClass" :"gsrs.dataexchange.SubstanceStagingAreaEntityService",
			"description" : "GSRS legacy JSON file importer",
			#extensions belong here because they can override the default set within the class
			"supportedFileExtensions": [
				"gsrs",
				"gz"
			],
			"parameters": {
			}
		}
	]

## Add after StandardNameValidator
# gsrs.validators.substances += {
#         "validatorClass" = "ix.ginas.utils.validation.validators.StandardNameDuplicateValidator",
#         "newObjClass" = "ix.ginas.models.v1.Substance",
#          "parameters"= {
#              "checkDuplicateInOtherRecord" = true,
#              "checkDuplicateInSameRecord" = true,
#              "onDuplicateInOtherRecordShowError" = true,
#              "onDuplicateInSameRecordShowError" = false
#          }
# }

# Manage tags/bracketed terms in names per FDA configuration.
# In FDA's case:
# No automatic addition in tags found in names to explicit tag list.
# No automatic deletion of explicit tags missing from bracketed terms.
# Warnings off for bracket name missing from tags; warning on for explicit tag missing from names.
# gsrs.validators.substances += {
#    "validatorClass" = "ix.ginas.utils.validation.validators.tags.TagsValidator",
#    "newObjClass" = "ix.ginas.models.v1.Substance",
#    "parameters" = {
#        "checkExplicitTagsExtractedFromNames": false,
#        "checkExplicitTagsMissingFromNames": true,
#        "addExplicitTagsExtractedFromNamesOnCreate": false,
#        "addExplicitTagsExtractedFromNamesOnUpdate": false,
#        "removeExplicitTagsMissingFromNamesOnCreate": false,
#        "removeExplicitTagsMissingFromNamesOnUpdate": false
#    }
# }

gsrs.defaultStagingAreaServiceClass.substances = gsrs.stagingarea.service.DefaultStagingAreaService
gsrs.defaultStagingAreaEntityService.substances = gsrs.dataexchange.SubstanceStagingAreaEntityService
gsrs.availableProcessActions.substances = ["gsrs.dataexchange.processingactions.CreateProcessingAction",
	"gsrs.dataexchange.processingactions.MergeProcessingAction",
	"gsrs.dataexchange.processingactions.RejectProcessingAction",
	"gsrs.dataexchange.processingactions.CreateBatchProcessingAction",
	"gsrs.dataexchange.processingactions.ScrubProcessingAction"]

gsrs.matchableCalculators.substances =
[
    {"matchableCalculationClass" : "gsrs.dataexchange.extractors.CASNumberMatchableExtractor",
        "config" :{
            "casCodeSystems": ["CAS", "CASNo", "CASNumber"]
        }
    },
    {"matchableCalculationClass" : "gsrs.dataexchange.extractors.AllNamesMatchableExtractor","config" :{}},
    {"matchableCalculationClass" : "gsrs.dataexchange.extractors.ApprovalIdMatchableExtractor","config" :{}},
    {"matchableCalculationClass" : "gsrs.dataexchange.extractors.DefinitionalHashMatchableExtractor","config" :{}},
    {"matchableCalculationClass" : "gsrs.dataexchange.extractors.SelectedCodesMatchableExtractor",
        "config" :
        {
            "codeSystems" :["CAS", "ChemBL", "NCI", "NSC", "EINECS"]
        }
    },
    {"matchableCalculationClass" : "gsrs.dataexchange.extractors.UUIDMatchableExtractor","config" :{}},
    {"matchableCalculationClass" : "gsrs.dataexchange.extractors.CodeMatchableExtractor",
        "config" :{
            "reqCodeSystems": ["FDA UNII"],
            "codeType": "PRIMARY",
            "codeKey": "CODE"
        }
    }
]

gsrs.uuidCodeSystem.substances="UUID Code"
gsrs.approvalIdCodeSystem.substances="FDA UNII"

gsrs.application.ivm.search.max.fetch = "20000"
gsrs.product.ivm.search.max.fetch = "20000"
gsrs.clinicaltrial.ivm.search.max.fetch = "20000"

gsrs.entityProcessors+={
        "entityClassName": ix.ginas.models.v1.Substance,
        "processor": "gsrs.dataexchange.processors.CalculateMatchablesProcessor",
        "with":{
		}
   	}

ix.ginas.export.path=/u01/tomcat/gsrs_exports
# SSO HTTP proxy authentication settings
ix.authentication.trustheader=true
ix.authentication.usernameheader="OAM_REMOTE_USER"
ix.authentication.useremailheader="AUTHENTICATION_HEADER_NAME_EMAIL"
ix.authentication.logheaders=true

