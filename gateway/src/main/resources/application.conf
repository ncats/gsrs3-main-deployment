##################################################################
# MAIN CONFIGURATION                                            ##
##################################################################

spring.application.name="gateway"

application.host="http://localhost:8080"
application.host=${?APPLICATION_HOST}

# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
#debug=true

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################

# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
management.health.rabbit.enabled: false

##################################################################
# EUREKA SETTINGS                                               ##
##################################################################

eureka.instance.hostname=${spring.application.name}
eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
#turn off eureka for now
eureka.client.enabled=false
eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}
ribbon.eureka.enabled=false

##################################################################
# API SETTINGS                                                  ##
##################################################################

substanceAPI.BaseUrl="http://localhost:8080/"
substanceAPI.BaseUrl=${?API_URL}
gsrs.microservice.adverseevents.api.baseURL=${substanceAPI.BaseUrl}"adverse-events"
gsrs.microservice.adverseevents.api.baseURL=${?MS_URL_ADVERSE_EVENTS}
gsrs.microservice.applications.api.baseURL=${substanceAPI.BaseUrl}"applications"
gsrs.microservice.applications.api.baseURL=${?MS_URL_APPLICATIONS}
gsrs.microservice.clinicaltrialsus.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
gsrs.microservice.clinicaltrialsus.api.baseURL=${?MS_URL_CLINICAL_TRIALS_US}
gsrs.microservice.clinicaltrialseurope.api.baseURL=${substanceAPI.BaseUrl}"clinical-trials"
gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS}
gsrs.microservice.clinicaltrialseurope.api.baseURL=${?MS_URL_CLINICAL_TRIALS_EUROPE}
gsrs.microservice.frontend.api.baseURL=${substanceAPI.BaseUrl}"frontend"
gsrs.microservice.frontend.api.baseURL=${?MS_URL_FRONTEND}
gsrs.microservice.impurities.api.baseURL=${substanceAPI.BaseUrl}"impurities"
gsrs.microservice.impurities.api.baseURL=${?MS_URL_IMPURITIES}
gsrs.microservice.products.api.baseURL=${substanceAPI.BaseUrl}"products"
gsrs.microservice.products.api.baseURL=${?MS_URL_PRODUCTS}
gsrs.microservice.substances.api.baseURL=${substanceAPI.BaseUrl}"substances"
gsrs.microservice.substances.api.baseURL=${?MS_URL_SUBSTANCES}

##################################################################
# ZUUL ROUTES CONFIGURATION                                     ##
##################################################################

zuul.routes = {
    "ui" = {
      "path" = "/ginas/app/beta/**",
      "url" = ${gsrs.microservice.frontend.api.baseURL}"/ginas/app/beta",
      "serviceId" = "frontend"
    },
    "root" = {
      "path" = "/",
      "url" = ${gsrs.microservice.frontend.api.baseURL}"/ginas/app/beta",
      "serviceId" = "root"
    },
    "ginas_app" = {
      "path" = "/ginas/app",
      "url" = ${gsrs.microservice.frontend.api.baseURL}"/ginas/app/beta",
      "serviceId" = "ginas_app"
    },
    #############################
    #START applications section
    #############################
    "applications_core" = {
      "path" = "/api/v1/applications/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applications",
      "serviceId" = "applications_core"
    },
    "applications_core_alt" = {
      "path" = "/api/v1/applications(**)/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applications",
      "serviceId" = "applications_core_alt"
    },
    "applications_all" = {
      "path" = "/api/v1/applicationsall/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsall",
      "serviceId" = "applications_all"
    },
    "applications_all_alt" = {
      "path" = "/api/v1/applicationsall(**)/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsall",
      "serviceId" = "applications_all_alt"
    },
    "applications_darrts" = {
      "path" = "/api/v1/applicationsdarrts/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsdarrts",
      "serviceId" = "applications_darrts"
    },
    "applications_darrts_alt" = {
      "path" = "/api/v1/applicationsdarrts(**)/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/applicationsdarrts",
      "serviceId" = "applications_darrts_alt"
    },
    "applications_searchcount" = {
      "path" = "/api/v1/searchcounts/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/searchcounts",
      "serviceId" = "applications_searchcount"
    },
    "applications_searchcount_alt" = {
      "path" = "/api/v1/searchcounts(**)/**",
      "url" = ${gsrs.microservice.applications.api.baseURL}"/api/v1/searchcounts",
      "serviceId" = "applications_searchcount"
    },
    #############################
    #END applications section
    #############################
    #############################
    #START products section
    #############################
    "products_core" = {
      "path" = "/api/v1/products/**",
      "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/products",
      "serviceId" = "products_core"
    },
    "products_core_alt" = {
      "path" = "/api/v1/products(**)/**",
      "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/products",
      "serviceId" = "products_core"
    },
    "products_all" = {
      "path" = "/api/v1/productsall/**",
      "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/productsall",
      "serviceId" = "products_all"
    },
    "products_all_alt" = {
      "path" = "/api/v1/productsall(**)/**",
      "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/productsall",
      "serviceId" = "products_all"
    },
    "products_elist" = {
      "path" = "/api/v1/productselist/**",
      "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/productselist",
      "serviceId" = "products_elist"
    },
    "products_elist_alt" = {
      "path" = "/api/v1/productselist(**)/**",
      "url" = ${gsrs.microservice.products.api.baseURL}"/api/v1/productselist",
      "serviceId" = "products_elist"
    },
    #############################
    #END products section
    #############################
    #############################
    #START impurities section
    #############################
    "impurities_core" = {
      "path" = "/api/v1/impurities/**",
      "url" = ${gsrs.microservice.impurities.api.baseURL}"/api/v1/impurities",
      "serviceId" = "impurities_core"
    },
    "impurities_core_alt" = {
      "path" = "/api/v1/impurities(**)/**",
      "url" = ${gsrs.microservice.impurities.api.baseURL}"/api/v1/impurities",
      "serviceId" = "impurities_core"
    },
    #############################
    #END impurities section
    #############################
    #############################
    #START clinical_trials section
    #############################
    "clinical_trials_us" = {
      "path" = "/api/v1/clinicaltrialsus/**",
      "url" = ${gsrs.microservice.clinicaltrialsus.api.baseURL}"/api/v1/clinicaltrialsus",
      "serviceId" = "clinical_trials_us"
    },
    "clinical_trials_us_alt" = {
      "path" = "/api/v1/clinicaltrialsus(**)/**",
      "url" = ${gsrs.microservice.clinicaltrialsus.api.baseURL}"/api/v1/clinicaltrialsus",
      "serviceId" = "clinical_trials_us"
    },
    "clinical_trials_europe" = {
      "path" = "/api/v1/clinicaltrialseurope/**",
      "url" = ${gsrs.microservice.clinicaltrialseurope.api.baseURL}"/api/v1/clinicaltrialseurope",
      "serviceId" = "clinical_trials_europe"
    },
    "clinical_trials_europe_alt" = {
      "path" = "/api/v1/clinicaltrialseurope(**)/**",
      "url" = ${gsrs.microservice.clinicaltrialseurope.api.baseURL}"/api/v1/clinicaltrialseurope",
      "serviceId" = "clinical_trials_europe"
    },
    #############################
    #END clinical_trials section
    #############################
    #############################
    #START adverse-eventpt section
    #############################
    "adverseeventpt_core" = {
       "path" = "/api/v1/adverseeventpt/**",
       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventpt",
       "serviceId" = "adverseeventpt_core"
    },
    "adverseeventpt_core_alt" = {
       "path" = "/api/v1/adverseeventpt(**)/**",
       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventpt",
       "serviceId" = "adverseeventpt_core"
    },
    "adverseeventdme_core" = {
       "path" = "/api/v1/adverseeventdme/**",
       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventdme",
       "serviceId" = "adverseeventdme_core"
    },
    "adverseeventdme_core_alt" = {
       "path" = "/api/v1/adverseeventdme(**)/**",
       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventdme",
       "serviceId" = "adverseeventdme_core"
    },
    "adverseeventcvm_core" = {
       "path" = "/api/v1/adverseeventcvm/**",
       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventcvm",
       "serviceId" = "adverseeventcvm_core"
    },
    "adverseeventcvm_core_alt" = {
       "path" = "/api/v1/adverseeventcvm(**)/**",
       "url" = ${gsrs.microservice.adverseevents.api.baseURL}"/api/v1/adverseeventcvm",
       "serviceId" = "adverseeventcvm_core"
    },
    #############################
    #END adverse-eventpt section
    #############################

    #fallback anything else goes to substances
    "legacy" = {
      "path" = "/**",
      "url" = ${gsrs.microservice.substances.api.baseURL},
      "serviceId" = "substances"
    }
}

zuul.sensitiveHeaders = ""
zuul.ignored-patterns = [
  "/actuator/health"
]

# Make sure microservices are given enoough time to perform tasks.
zuul.host.socket-timeout-millis=300000

#Keeps + encoded characters encoded as +
zuul.forceOriginalQueryStringEncoding=true

#management.endpoints.web.exposure.include="*"
management.endpoints.web.exposure.include="routes,filters"

spring.servlet.multipart.max-file-size=512MB
spring.servlet.multipart.max-request-size=512MB

##################################################################
# LEGACY AUTHENTICATION                                         ##
##################################################################

ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}

##################################################################
# CUSTOM CONFIGURATION                                          ##
##################################################################

include file("conf/gateway.conf")
