include "gsrs-core.conf"

ix.home="ginas.ix"
application.host="http://localhost:8081"
server.port=8089

spring.application.name="clinical-trials"

# Set to false when testing locally
gsrs.sessions.sessionSecure=false

# ix.ginas.export.path=/path/to/exports

gsrs.microservice.substances.api.baseURL="http://localhost:8081/"

# This is needed for RestTemplate/Export things to work well
gsrs.loopback.port=${server.port}


# Should be same folder as substances' exports
ix.ginas.export.path="../substances/exports"

# This should be commented out when running locally.
# errors when checking if a substance exists.
# gsrs.microservice.substances.api.headers= {
#                        "auth-username" ="admin",
#                        "auth-key"="myKey"
# }

# Turn off eureka for now
eureka.client.enabled=false

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################
# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
management.health.rabbit.enabled: false

# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
#debug=true
spring.main.allow-bean-definition-overriding=true

#this is how HOCON does default values
eureka.client.serviceUrl.defaultZone= "http://localhost:8761/eureka"

ix.h2 {
        base = ./${ix.home}/h2
      }

##################################################################
# SPECIFIC CLINICAL TRIAL CONFIGS                               ##
##################################################################

server.tomcat.relaxed-query-chars="<,>,[,\\,],^,`,{,|,}"
server.tomcat.relaxed-path-chars="<,>,[,\\,],^,`,{,|,}"

mygsrs.substanceAPI.baseUrl = "http://localhost:8080/"

mygsrs.clinicaltrial.us.substance.linking.keyType.value = "UUID"
mygsrs.clinicaltrial.us.substance.linking.keyType.agencyCodeValue = "BDNUM"

mygsrs.clinicaltrial.us.ClinicalTrial.trialNumberPattern = "^NCT\\d+$"
mygsrs.clinicaltrial.us.substanceKeyPatternRegex = "^[-0-9a-f]{36}$"
mygsrs.clinicaltrial.us.agencySubstanceKeyTypeValue = "BDNUM";
mygsrs.clinicaltrial.us.skipSubstanceValidation = false

mygsrs.clinicaltrial.eu.ClinicalTrialEurope.trialNumberPattern = "^\\d{4}-\\d{6}-\\d{2}-[A-Z]{2}$"
mygsrs.clinicaltrial.eu.substanceKeyPatternRegex = "^[-0-9a-f]{36}$"
mygsrs.clinicaltrial.eu.agencySubstanceKeyTypeValue = "BDNUM";
mygsrs.clinicaltrial.eu.skipSubstanceValidation = false

mygsrs.clinicaltrial.cvUrl = application.host

##################################################################
# DATABASE CONNECTION                                           ##
##################################################################

# H2 Database Connections

spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;AUTO_SERVER=TRUE"
spring.datasource.driverClassName="org.h2.Driver"
spring.jpa.database-platform="org.hibernate.dialect.H2Dialect"
spring.jpa.generate-ddl=false
# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.hibernate.show-sql=false
# Uncomment when NOT testing
# spring.jpa.generate-ddl=false
# spring.jpa.hibernate.ddl-auto=none
# spring.hibernate.show-sql=false

clinicaltrial.datasource.url="jdbc:h2:file:./ginas.ix/h2/ctdb;AUTO_SERVER=TRUE"
clinicaltrial.datasource.driverClassName="org.h2.Driver"
clinicaltrial.datasource.username="sa"
clinicaltrial.datasource.password=""
clinicaltrial.jpa.database-platform="org.hibernate.dialect.H2Dialect"
clinicaltrial.jpa.generate-ddl=false
# Hibernate ddl auto (none, create, create-drop, validate, update)
clinicaltrial.jpa.hibernate.ddl-auto=update
clinicaltrial.hibernate.show-sql=true
# Uncomment when NOT testing
# clinicaltrial.jpa.generate-ddl=false
# clinicaltrial.jpa.hibernate.ddl-auto=none
# clinicaltrial.hibernate.show-sql=false


##################################################################
# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
##################################################################

gsrs.validators.clinicaltrialsus = [
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnCreateValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnUpdateValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralSubstancesValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.SubstancesExistValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.RequiredFieldNonNullValidator",
                 "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
            },
        ]

gsrs.validators.clinicaltrialseurope = [
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateUpdateDateOnUpdateIfNullValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateDateOnCreateIfNullValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnCreateValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnUpdateValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralSubstancesValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.SubstancesExistValidator",
                "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
            },
            {
                "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.RequiredFieldNonNullValidator",
                 "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
            },
        ]

gsrs.entityProcessors = [
{
        "class" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
		"processor" = "gov.hhs.gsrs.clinicaltrial.us.entityProcessor.ClinicalTrialUSProcessor"
},
{
        "class" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
		"processor" = "gov.hhs.gsrs.clinicaltrial.europe.entityProcessor.ClinicalTrialEuropeProcessor"
}
]

# General Indexers
gsrs.indexers.list += {"indexer" = "gov.hhs.gsrs.clinicaltrial.us.indexers.ClinicalTrialUSCommonIndexValueMaker"}
gsrs.indexers.list += {"indexer" = "gov.hhs.gsrs.clinicaltrial.europe.indexers.ClinicalTrialEuropeCommonIndexValueMaker"}

# For cross indexing substance-browse to clinical trials
gsrs.indexers.list += {
  "indexer" = "gov.hhs.gsrs.clinicaltrial.us.indexers.ClinicalTrialUSEntityLinkIndexValueMaker"
}
gsrs.indexers.list += {
  "indexer" = "gov.hhs.gsrs.clinicaltrial.europe.indexers.ClinicalTrialEuropeEntityLinkIndexValueMaker"
}

# Factories
ix.ginas.export.factories.clinicaltrialsus = [
	"gov.hhs.gsrs.clinicaltrial.us.exporters.ClinicalTrialUSExporterFactory"
]
ix.ginas.export.factories.clinicaltrialseurope=[
	"gov.hhs.gsrs.clinicaltrial.europe.exporters.ClinicalTrialEuropeExporterFactory"
]

