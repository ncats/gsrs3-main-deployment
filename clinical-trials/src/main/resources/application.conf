include "gsrs-core.conf"

##################################################################
# MAIN CONFIGURATION                                            ##
##################################################################

spring.application.name="clinical-trials"
server.servlet.context-path="/"${spring.application.name}
ix.home=${spring.application.name}".ix"

application.host="http://localhost:8080"
application.host=${?APPLICATION_HOST}

# Secure session off for dev, but if using HTTPS it's better to have it on
gsrs.sessions.sessionSecure=false

# Since this currently extends substances, we must turn off molwitch
# or else need to implement it
gsrs.substances.molwitch.enabled=false

# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
#debug=true
spring.main.allow-bean-definition-overriding=true

##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################

# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
management.health.rabbit.enabled: false

##################################################################
# EUREKA SETTINGS                                               ##
##################################################################

eureka.instance.hostname=${spring.application.name}
eureka.client.serviceUrl.defaultZone="http://localhost:8761/eureka"
eureka.client.serviceUrl.defaultZone=${?EUREKA_SERVICE_URL}
#turn off eureka for now
eureka.client.enabled=false
eureka.client.enabled=${?EUREKA_CLIENT_ENABLED}

##################################################################
# SUBSTANCES DATABASE CONNECTION                                ##
##################################################################

spring.datasource.url="jdbc:h2:file:substances.ix/h2/sprinxight;MODE=Oracle;AUTO_SERVER=TRUE"
spring.datasource.url=${?DB_URL_SUBSTANCES}
spring.datasource.username=${?DB_USERNAME}
spring.datasource.password=${?DB_PASSWORD}
spring.datasource.connectionTimeout=120000
spring.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
spring.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
spring.jpa.database-platform=${?DB_DIALECT}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
spring.hibernate.show-sql=false

##################################################################
# DATABASE CONNECTION                                           ##
##################################################################

ix.h2 {
        base = ./${ix.home}/h2
      }

clinicaltrial.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;MODE=Oracle;AUTO_SERVER=TRUE"
clinicaltrial.datasource.url=${?DB_URL_CLINICAL_TRIALS}
clinicaltrial.datasource.username=${?DB_USERNAME}
clinicaltrial.datasource.password=${?DB_PASSWORD}
clinicaltrial.datasource.connectionTimeout=120000
clinicaltrial.datasource.connectionTimeout=${?DB_CONNECTION_TIMEOUT}
clinicaltrial.datasource.maximumPoolSize=${?DB_MAXIMUM_POOL_SIZE}
clinicaltrial.jpa.database-platform=${?DB_DIALECT}
clinicaltrial.jpa.hibernate.ddl-auto=update
clinicaltrial.jpa.hibernate.ddl-auto=${?DB_DDL_AUTO}
clinicaltrial.jpa.hibernate.use-new-id-generator-mappings=${?DB_USE_NEW_ID_GENERATOR_MAPPINGS}
clinicaltrial.hibernate.show-sql=false

##################################################################
# API SETTINGS                                                  ##
##################################################################

substanceAPI.BaseUrl="http://localhost:8080/"
substanceAPI.BaseUrl=${?API_URL}
gsrs.microservice.substances.api.baseURL=${substanceAPI.BaseUrl}
gsrs.microservice.substances.api.baseURL=${?MS_API_URL}

##################################################################
# SPECIFIC CLINICAL TRIAL CONFIGS                               ##
##################################################################

mygsrs.substanceAPI.baseUrl = ${substanceAPI.baseUrl}

mygsrs.clinicaltrial.us.substance.linking.keyType.value = "UUID"
mygsrs.clinicaltrial.us.substance.linking.keyType.agencyCodeValue = "BDNUM"
mygsrs.clinicaltrial.us.substance.linking.keyType.agencyCodeValue = ${CT_CODE_SYSTEM}

mygsrs.clinicaltrial.us.ClinicalTrial.trialNumberPattern = "^NCT\\d+$"
mygsrs.clinicaltrial.us.substanceKeyPatternRegex = "^[-0-9a-f]{36}$"
mygsrs.clinicaltrial.us.agencySubstanceKeyTypeValue = "BDNUM"
mygsrs.clinicaltrial.us.agencySubstanceKeyTypeValue = ${CT_CODE_SYSTEM}
mygsrs.clinicaltrial.us.skipSubstanceValidation = false

mygsrs.clinicaltrial.eu.ClinicalTrialEurope.trialNumberPattern = "^\\d{4}-\\d{6}-\\d{2}-[A-Z]{2}$"
mygsrs.clinicaltrial.eu.substanceKeyPatternRegex = "^[-0-9a-f]{36}$"
mygsrs.clinicaltrial.eu.agencySubstanceKeyTypeValue = "BDNUM"
mygsrs.clinicaltrial.eu.agencySubstanceKeyTypeValue = ${CT_CODE_SYSTEM}
mygsrs.clinicaltrial.eu.skipSubstanceValidation = false

mygsrs.clinicaltrial.cvUrl = ${?application.host}

##################################################################
# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
##################################################################

gsrs.validators.clinicaltrialsus = [
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnCreateValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralTrialOnUpdateValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.GeneralSubstancesValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.SubstancesExistValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.us.validators.RequiredFieldNonNullValidator",
         "newObjClass" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
    },
]

gsrs.validators.clinicaltrialseurope = [
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateUpdateDateOnUpdateIfNullValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialSetCreateDateOnCreateIfNullValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnCreateValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralTrialOnUpdateValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.GeneralSubstancesValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.SubstancesExistValidator",
        "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
    },
    {
        "validatorClass" = "gov.hhs.gsrs.clinicaltrial.europe.validators.RequiredFieldNonNullValidator",
         "newObjClass" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
    },
]

gsrs.entityProcessors = [
    {
        "class" = "gov.hhs.gsrs.clinicaltrial.us.models.ClinicalTrialUS",
        "processor" = "gov.hhs.gsrs.clinicaltrial.us.entityProcessor.ClinicalTrialUSProcessor"
    },
    {
        "class" = "gov.hhs.gsrs.clinicaltrial.europe.models.ClinicalTrialEurope",
        "processor" = "gov.hhs.gsrs.clinicaltrial.europe.entityProcessor.ClinicalTrialEuropeProcessor"
    }
]

# General Indexers
gsrs.indexers.list += {"indexer" = "gov.hhs.gsrs.clinicaltrial.us.indexers.ClinicalTrialUSCommonIndexValueMaker"}
gsrs.indexers.list += {"indexer" = "gov.hhs.gsrs.clinicaltrial.europe.indexers.ClinicalTrialEuropeCommonIndexValueMaker"}

# For cross indexing substance-browse to clinical trials
gsrs.indexers.list += {
    "indexer" = "gov.hhs.gsrs.clinicaltrial.us.indexers.ClinicalTrialUSEntityLinkIndexValueMaker"
}
gsrs.indexers.list += {
    "indexer" = "gov.hhs.gsrs.clinicaltrial.europe.indexers.ClinicalTrialEuropeEntityLinkIndexValueMaker"
}

# Factories
ix.ginas.export.factories.clinicaltrialsus = [
    "gov.hhs.gsrs.clinicaltrial.us.exporters.ClinicalTrialUSExporterFactory"
]
ix.ginas.export.factories.clinicaltrialseurope=[
    "gov.hhs.gsrs.clinicaltrial.europe.exporters.ClinicalTrialEuropeExporterFactory"
]

##################################################################
# LEGACY AUTHENTICATION                                         ##
##################################################################

ix.authentication.allownonauthenticated = ${?AUTH_ALLOW_NONAUTH}
ix.authentication.autoregister = ${?AUTH_AUTOREGISTER}
ix.authentication.autoregisteractive = ${?AUTH_AUTOREGISTERACTIVE}
ix.authentication.sysadmin-email = ${?AUTH_SYSADMIN_EMAIL}
ix.authentication.trustheader = ${?AUTH_TRUST_HEADER}
ix.authentication.usernameheader = ${?AUTH_USERNAME_HEADER}
ix.authentication.useremailheader = ${?AUTH_EMAIL_HEADER}
ix.authentication.userrolesheader = ${?AUTH_ROLES_HEADER}

##################################################################
# CUSTOM CONFIGURATION                                          ##
##################################################################

include file("conf/clinical-trials.conf")
